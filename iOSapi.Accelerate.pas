{ *********************************************************** }
{ }
{ CodeGear Delphi Runtime Library }
{ }
{ Copyright(c) 2012-2014 Embarcadero Technologies, Inc. }
{ }
{ *********************************************************** }

//
// Delphi-Objective-C Bridge
// Interfaces for Cocoa framework Accelerate
//

unit iOSapi.Accelerate;

interface

uses
  Macapi.CoreFoundation,
  Macapi.CoreServices,
  Macapi.Dispatch,
  Macapi.Foundation,
  Macapi.Mach,
  Macapi.ObjCRuntime,
  Macapi.ObjectiveC,
  Macapi.QuartzCore,
  iOSapi.CocoaTypes,
  iOSapi.CoreGraphics,
  iOSapi.CoreVideo,
  iOSapi.Foundation;

const
  kFFTDirection_Forward = +1;
  kFFTDirection_Inverse = -1;
  kFFTRadix2 = 0;
  kFFTRadix3 = 1;
  kFFTRadix5 = 2;
  vDSP_HALF_WINDOW = 1;
  vDSP_HANN_DENORM = 0;
  vDSP_HANN_NORM = 2;
  vDSP_DFT_FORWARD = +1;
  vDSP_DFT_INVERSE = -1;
  vDSP_DCT_II = 2;
  vDSP_DCT_III = 3;
  vDSP_DCT_IV = 4;
  FFT_FORWARD = kFFTDirection_Forward;
  FFT_INVERSE = kFFTDirection_Inverse;
  FFT_RADIX2 = kFFTRadix2;
  FFT_RADIX3 = kFFTRadix3;
  FFT_RADIX5 = kFFTRadix5;
  CblasRowMajor = 101;
  CblasColMajor = 102;
  CblasNoTrans = 111;
  CblasTrans = 112;
  CblasConjTrans = 113;
  AtlasConj = 114;
  CblasUpper = 121;
  CblasLower = 122;
  CblasNonUnit = 131;
  CblasUnit = 132;
  CblasLeft = 141;
  CblasRight = 142;
  SPARSE_SUCCESS = 0;
  SPARSE_ILLEGAL_PARAMETER = -1000;
  SPARSE_CANNOT_SET_PROPERTY = -1001;
  SPARSE_SYSTEM_ERROR = -1002;
  SPARSE_UPPER_TRIANGULAR = 1;
  SPARSE_LOWER_TRIANGULAR = 2;
  SPARSE_UPPER_SYMMETRIC = 4;
  SPARSE_LOWER_SYMMETRIC = 8;
  SPARSE_NORM_ONE = 171;
  SPARSE_NORM_TWO = 173;
  SPARSE_NORM_INF = 175;
  SPARSE_NORM_R1 = 179;
  kvImageNoError = 0;
  kvImageRoiLargerThanInputBuffer = -21766;
  kvImageInvalidKernelSize = -21767;
  kvImageInvalidEdgeStyle = -21768;
  kvImageInvalidOffset_X = -21769;
  kvImageInvalidOffset_Y = -21770;
  kvImageMemoryAllocationError = -21771;
  kvImageNullPointerArgument = -21772;
  kvImageInvalidParameter = -21773;
  kvImageBufferSizeMismatch = -21774;
  kvImageUnknownFlagsBit = -21775;
  kvImageInternalError = -21776;
  kvImageInvalidRowBytes = -21777;
  kvImageInvalidImageFormat = -21778;
  kvImageColorSyncIsAbsent = -21779;
  kvImageOutOfPlaceOperationRequired = -21780;
  kvImageInvalidImageObject = -21781;
  kvImageInvalidCVImageFormat = -21782;
  kvImageUnsupportedConversion = -21783;
  kvImageCoreVideoIsAbsent = -21784;
  kvImageNoFlags = 0;
  kvImageLeaveAlphaUnchanged = 1;
  kvImageCopyInPlace = 2;
  kvImageBackgroundColorFill = 4;
  kvImageEdgeExtend = 8;
  kvImageDoNotTile = 16;
  kvImageHighQualityResampling = 32;
  kvImageTruncateKernel = 64;
  kvImageGetTempBufferSize = 128;
  kvImagePrintDiagnosticsToConsole = 256;
  kvImageNoAllocate = 512;
  kvImageHDRContent = 1024;
  kvImageDoNotClamp = 2048;
  kvImageARGB8888 = 0;
  kvImageARGB16U = 1;
  kvImageARGB16Q12 = 2;
  kvImage422CbYpCrYp8 = 0;
  kvImage422YpCbYpCr8 = 1;
  kvImage422CbYpCrYp8_AA8 = 2;
  kvImage420Yp8_Cb8_Cr8 = 3;
  kvImage420Yp8_CbCr8 = 4;
  kvImage444AYpCbCr8 = 5;
  kvImage444CrYpCb8 = 6;
  kvImage444CbYpCrA8 = 7;
  kvImage444CrYpCb10 = 8;
  kvImage422CrYpCbYpCbYpCbYpCrYpCrYp10 = 9;
  kvImage422CbYpCrYp16 = 13;
  kvImage444AYpCbCr16 = 14;
  kvImageConvert_DitherNone = 0;
  kvImageConvert_DitherOrdered = 1;
  kvImageConvert_DitherOrderedReproducible = 2;
  kvImageConvert_DitherFloydSteinberg = 3;
  kvImageConvert_DitherAtkinson = 4;
  kvImageConvert_OrderedGaussianBlue = 0;
  kvImageConvert_OrderedUniformBlue = (1 shl 28);
  kvImageConvert_OrderedNoiseShapeMask = (15 shl 28);
  kRotate0DegreesClockwise = 0;
  kRotate90DegreesClockwise = 3;
  kRotate180DegreesClockwise = 2;
  kRotate270DegreesClockwise = 1;
  kRotate0DegreesCounterClockwise = 0;
  kRotate90DegreesCounterClockwise = 1;
  kRotate180DegreesCounterClockwise = 2;
  kRotate270DegreesCounterClockwise = 3;
  kvImage_PNG_FILTER_VALUE_NONE = 0;
  kvImage_PNG_FILTER_VALUE_SUB = 1;
  kvImage_PNG_FILTER_VALUE_UP = 2;
  kvImage_PNG_FILTER_VALUE_AVG = 3;
  kvImage_PNG_FILTER_VALUE_PAETH = 4;
  kvImageGamma_UseGammaValue = 0;
  kvImageGamma_UseGammaValue_half_precision = 1;
  kvImageGamma_5_over_9_half_precision = 2;
  kvImageGamma_9_over_5_half_precision = 3;
  kvImageGamma_5_over_11_half_precision = 4;
  kvImageGamma_11_over_5_half_precision = 5;
  kvImageGamma_sRGB_forward_half_precision = 6;
  kvImageGamma_sRGB_reverse_half_precision = 7;
  kvImageGamma_11_over_9_half_precision = 8;
  kvImageGamma_9_over_11_half_precision = 9;
  kvImageGamma_BT709_forward_half_precision = 10;
  kvImageGamma_BT709_reverse_half_precision = 11;
  kvImageMDTableHint_16Q12 = 1;
  kvImageMDTableHint_Float = 2;
  kvImageNoInterpolation = 0;
  kvImageFullInterpolation = 1;
  kvImageHalfInterpolation = 2;
  kvImageBufferTypeCode_EndOfList = 0;
  kvImageBufferTypeCode_ColorSpaceChannel1 = 1;
  kvImageBufferTypeCode_ColorSpaceChannel2 = 2;
  kvImageBufferTypeCode_ColorSpaceChannel3 = 3;
  kvImageBufferTypeCode_ColorSpaceChannel4 = 4;
  kvImageBufferTypeCode_ColorSpaceChannel5 = 5;
  kvImageBufferTypeCode_ColorSpaceChannel6 = 6;
  kvImageBufferTypeCode_ColorSpaceChannel7 = 7;
  kvImageBufferTypeCode_ColorSpaceChannel8 = 8;
  kvImageBufferTypeCode_ColorSpaceChannel9 = 9;
  kvImageBufferTypeCode_ColorSpaceChannel10 = 10;
  kvImageBufferTypeCode_ColorSpaceChannel11 = 11;
  kvImageBufferTypeCode_ColorSpaceChannel12 = 12;
  kvImageBufferTypeCode_ColorSpaceChannel13 = 13;
  kvImageBufferTypeCode_ColorSpaceChannel14 = 14;
  kvImageBufferTypeCode_ColorSpaceChannel15 = 15;
  kvImageBufferTypeCode_ColorSpaceChannel16 = 16;
  kvImageBufferTypeCode_Alpha = 17;
  kvImageBufferTypeCode_Indexed = 18;
  kvImageBufferTypeCode_CVPixelBuffer_YCbCr = 19;
  kvImageBufferTypeCode_Luminance = 20;
  kvImageBufferTypeCode_Chroma = 21;
  kvImageBufferTypeCode_Cb = 22;
  kvImageBufferTypeCode_Cr = 23;
  kvImageBufferTypeCode_CGFormat = 24;
  kvImageBufferTypeCode_Chunky = 25;
  kvImageBufferTypeCode_UniqueFormatCount = 26;
  kvImageBufferTypeCode_Monochrome = kvImageBufferTypeCode_ColorSpaceChannel1;
  kvImageBufferTypeCode_RGB_Red = kvImageBufferTypeCode_ColorSpaceChannel1;
  kvImageBufferTypeCode_RGB_Green = kvImageBufferTypeCode_ColorSpaceChannel2;
  kvImageBufferTypeCode_RGB_Blue = kvImageBufferTypeCode_ColorSpaceChannel3;
  kvImageBufferTypeCode_CMYK_Cyan = kvImageBufferTypeCode_ColorSpaceChannel1;
  kvImageBufferTypeCode_CMYK_Magenta = kvImageBufferTypeCode_ColorSpaceChannel2;
  kvImageBufferTypeCode_CMYK_Yellow = kvImageBufferTypeCode_ColorSpaceChannel3;
  kvImageBufferTypeCode_CMYK_Black = kvImageBufferTypeCode_ColorSpaceChannel4;
  kvImageBufferTypeCode_XYZ_X = kvImageBufferTypeCode_ColorSpaceChannel1;
  kvImageBufferTypeCode_XYZ_Y = kvImageBufferTypeCode_ColorSpaceChannel2;
  kvImageBufferTypeCode_XYZ_Z = kvImageBufferTypeCode_ColorSpaceChannel3;
  kvImageBufferTypeCode_LAB_L = kvImageBufferTypeCode_ColorSpaceChannel1;
  kvImageBufferTypeCode_LAB_A = kvImageBufferTypeCode_ColorSpaceChannel2;
  kvImageBufferTypeCode_LAB_B = kvImageBufferTypeCode_ColorSpaceChannel3;
  kvImageCVImageFormat_NoError = 0;
  kvImageCVImageFormat_ConversionMatrix = -21600;
  kvImageCVImageFormat_ChromaSiting = -21601;
  kvImageCVImageFormat_ColorSpace = -21602;
  kvImageCVImageFormat_VideoChannelDescription = -21603;
  kvImageCVImageFormat_AlphaIsOneHint = -21604;
  kvImageMatrixType_None = 0;
  kvImageMatrixType_ARGBToYpCbCrMatrix = 1;

type
  // ===== Framework typedefs =====
{$M+}
  vUInt8 = array [0 .. 15] of Byte { Type::Vector };
  vSInt8 = array [0 .. 15] of Byte { Type::Vector };
  vUInt16 = array [0 .. 15] of Byte { Type::Vector };
  vSInt16 = array [0 .. 15] of Byte { Type::Vector };
  vUInt32 = array [0 .. 15] of Byte { Type::Vector };
  vSInt32 = array [0 .. 15] of Byte { Type::Vector };
  vSInt64 = array [0 .. 15] of Byte { Type::Vector };
  vUInt64 = array [0 .. 15] of Byte { Type::Vector };
  vFloat = array [0 .. 15] of Byte { Type::Vector };
  vDouble = array [0 .. 15] of Byte { Type::Vector };
  vBool32 = array [0 .. 15] of Byte { Type::Vector };
  vDSP_Length = LongWord;
  PvDSP_Length = ^vDSP_Length;

  vDSP_Stride = LongInt;
  PvDSP_Stride = ^vDSP_Stride;

  DSPComplex = record
    real: Single;
    imag: Single;
  end;

  PDSPComplex = ^DSPComplex;

  DSPDoubleComplex = record
    real: Double;
    imag: Double;
  end;

  PDSPDoubleComplex = ^DSPDoubleComplex;

  DSPSplitComplex = record
    realp: PSingle;
    imagp: PSingle;
  end;

  PDSPSplitComplex = ^DSPSplitComplex;

  DSPDoubleSplitComplex = record
    realp: PDouble;
    imagp: PDouble;
  end;

  PDSPDoubleSplitComplex = ^DSPDoubleSplitComplex;

  FFTDirection = Integer;
  PFFTDirection = ^FFTDirection;

  FFTRadix = Integer;
  PFFTRadix = ^FFTRadix;

  vDSP_uint24 = record
    bytes: array [0 .. 2] of Byte;
  end;

  PvDSP_uint24 = ^vDSP_uint24;

  vDSP_int24 = record
    bytes: array [0 .. 2] of Byte;
  end;

  PvDSP_int24 = ^vDSP_int24;

  FFTSetup = Pointer;
  FFTSetupD = Pointer;
  vDSP_biquad_Setup = Pointer;
  vDSP_biquad_SetupD = Pointer;
  vDSP_biquadm_Setup = Pointer;
  vDSP_biquadm_SetupD = Pointer;
  vDSP_DFT_Setup = Pointer;
  vDSP_DFT_SetupD = Pointer;
  vDSP_DFT_Direction = Integer;
  vDSP_DCT_Type = Integer;

  COMPLEX = DSPComplex;

  COMPLEX_SPLIT = DSPSplitComplex;

  DOUBLE_COMPLEX = DSPDoubleComplex;

  DOUBLE_COMPLEX_SPLIT = DSPDoubleSplitComplex;

  BLASParamErrorProc = procedure(param1: MarshaledAString;
    param2: MarshaledAString; param3: PInteger; param4: PInteger); cdecl;
  __CLPK_integer = LongInt;
  P__CLPK_integer = ^__CLPK_integer;

  __CLPK_logical = LongInt;
  P__CLPK_logical = ^__CLPK_logical;

  __CLPK_real = Single;
  P__CLPK_real = ^__CLPK_real;

  __CLPK_doublereal = Double;
  P__CLPK_doublereal = ^__CLPK_doublereal;

  __CLPK_L_fp = function(): __CLPK_logical; cdecl;
  __CLPK_ftnlen = LongInt;
  P__CLPK_ftnlen = ^__CLPK_ftnlen;

  __CLPK_complex = record
    r: __CLPK_real;
    i: __CLPK_real;
  end;

  P__CLPK_complex = ^__CLPK_complex;

  __CLPK_doublecomplex = record
    r: __CLPK_doublereal;
    i: __CLPK_doublereal;
  end;

  P__CLPK_doublecomplex = ^__CLPK_doublecomplex;

  la_attribute_t = LongWord;
  Pla_attribute_t = ^la_attribute_t;

  la_status_t = LongInt;
  Pla_status_t = ^la_status_t;

  la_scalar_type_t = Cardinal;
  Pla_scalar_type_t = ^la_scalar_type_t;

  la_count_t = LongWord;
  Pla_count_t = ^la_count_t;

  la_index_t = LongInt;
  Pla_index_t = ^la_index_t;

  la_deallocator_t = procedure(param1: Pointer); cdecl;
  la_object_t = Pointer;
  la_hint_t = LongWord;
  Pla_hint_t = ^la_hint_t;

  la_norm_t = LongWord;
  Pla_norm_t = ^la_norm_t;

  sparse_matrix_float = Pointer;
  sparse_matrix_double = Pointer;
  sparse_dimension = UInt64;
  sparse_stride = Int64;
  sparse_index = Int64;
  sparse_status = Integer;
  sparse_matrix_property = Cardinal;
  sparse_norm = Cardinal;
__float_complex_t = { <Type::Complex> from float };
__double_complex_t = { <Type::Complex> from double };
vImagePixelCount = LongWord;
PvImagePixelCount = ^vImagePixelCount;

__darwin_size_t = LongWord;

vImage_Buffer = record data: Pointer;
height:
vImagePixelCount;
width:
vImagePixelCount;
rowBytes:
LongWord;
end;
PvImage_Buffer = ^vImage_Buffer;

vImage_AffineTransform = record a: Single;
b:
Single;
c:
Single;
d:
Single;
tx:
Single;
ty:
Single;
end;
PvImage_AffineTransform = ^vImage_AffineTransform;

vImage_AffineTransform_Double = record a: Double;
b:
Double;
c:
Double;
d:
Double;
tx:
Double;
ty:
Double;
end;
PvImage_AffineTransform_Double = ^vImage_AffineTransform_Double;

vImage_CGAffineTransform = vImage_AffineTransform;

Pixel_8 = Byte;
Pixel_F = Single;
PPixel_F = ^Pixel_F;

Pixel_8888 = array [0 .. 3] of Byte;
Pixel_FFFF = array [0 .. 3] of Single;
Pixel_16U = Word;
Pixel_16S = Int16;
Pixel_16Q12 = Int16;
Pixel_ARGB_16U = array [0 .. 3] of Word;
Pixel_ARGB_16S = array [0 .. 3] of Int16;
ResamplingFilter = Pointer;
GammaFunction = Pointer;
__darwin_ssize_t = LongInt;
vImage_Error = Integer;
vImage_Flags = LongWord;
vImageConverterRef = Pointer;
vImageCVImageFormatRef = Pointer;
vImageConstCVImageFormatRef = Pointer;
vImageARGBType = Cardinal;
vImageYpCbCrType = Cardinal;

vImage_YpCbCrToARGBMatrix = record Yp: Single;
Cr_R:
Single;
Cr_G:
Single;
Cb_G:
Single;
Cb_B:
Single;
end;
PvImage_YpCbCrToARGBMatrix = ^vImage_YpCbCrToARGBMatrix;

vImage_YpCbCrToARGB = record opaque: array [0 .. 127] of Byte;
end;
PvImage_YpCbCrToARGB = ^vImage_YpCbCrToARGB;

vImage_ARGBToYpCbCrMatrix = record R_Yp: Single;
G_Yp:
Single;
B_Yp:
Single;
R_Cb:
Single;
G_Cb:
Single;
B_Cb_R_Cr:
Single;
G_Cr:
Single;
B_Cr:
Single;
end;
PvImage_ARGBToYpCbCrMatrix = ^vImage_ARGBToYpCbCrMatrix;

vImage_ARGBToYpCbCr = record opaque: array [0 .. 127] of Byte;
end;
PvImage_ARGBToYpCbCr = ^vImage_ARGBToYpCbCr;

vImage_YpCbCrPixelRange = record Yp_bias: Int32;
CbCr_bias:
Int32;
YpRangeMax:
Int32;
CbCrRangeMax:
Int32;
YpMax:
Int32;
YpMin:
Int32;
CbCrMax:
Int32;
CbCrMin:
Int32;
end;
PvImage_YpCbCrPixelRange = ^vImage_YpCbCrPixelRange;

TAccelerateKernelFunc =
procedure(param1: PSingle; param2: PSingle; param3: LongWord; param4: Pointer);
cdecl;
vImage_MultidimensionalTable = Pointer;
vImageMDTableUsageHint = Cardinal;
vImage_InterpolationMethod = Cardinal;
CGColorSpaceRef = Pointer;
CGBitmapInfo = LongWord;
CGColorRenderingIntent = Int32;

vImage_CGImageFormat = record bitsPerComponent: LongWord;
bitsPerPixel:
LongWord;
colorSpace:
CGColorSpaceRef;
bitmapInfo:
CGBitmapInfo;
version:
LongWord;
decode:
PCGFloat;
renderingIntent:
CGColorRenderingIntent;
end;
PvImage_CGImageFormat = ^vImage_CGImageFormat;

CGFloat = Single;
CGSize = CGSize = record width: CGFloat;
height:
CGFloat;
end;
PCGSize = ^CGSize;;
Boolean = Byte;
CGImageRef = Pointer;
TAccelerateCallback =
procedure(param1: Pointer; param2: Pointer);
cdecl;
CFTypeRef = Pointer;
vImageBufferTypeCode = LongWord;
CVBufferRef = Pointer;
CVImageBufferRef = CVBufferRef;
CVPixelBufferRef = CVImageBufferRef;
CFStringRef = Pointer;
vImageCVImageFormatError = Integer;

vImageChannelDescription = record min: CGFloat;
zero:
CGFloat;
full:
CGFloat;
max:
CGFloat;
end;
PvImageChannelDescription = ^vImageChannelDescription;

vImageMatrixType = LongWord;
TAccelerateUserDataReleaseCallback =
procedure(param1: vImageCVImageFormatRef; param2: Pointer);
cdecl;

vImageTransferFunction = record c0: CGFloat;
c1:
CGFloat;
c2:
CGFloat;
c3:
CGFloat;
gamma:
CGFloat;
cutoff:
CGFloat;
c4:
CGFloat;
c5:
CGFloat;
end;
PvImageTransferFunction = ^vImageTransferFunction;

vImageRGBPrimaries = record red_x: Single;
green_x:
Single;
blue_x:
Single;
white_x:
Single;
red_y:
Single;
green_y:
Single;
blue_y:
Single;
white_y:
Single;
end;
PvImageRGBPrimaries = ^vImageRGBPrimaries;

vImageWhitePoint = record white_x: Single;
white_y:
Single;
end;
PvImageWhitePoint = ^vImageWhitePoint;

// ===== Exported string consts =====

function kvImage_YpCbCrToARGBMatrix_ITU_R_601_4: Pointer;
  function kvImage_YpCbCrToARGBMatrix_ITU_R_709_2: Pointer;
    function kvImage_ARGBToYpCbCrMatrix_ITU_R_601_4: Pointer;
      function kvImage_ARGBToYpCbCrMatrix_ITU_R_709_2: Pointer;
        function kvImageDecodeArray_16Q12Format: Pointer;


        // ===== External functions =====

        const
          libAccelerate =
            '/System/Library/Frameworks/Accelerate.framework/Accelerate';
        function vDSP_create_fftsetup(__Log2n: vDSP_Length; __Radix: FFTRadix)
          : FFTSetup; cdecl;
          external libAccelerate name _PU + 'vDSP_create_fftsetup';
        procedure vDSP_destroy_fftsetup(__setup: FFTSetup); cdecl;
          external libAccelerate name _PU + 'vDSP_destroy_fftsetup';
        function vDSP_create_fftsetupD(__Log2n: vDSP_Length; __Radix: FFTRadix)
          : FFTSetupD; cdecl;
          external libAccelerate name _PU + 'vDSP_create_fftsetupD';
        procedure vDSP_destroy_fftsetupD(__setup: FFTSetupD); cdecl;
          external libAccelerate name _PU + 'vDSP_destroy_fftsetupD';
        function vDSP_biquad_CreateSetup(__Coefficients: PDouble;
          __M: vDSP_Length): vDSP_biquad_Setup; cdecl;
          external libAccelerate name _PU + 'vDSP_biquad_CreateSetup';
        function vDSP_biquad_CreateSetupD(__Coefficients: PDouble;
          __M: vDSP_Length): vDSP_biquad_SetupD; cdecl;
          external libAccelerate name _PU + 'vDSP_biquad_CreateSetupD';
        procedure vDSP_biquad_DestroySetup(__setup: vDSP_biquad_Setup); cdecl;
          external libAccelerate name _PU + 'vDSP_biquad_DestroySetup';
        procedure vDSP_biquad_DestroySetupD(__setup: vDSP_biquad_SetupD); cdecl;
          external libAccelerate name _PU + 'vDSP_biquad_DestroySetupD';
        function vDSP_biquadm_CreateSetup(__coeffs: PDouble; __M: vDSP_Length;
          __N: vDSP_Length): vDSP_biquadm_Setup; cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_CreateSetup';
        function vDSP_biquadm_CreateSetupD(__coeffs: PDouble; __M: vDSP_Length;
          __N: vDSP_Length): vDSP_biquadm_SetupD; cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_CreateSetupD';
        procedure vDSP_biquadm_DestroySetup(__setup: vDSP_biquadm_Setup); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_DestroySetup';
        procedure vDSP_biquadm_DestroySetupD(__setup: vDSP_biquadm_SetupD);
          cdecl; external libAccelerate name _PU + 'vDSP_biquadm_DestroySetupD';
        procedure vDSP_biquadm_CopyState(__dest: vDSP_biquadm_Setup;
          __src: Pointer); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_CopyState';
        procedure vDSP_biquadm_CopyStateD(__dest: vDSP_biquadm_SetupD;
          __src: Pointer); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_CopyStateD';
        procedure vDSP_biquadm_ResetState(__setup: vDSP_biquadm_Setup); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_ResetState';
        procedure vDSP_biquadm_ResetStateD(__setup: vDSP_biquadm_SetupD); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_ResetStateD';
        procedure vDSP_biquadm_SetCoefficientsDouble
          (__setup: vDSP_biquadm_Setup; __coeffs: PDouble;
          __start_sec: vDSP_Length; __start_chn: vDSP_Length;
          __nsec: vDSP_Length; __nchn: vDSP_Length); cdecl;
          external libAccelerate name _PU +
          'vDSP_biquadm_SetCoefficientsDouble';
        procedure vDSP_biquadm_SetTargetsDouble(__setup: vDSP_biquadm_Setup;
          __targets: PDouble; __interp_rate: Single; __interp_threshold: Single;
          __start_sec: vDSP_Length; __start_chn: vDSP_Length;
          __nsec: vDSP_Length; __nchn: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_SetTargetsDouble';
        procedure vDSP_biquadm_SetCoefficientsSingle
          (__setup: vDSP_biquadm_Setup; __coeffs: PSingle;
          __start_sec: vDSP_Length; __start_chn: vDSP_Length;
          __nsec: vDSP_Length; __nchn: vDSP_Length); cdecl;
          external libAccelerate name _PU +
          'vDSP_biquadm_SetCoefficientsSingle';
        procedure vDSP_biquadm_SetTargetsSingle(__setup: vDSP_biquadm_Setup;
          __targets: PSingle; __interp_rate: Single; __interp_threshold: Single;
          __start_sec: vDSP_Length; __start_chn: vDSP_Length;
          __nsec: vDSP_Length; __nchn: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_SetTargetsSingle';
        procedure vDSP_biquadm_SetActiveFilters(__setup: vDSP_biquadm_Setup;
          __filter_states: PInteger); cdecl;
          external libAccelerate name _PU + 'vDSP_biquadm_SetActiveFilters';
        procedure vDSP_ctoz(__C: Pointer; __IC: vDSP_Stride; __Z: Pointer;
          __IZ: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_ctoz';
        procedure vDSP_ctozD(__C: Pointer; __IC: vDSP_Stride; __Z: Pointer;
          __IZ: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_ctozD';
        procedure vDSP_ztoc(__Z: Pointer; __IZ: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_ztoc';
        procedure vDSP_ztocD(__Z: Pointer; __IZ: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_ztocD';
        procedure vDSP_fft_zip(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __Log2n: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fft_zip';
        procedure vDSP_fft_zipD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __Log2n: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fft_zipD';
        procedure vDSP_fft_zipt(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __Buffer: Pointer; __Log2n: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zipt';
        procedure vDSP_fft_ziptD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __Buffer: Pointer; __Log2n: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_ziptD';
        procedure vDSP_fft_zop(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zop';
        procedure vDSP_fft_zopt(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zopt';
        procedure vDSP_fft_zopD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zopD';
        procedure vDSP_fft_zoptD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zoptD';
        procedure vDSP_fft_zrip(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __Log2n: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fft_zrip';
        procedure vDSP_fft_zripD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __Log2n: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fft_zripD';
        procedure vDSP_fft_zript(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __Buffer: Pointer; __Log2n: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zript';
        procedure vDSP_fft_zriptD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __Buffer: Pointer; __Log2n: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zriptD';
        procedure vDSP_fft_zrop(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zrop';
        procedure vDSP_fft_zropD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zropD';
        procedure vDSP_fft_zropt(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zropt';
        procedure vDSP_fft_zroptD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft_zroptD';
        procedure vDSP_fft2d_zip(__setup: FFTSetup; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zip';
        procedure vDSP_fft2d_zipD(__setup: FFTSetupD; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zipD';
        procedure vDSP_fft2d_zipt(__setup: FFTSetup; __C: Pointer;
          __IC1: vDSP_Stride; __IC0: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zipt';
        procedure vDSP_fft2d_ziptD(__setup: FFTSetupD; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_ziptD';
        procedure vDSP_fft2d_zop(__setup: FFTSetup; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zop';
        procedure vDSP_fft2d_zopD(__setup: FFTSetupD; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zopD';
        procedure vDSP_fft2d_zopt(__setup: FFTSetup; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zopt';
        procedure vDSP_fft2d_zoptD(__setup: FFTSetupD; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zoptD';
        procedure vDSP_fft2d_zrip(__setup: FFTSetup; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zrip';
        procedure vDSP_fft2d_zripD(__setup: FFTSetupD; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __flag: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zripD';
        procedure vDSP_fft2d_zript(__setup: FFTSetup; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zript';
        procedure vDSP_fft2d_zriptD(__setup: FFTSetupD; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length; __flag: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fft2d_zriptD';
        procedure vDSP_fft2d_zrop(__setup: FFTSetup; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zrop';
        procedure vDSP_fft2d_zropt(__setup: FFTSetup; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zropt';
        procedure vDSP_fft2d_zropD(__setup: FFTSetupD; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Log2N0: vDSP_Length;
          __Log2N1: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zropD';
        procedure vDSP_fft2d_zroptD(__setup: FFTSetupD; __A: Pointer;
          __IA0: vDSP_Stride; __IA1: vDSP_Stride; __C: Pointer;
          __IC0: vDSP_Stride; __IC1: vDSP_Stride; __Buffer: Pointer;
          __Log2N0: vDSP_Length; __Log2N1: vDSP_Length;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft2d_zroptD';
        procedure vDSP_fftm_zip(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zip';
        procedure vDSP_fftm_zipD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zipD';
        procedure vDSP_fftm_zipt(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_zipt';
        procedure vDSP_fftm_ziptD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_ziptD';
        procedure vDSP_fftm_zop(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zop';
        procedure vDSP_fftm_zopD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zopD';
        procedure vDSP_fftm_zopt(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_zopt';
        procedure vDSP_fftm_zoptD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_zoptD';
        procedure vDSP_fftm_zrip(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zrip';
        procedure vDSP_fftm_zripD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zripD';
        procedure vDSP_fftm_zript(__setup: FFTSetup; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_zript';
        procedure vDSP_fftm_zriptD(__setup: FFTSetupD; __C: Pointer;
          __IC: vDSP_Stride; __IM: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_zriptD';
        procedure vDSP_fftm_zrop(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zrop';
        procedure vDSP_fftm_zropt(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_zropt';
        procedure vDSP_fftm_zropD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Log2n: vDSP_Length;
          __M: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fftm_zropD';
        procedure vDSP_fftm_zroptD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __IMA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __IMC: vDSP_Stride; __Buffer: Pointer;
          __Log2n: vDSP_Length; __M: vDSP_Length; __Direction: FFTDirection);
          cdecl; external libAccelerate name _PU + 'vDSP_fftm_zroptD';
        procedure vDSP_fft3_zop(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft3_zop';
        procedure vDSP_fft3_zopD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft3_zopD';
        procedure vDSP_fft5_zop(__setup: FFTSetup; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft5_zop';
        procedure vDSP_fft5_zopD(__setup: FFTSetupD; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride;
          __Log2n: vDSP_Length; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_fft5_zopD';
        procedure vDSP_biquad(__setup: Pointer; __Delay: PSingle; __X: PSingle;
          __IX: vDSP_Stride; __Y: PSingle; __IY: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_biquad';
        procedure vDSP_biquadD(__setup: Pointer; __Delay: PDouble; __X: PDouble;
          __IX: vDSP_Stride; __Y: PDouble; __IY: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_biquadD';
        procedure vDSP_biquadm(__setup: vDSP_biquadm_Setup; __X: PSingle;
          __IX: vDSP_Stride; __Y: PSingle; __IY: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_biquadm';
        procedure vDSP_biquadmD(__setup: vDSP_biquadm_SetupD; __X: PDouble;
          __IX: vDSP_Stride; __Y: PDouble; __IY: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_biquadmD';
        procedure vDSP_conv(__A: PSingle; __IA: vDSP_Stride; __F: PSingle;
          __IF: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_conv';
        procedure vDSP_convD(__A: PDouble; __IA: vDSP_Stride; __F: PDouble;
          __IF: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_convD';
        procedure vDSP_zconv(__A: Pointer; __IA: vDSP_Stride; __F: Pointer;
          __IF: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zconv';
        procedure vDSP_zconvD(__A: Pointer; __IA: vDSP_Stride; __F: Pointer;
          __IF: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zconvD';
        procedure vDSP_f3x3(__A: PSingle; __NR: vDSP_Length; __NC: vDSP_Length;
          __F: PSingle; __C: PSingle); cdecl;
          external libAccelerate name _PU + 'vDSP_f3x3';
        procedure vDSP_f3x3D(__A: PDouble; __NR: vDSP_Length; __NC: vDSP_Length;
          __F: PDouble; __C: PDouble); cdecl;
          external libAccelerate name _PU + 'vDSP_f3x3D';
        procedure vDSP_f5x5(__A: PSingle; __NR: vDSP_Length; __NC: vDSP_Length;
          __F: PSingle; __C: PSingle); cdecl;
          external libAccelerate name _PU + 'vDSP_f5x5';
        procedure vDSP_f5x5D(__A: PDouble; __NR: vDSP_Length; __NC: vDSP_Length;
          __F: PDouble; __C: PDouble); cdecl;
          external libAccelerate name _PU + 'vDSP_f5x5D';
        procedure vDSP_imgfir(__A: PSingle; __NR: vDSP_Length;
          __NC: vDSP_Length; __F: PSingle; __C: PSingle; __P: vDSP_Length;
          __Q: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_imgfir';
        procedure vDSP_imgfirD(__A: PDouble; __NR: vDSP_Length;
          __NC: vDSP_Length; __F: PDouble; __C: PDouble; __P: vDSP_Length;
          __Q: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_imgfirD';
        procedure vDSP_mtrans(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mtrans';
        procedure vDSP_mtransD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mtransD';
        procedure vDSP_mmul(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __M: vDSP_Length;
          __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mmul';
        procedure vDSP_mmulD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __M: vDSP_Length;
          __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mmulD';
        procedure vDSP_zmma(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmma';
        procedure vDSP_zmmaD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmmaD';
        procedure vDSP_zmms(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmms';
        procedure vDSP_zmmsD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmmsD';
        procedure vDSP_zvmmaa(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __E: Pointer; __IE: vDSP_Stride; __F: Pointer;
          __IF: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmmaa';
        procedure vDSP_zvmmaaD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __E: Pointer; __IE: vDSP_Stride; __F: Pointer;
          __IF: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmmaaD';
        procedure vDSP_zmsm(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmsm';
        procedure vDSP_zmsmD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __M: vDSP_Length; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmsmD';
        procedure vDSP_zmmul(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __M: vDSP_Length;
          __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmmul';
        procedure vDSP_zmmulD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __M: vDSP_Length;
          __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zmmulD';
        procedure vDSP_vadd(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vadd';
        procedure vDSP_vaddD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vaddD';
        procedure vDSP_vaddi(__A: PInteger; __IA: vDSP_Stride; __B: PInteger;
          __IB: vDSP_Stride; __C: PInteger; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vaddi';
        procedure vDSP_zvadd(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvadd';
        procedure vDSP_zvaddD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvaddD';
        procedure vDSP_zrvadd(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvadd';
        procedure vDSP_zrvaddD(__A: Pointer; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvaddD';
        procedure vDSP_vsub(__B: PSingle; __IB: vDSP_Stride; __A: PSingle;
          __IA: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vsub';
        procedure vDSP_vsubD(__B: PDouble; __IB: vDSP_Stride; __A: PDouble;
          __IA: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vsubD';
        procedure vDSP_zvsub(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvsub';
        procedure vDSP_zvsubD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvsubD';
        procedure vDSP_vmul(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmul';
        procedure vDSP_vmulD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmulD';
        procedure vDSP_zrvmul(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvmul';
        procedure vDSP_zrvmulD(__A: Pointer; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvmulD';
        procedure vDSP_vdiv(__B: PSingle; __IB: vDSP_Stride; __A: PSingle;
          __IA: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vdiv';
        procedure vDSP_vdivD(__B: PDouble; __IB: vDSP_Stride; __A: PDouble;
          __IA: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vdivD';
        procedure vDSP_vdivi(__B: PInteger; __IB: vDSP_Stride; __A: PInteger;
          __IA: vDSP_Stride; __C: PInteger; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vdivi';
        procedure vDSP_zvdiv(__B: Pointer; __IB: vDSP_Stride; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvdiv';
        procedure vDSP_zvdivD(__B: Pointer; __IB: vDSP_Stride; __A: Pointer;
          __IA: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvdivD';
        procedure vDSP_zrvdiv(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvdiv';
        procedure vDSP_zrvdivD(__A: Pointer; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvdivD';
        procedure vDSP_vsmul(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmul';
        procedure vDSP_vsmulD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmulD';
        procedure vDSP_vsq(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsq';
        procedure vDSP_vsqD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsqD';
        procedure vDSP_vssq(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vssq';
        procedure vDSP_vssqD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vssqD';
        procedure vDSP_distancesq(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_distancesq';
        procedure vDSP_distancesqD(__A: PDouble; __IA: vDSP_Stride;
          __B: PDouble; __IB: vDSP_Stride; __C: PDouble; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_distancesqD';
        procedure vDSP_dotpr(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotpr';
        procedure vDSP_dotprD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotprD';
        procedure vDSP_zdotpr(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zdotpr';
        procedure vDSP_zdotprD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zdotprD';
        procedure vDSP_zrdotpr(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: Pointer; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zrdotpr';
        procedure vDSP_zrdotprD(__A: Pointer; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: Pointer; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zrdotprD';
        procedure vDSP_vam(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vam';
        procedure vDSP_vamD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __IDD: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vamD';
        procedure vDSP_vma(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vma';
        procedure vDSP_vmaD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vmaD';
        procedure vDSP_zvma(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvma';
        procedure vDSP_zvmaD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmaD';
        procedure vDSP_zvmul(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length;
          __Conjugate: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmul';
        procedure vDSP_zvmulD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length;
          __Conjugate: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmulD';
        procedure vDSP_zidotpr(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zidotpr';
        procedure vDSP_zidotprD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zidotprD';
        procedure vDSP_zvcma(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvcma';
        procedure vDSP_zvcmaD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __D: Pointer;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvcmaD';
        procedure vDSP_zrvsub(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvsub';
        procedure vDSP_zrvsubD(__A: Pointer; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zrvsubD';
        procedure vDSP_vdpsp(__A: PDouble; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vdpsp';
        procedure vDSP_vspdp(__A: PSingle; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vspdp';
        procedure vDSP_vabs(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vabs';
        procedure vDSP_vabsD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vabsD';
        procedure vDSP_vabsi(__A: PInteger; __IA: vDSP_Stride; __C: PInteger;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vabsi';
        procedure vDSP_zvabs(__A: Pointer; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvabs';
        procedure vDSP_zvabsD(__A: Pointer; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvabsD';
        procedure vDSP_veqvi(__A: PInteger; __IA: vDSP_Stride; __B: PInteger;
          __IB: vDSP_Stride; __C: PInteger; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_veqvi';
        procedure vDSP_vfill(__A: PSingle; __C: PSingle; __IA: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfill';
        procedure vDSP_vfillD(__A: PDouble; __C: PDouble; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfillD';
        procedure vDSP_vfilli(__A: PInteger; __C: PInteger; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfilli';
        procedure vDSP_zvfill(__A: Pointer; __C: Pointer; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvfill';
        procedure vDSP_zvfillD(__A: Pointer; __C: Pointer; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvfillD';
        procedure vDSP_vsadd(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsadd';
        procedure vDSP_vsaddD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsaddD';
        procedure vDSP_vsaddi(__A: PInteger; __IA: vDSP_Stride; __B: PInteger;
          __C: PInteger; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsaddi';
        procedure vDSP_vsdiv(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsdiv';
        procedure vDSP_vsdivD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsdivD';
        procedure vDSP_vsdivi(__A: PInteger; __IA: vDSP_Stride; __B: PInteger;
          __C: PInteger; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsdivi';
        procedure vDSP_zaspec(__A: Pointer; __C: PSingle; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zaspec';
        procedure vDSP_zaspecD(__A: Pointer; __C: PDouble; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zaspecD';
        procedure vDSP_blkman_window(__C: PSingle; __N: vDSP_Length;
          __flag: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_blkman_window';
        procedure vDSP_blkman_windowD(__C: PDouble; __N: vDSP_Length;
          __flag: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_blkman_windowD';
        procedure vDSP_zcoher(__A: PSingle; __B: PSingle; __C: Pointer;
          __D: PSingle; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zcoher';
        procedure vDSP_zcoherD(__A: PDouble; __B: PDouble; __C: Pointer;
          __D: PDouble; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zcoherD';
        procedure vDSP_desamp(__A: PSingle; __DF: vDSP_Stride; __F: PSingle;
          __C: PSingle; __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_desamp';
        procedure vDSP_desampD(__A: PDouble; __DF: vDSP_Stride; __F: PDouble;
          __C: PDouble; __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_desampD';
        procedure vDSP_zrdesamp(__A: Pointer; __DF: vDSP_Stride; __F: PSingle;
          __C: Pointer; __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zrdesamp';
        procedure vDSP_zrdesampD(__A: Pointer; __DF: vDSP_Stride; __F: PDouble;
          __C: Pointer; __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zrdesampD';
        procedure vDSP_ztrans(__A: PSingle; __B: Pointer; __C: Pointer;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_ztrans';
        procedure vDSP_ztransD(__A: PDouble; __B: Pointer; __C: Pointer;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_ztransD';
        procedure vDSP_zcspec(__A: Pointer; __B: Pointer; __C: Pointer;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zcspec';
        procedure vDSP_zcspecD(__A: Pointer; __B: Pointer; __C: Pointer;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zcspecD';
        procedure vDSP_zvcmul(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvcmul';
        procedure vDSP_zvcmulD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __IB: vDSP_Stride; __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvcmulD';
        procedure vDSP_zvconj(__A: Pointer; __IA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvconj';
        procedure vDSP_zvconjD(__A: Pointer; __IA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvconjD';
        procedure vDSP_zvzsml(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvzsml';
        procedure vDSP_zvzsmlD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvzsmlD';
        procedure vDSP_zvmags(__A: Pointer; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmags';
        procedure vDSP_zvmagsD(__A: Pointer; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmagsD';
        procedure vDSP_zvmgsa(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvmgsa';
        procedure vDSP_zvmgsaD(__A: Pointer; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_zvmgsaD';
        procedure vDSP_zvmov(__A: Pointer; __IA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmov';
        procedure vDSP_zvmovD(__A: Pointer; __IA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvmovD';
        procedure vDSP_zvneg(__A: Pointer; __IA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvneg';
        procedure vDSP_zvnegD(__A: Pointer; __IA: vDSP_Stride; __C: Pointer;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvnegD';
        procedure vDSP_zvphas(__A: Pointer; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvphas';
        procedure vDSP_zvphasD(__A: Pointer; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvphasD';
        procedure vDSP_zvsma(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __C: Pointer; __IC: vDSP_Stride; __D: Pointer; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvsma';
        procedure vDSP_zvsmaD(__A: Pointer; __IA: vDSP_Stride; __B: Pointer;
          __C: Pointer; __IC: vDSP_Stride; __D: Pointer; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_zvsmaD';
        procedure vDSP_deq22(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_deq22';
        procedure vDSP_deq22D(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_deq22D';
        procedure vDSP_hamm_window(__C: PSingle; __N: vDSP_Length;
          __flag: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_hamm_window';
        procedure vDSP_hamm_windowD(__C: PDouble; __N: vDSP_Length;
          __flag: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_hamm_windowD';
        procedure vDSP_hann_window(__C: PSingle; __N: vDSP_Length;
          __flag: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_hann_window';
        procedure vDSP_hann_windowD(__C: PDouble; __N: vDSP_Length;
          __flag: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_hann_windowD';
        procedure vDSP_maxmgv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxmgv';
        procedure vDSP_maxmgvD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxmgvD';
        procedure vDSP_maxmgvi(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxmgvi';
        procedure vDSP_maxmgviD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxmgviD';
        procedure vDSP_maxv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxv';
        procedure vDSP_maxvD(__A: PDouble; __I: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxvD';
        procedure vDSP_maxvi(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxvi';
        procedure vDSP_maxviD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_maxviD';
        procedure vDSP_meamgv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_meamgv';
        procedure vDSP_meamgvD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_meamgvD';
        procedure vDSP_meanv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_meanv';
        procedure vDSP_meanvD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_meanvD';
        procedure vDSP_measqv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_measqv';
        procedure vDSP_measqvD(__A: PDouble; __I: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_measqvD';
        procedure vDSP_minmgv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minmgv';
        procedure vDSP_minmgvD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minmgvD';
        procedure vDSP_minmgvi(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minmgvi';
        procedure vDSP_minmgviD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minmgviD';
        procedure vDSP_minv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minv';
        procedure vDSP_minvD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minvD';
        procedure vDSP_minvi(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minvi';
        procedure vDSP_minviD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __I: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_minviD';
        procedure vDSP_mmov(__A: PSingle; __C: PSingle; __M: vDSP_Length;
          __N: vDSP_Length; __TA: vDSP_Length; __TC: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mmov';
        procedure vDSP_mmovD(__A: PDouble; __C: PDouble; __M: vDSP_Length;
          __N: vDSP_Length; __TA: vDSP_Length; __TC: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mmovD';
        procedure vDSP_mvessq(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mvessq';
        procedure vDSP_mvessqD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_mvessqD';
        procedure vDSP_nzcros(__A: PSingle; __IA: vDSP_Stride; __B: vDSP_Length;
          __C: PLongWord; __D: PLongWord; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_nzcros';
        procedure vDSP_nzcrosD(__A: PDouble; __IA: vDSP_Stride;
          __B: vDSP_Length; __C: PLongWord; __D: PLongWord; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_nzcrosD';
        procedure vDSP_polar(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_polar';
        procedure vDSP_polarD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_polarD';
        procedure vDSP_rect(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_rect';
        procedure vDSP_rectD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_rectD';
        procedure vDSP_rmsqv(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_rmsqv';
        procedure vDSP_rmsqvD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_rmsqvD';
        procedure vDSP_svdiv(__A: PSingle; __B: PSingle; __IB: vDSP_Stride;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svdiv';
        procedure vDSP_svdivD(__A: PDouble; __B: PDouble; __IB: vDSP_Stride;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svdivD';
        procedure vDSP_sve(__A: PSingle; __I: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_sve';
        procedure vDSP_sveD(__A: PDouble; __I: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_sveD';
        procedure vDSP_svemg(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svemg';
        procedure vDSP_svemgD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svemgD';
        procedure vDSP_svesq(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svesq';
        procedure vDSP_svesqD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svesqD';
        procedure vDSP_sve_svesq(__A: PSingle; __IA: vDSP_Stride;
          __Sum: PSingle; __SumOfSquares: PSingle; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_sve_svesq';
        procedure vDSP_sve_svesqD(__A: PDouble; __IA: vDSP_Stride;
          __Sum: PDouble; __SumOfSquares: PDouble; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_sve_svesqD';
        procedure vDSP_normalize(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __Mean: PSingle; __StandardDeviation: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_normalize';
        procedure vDSP_normalizeD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __Mean: PDouble; __StandardDeviation: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_normalizeD';
        procedure vDSP_svs(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svs';
        procedure vDSP_svsD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_svsD';
        procedure vDSP_vaam(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __E: PSingle; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vaam';
        procedure vDSP_vaamD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __E: PDouble; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vaamD';
        procedure vDSP_vasbm(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __E: PSingle; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vasbm';
        procedure vDSP_vasbmD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __E: PDouble; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vasbmD';
        procedure vDSP_vasm(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __D: PSingle; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vasm';
        procedure vDSP_vasmD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __D: PDouble; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vasmD';
        procedure vDSP_vavlin(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vavlin';
        procedure vDSP_vavlinD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vavlinD';
        procedure vDSP_vclip(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __D: PSingle; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vclip';
        procedure vDSP_vclipD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __D: PDouble; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vclipD';
        procedure vDSP_vclipc(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __D: PSingle; __ID: vDSP_Stride; __N: vDSP_Length;
          __NLow: PLongWord; __NHigh: PLongWord); cdecl;
          external libAccelerate name _PU + 'vDSP_vclipc';
        procedure vDSP_vclipcD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __D: PDouble; __ID: vDSP_Stride; __N: vDSP_Length;
          __NLow: PLongWord; __NHigh: PLongWord); cdecl;
          external libAccelerate name _PU + 'vDSP_vclipcD';
        procedure vDSP_vclr(__C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vclr';
        procedure vDSP_vclrD(__C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vclrD';
        procedure vDSP_vcmprs(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vcmprs';
        procedure vDSP_vcmprsD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vcmprsD';
        procedure vDSP_vdbcon(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length; __F: Cardinal);
          cdecl; external libAccelerate name _PU + 'vDSP_vdbcon';
        procedure vDSP_vdbconD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length; __F: Cardinal);
          cdecl; external libAccelerate name _PU + 'vDSP_vdbconD';
        procedure vDSP_vdist(__A: PSingle; __I: vDSP_Stride; __B: PSingle;
          __J: vDSP_Stride; __C: PSingle; __K: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vdist';
        procedure vDSP_vdistD(__A: PDouble; __I: vDSP_Stride; __B: PDouble;
          __J: vDSP_Stride; __C: PDouble; __K: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vdistD';
        procedure vDSP_venvlp(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_venvlp';
        procedure vDSP_venvlpD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_venvlpD';
        procedure vDSP_vfix8(__A: PSingle; __IA: vDSP_Stride;
          __C: MarshaledAString; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfix8';
        procedure vDSP_vfix8D(__A: PDouble; __IA: vDSP_Stride;
          __C: MarshaledAString; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfix8D';
        procedure vDSP_vfix16(__A: PSingle; __IA: vDSP_Stride; __C: PSmallInt;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfix16';
        procedure vDSP_vfix16D(__A: PDouble; __IA: vDSP_Stride; __C: PSmallInt;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfix16D';
        procedure vDSP_vfix32(__A: PSingle; __IA: vDSP_Stride; __C: PInteger;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfix32';
        procedure vDSP_vfix32D(__A: PDouble; __IA: vDSP_Stride; __C: PInteger;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfix32D';
        procedure vDSP_vfixu8(__A: PSingle; __IA: vDSP_Stride; __C: PByte;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixu8';
        procedure vDSP_vfixu8D(__A: PDouble; __IA: vDSP_Stride; __C: PByte;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixu8D';
        procedure vDSP_vfixu16(__A: PSingle; __IA: vDSP_Stride;
          __C: unsigned short *; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixu16';
        procedure vDSP_vfixu16D(__A: PDouble; __IA: vDSP_Stride;
          __C: unsigned short *; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixu16D';
        procedure vDSP_vfixu32(__A: PSingle; __IA: vDSP_Stride; __C: PCardinal;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixu32';
        procedure vDSP_vfixu32D(__A: PDouble; __IA: vDSP_Stride; __C: PCardinal;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixu32D';
        procedure vDSP_vsmfixu24(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmfixu24';
        procedure vDSP_vsmfix24(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: Pointer; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmfix24';
        procedure vDSP_vfltu24(__A: Pointer; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltu24';
        procedure vDSP_vflt24(__A: Pointer; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vflt24';
        procedure vDSP_vfltsmu24(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltsmu24';
        procedure vDSP_vfltsm24(__A: Pointer; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltsm24';
        procedure vDSP_vfixr8(__A: PSingle; __IA: vDSP_Stride;
          __C: MarshaledAString; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixr8';
        procedure vDSP_vfixr8D(__A: PDouble; __IA: vDSP_Stride;
          __C: MarshaledAString; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixr8D';
        procedure vDSP_vfixr16(__A: PSingle; __IA: vDSP_Stride; __C: PSmallInt;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixr16';
        procedure vDSP_vfixr16D(__A: PDouble; __IA: vDSP_Stride; __C: PSmallInt;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixr16D';
        procedure vDSP_vfixr32(__A: PSingle; __IA: vDSP_Stride; __C: PInteger;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixr32';
        procedure vDSP_vfixr32D(__A: PDouble; __IA: vDSP_Stride; __C: PInteger;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixr32D';
        procedure vDSP_vfixru8(__A: PSingle; __IA: vDSP_Stride; __C: PByte;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixru8';
        procedure vDSP_vfixru8D(__A: PDouble; __IA: vDSP_Stride; __C: PByte;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixru8D';
        procedure vDSP_vfixru16(__A: PSingle; __IA: vDSP_Stride;
          __C: unsigned short *; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixru16';
        procedure vDSP_vfixru16D(__A: PDouble; __IA: vDSP_Stride;
          __C: unsigned short *; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixru16D';
        procedure vDSP_vfixru32(__A: PSingle; __IA: vDSP_Stride; __C: PCardinal;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixru32';
        procedure vDSP_vfixru32D(__A: PDouble; __IA: vDSP_Stride;
          __C: PCardinal; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfixru32D';
        procedure vDSP_vflt8(__A: MarshaledAString; __IA: vDSP_Stride;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vflt8';
        procedure vDSP_vflt8D(__A: MarshaledAString; __IA: vDSP_Stride;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vflt8D';
        procedure vDSP_vflt16(__A: PSmallInt; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vflt16';
        procedure vDSP_vflt16D(__A: PSmallInt; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vflt16D';
        procedure vDSP_vflt32(__A: PInteger; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vflt32';
        procedure vDSP_vflt32D(__A: PInteger; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vflt32D';
        procedure vDSP_vfltu8(__A: PByte; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltu8';
        procedure vDSP_vfltu8D(__A: PByte; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltu8D';
        procedure vDSP_vfltu16(__A: unsigned short *; __IA: vDSP_Stride;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltu16';
        procedure vDSP_vfltu16D(__A: unsigned short *; __IA: vDSP_Stride;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltu16D';
        procedure vDSP_vfltu32(__A: PCardinal; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltu32';
        procedure vDSP_vfltu32D(__A: PCardinal; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfltu32D';
        procedure vDSP_vfrac(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfrac';
        procedure vDSP_vfracD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vfracD';
        procedure vDSP_vgathr(__A: PSingle; __B: PLongWord; __IB: vDSP_Stride;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgathr';
        procedure vDSP_vgathrD(__A: PDouble; __B: PLongWord; __IB: vDSP_Stride;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgathrD';
        procedure vDSP_vgathra(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgathra';
        procedure vDSP_vgathraD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgathraD';
        procedure vDSP_vgen(__A: PSingle; __B: PSingle; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgen';
        procedure vDSP_vgenD(__A: PDouble; __B: PDouble; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgenD';
        procedure vDSP_vgenp(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length;
          __M: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgenp';
        procedure vDSP_vgenpD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length;
          __M: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vgenpD';
        procedure vDSP_viclip(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __D: PSingle; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_viclip';
        procedure vDSP_viclipD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __D: PDouble; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_viclipD';
        procedure vDSP_vindex(__A: PSingle; __B: PSingle; __IB: vDSP_Stride;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vindex';
        procedure vDSP_vindexD(__A: PDouble; __B: PDouble; __IB: vDSP_Stride;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vindexD';
        procedure vDSP_vintb(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __D: PSingle; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vintb';
        procedure vDSP_vintbD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __D: PDouble; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vintbD';
        procedure vDSP_vlim(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __D: PSingle; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vlim';
        procedure vDSP_vlimD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __D: PDouble; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vlimD';
        procedure vDSP_vlint(__A: PSingle; __B: PSingle; __IB: vDSP_Stride;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length; __M: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vlint';
        procedure vDSP_vlintD(__A: PDouble; __B: PDouble; __IB: vDSP_Stride;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length; __M: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vlintD';
        procedure vDSP_vmax(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmax';
        procedure vDSP_vmaxD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmaxD';
        procedure vDSP_vmaxmg(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmaxmg';
        procedure vDSP_vmaxmgD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmaxmgD';
        procedure vDSP_vswmax(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length; __WindowLength: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vswmax';
        procedure vDSP_vswmaxD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length; __WindowLength: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vswmaxD';
        procedure vDSP_vmin(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmin';
        procedure vDSP_vminD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vminD';
        procedure vDSP_vminmg(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vminmg';
        procedure vDSP_vminmgD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vminmgD';
        procedure vDSP_vmma(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __E: PSingle; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmma';
        procedure vDSP_vmmaD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __E: PDouble; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmmaD';
        procedure vDSP_vmmsb(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __E: PSingle; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmmsb';
        procedure vDSP_vmmsbD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __E: PDouble; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vmmsbD';
        procedure vDSP_vmsa(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __D: PSingle; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vmsa';
        procedure vDSP_vmsaD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __D: PDouble; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vmsaD';
        procedure vDSP_vmsb(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vmsb';
        procedure vDSP_vmsbD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vmsbD';
        procedure vDSP_vnabs(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vnabs';
        procedure vDSP_vnabsD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vnabsD';
        procedure vDSP_vneg(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vneg';
        procedure vDSP_vnegD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vnegD';
        procedure vDSP_vpoly(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vpoly';
        procedure vDSP_vpolyD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length;
          __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vpolyD';
        procedure vDSP_vpythg(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __E: PSingle; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vpythg';
        procedure vDSP_vpythgD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __E: PDouble; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vpythgD';
        procedure vDSP_vqint(__A: PSingle; __B: PSingle; __IB: vDSP_Stride;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length; __M: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vqint';
        procedure vDSP_vqintD(__A: PDouble; __B: PDouble; __IB: vDSP_Stride;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length; __M: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vqintD';
        procedure vDSP_vramp(__A: PSingle; __B: PSingle; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vramp';
        procedure vDSP_vrampD(__A: PDouble; __B: PDouble; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampD';
        procedure vDSP_vrsum(__A: PSingle; __IA: vDSP_Stride; __S: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrsum';
        procedure vDSP_vrsumD(__A: PDouble; __IA: vDSP_Stride; __S: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrsumD';
        procedure vDSP_vrvrs(__C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vrvrs';
        procedure vDSP_vrvrsD(__C: PDouble; __IC: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrvrsD';
        procedure vDSP_vsbm(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsbm';
        procedure vDSP_vsbmD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsbmD';
        procedure vDSP_vsbsbm(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __D: PSingle;
          __ID: vDSP_Stride; __E: PSingle; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vsbsbm';
        procedure vDSP_vsbsbmD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __D: PDouble;
          __ID: vDSP_Stride; __E: PDouble; __IE: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vsbsbmD';
        procedure vDSP_vsbsm(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __D: PSingle; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsbsm';
        procedure vDSP_vsbsmD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __D: PDouble; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsbsmD';
        procedure vDSP_vsimps(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsimps';
        procedure vDSP_vsimpsD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsimpsD';
        procedure vDSP_vsma(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __D: PSingle; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsma';
        procedure vDSP_vsmaD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __D: PDouble; __ID: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmaD';
        procedure vDSP_vsmsa(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __D: PSingle; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vsmsa';
        procedure vDSP_vsmsaD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __ID: PDouble; __L: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vsmsaD';
        procedure vDSP_vsmsb(__A: PSingle; __I: vDSP_Stride; __B: PSingle;
          __C: PSingle; __K: vDSP_Stride; __D: PSingle; __L: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmsb';
        procedure vDSP_vsmsbD(__A: PDouble; __I: vDSP_Stride; __B: PDouble;
          __C: PDouble; __K: vDSP_Stride; __D: PDouble; __L: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmsbD';
        procedure vDSP_vsmsma(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __D: PSingle; __E: PSingle;
          __IE: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmsma';
        procedure vDSP_vsmsmaD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __D: PDouble; __E: PDouble;
          __IE: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vsmsmaD';
        procedure vDSP_vsort(__C: PSingle; __N: vDSP_Length; __Order: Integer);
          cdecl; external libAccelerate name _PU + 'vDSP_vsort';
        procedure vDSP_vsortD(__C: PDouble; __N: vDSP_Length; __Order: Integer);
          cdecl; external libAccelerate name _PU + 'vDSP_vsortD';
        procedure vDSP_vsorti(__C: PSingle; __I: PLongWord;
          __Temporary: PLongWord; __N: vDSP_Length; __Order: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_vsorti';
        procedure vDSP_vsortiD(__C: PDouble; __I: PLongWord;
          __Temporary: PLongWord; __N: vDSP_Length; __Order: Integer); cdecl;
          external libAccelerate name _PU + 'vDSP_vsortiD';
        procedure vDSP_vswap(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vswap';
        procedure vDSP_vswapD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vswapD';
        procedure vDSP_vswsum(__A: PSingle; __IA: vDSP_Stride; __C: PSingle;
          __IC: vDSP_Stride; __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vswsum';
        procedure vDSP_vswsumD(__A: PDouble; __IA: vDSP_Stride; __C: PDouble;
          __IC: vDSP_Stride; __N: vDSP_Length; __P: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vswsumD';
        procedure vDSP_vtabi(__A: PSingle; __IA: vDSP_Stride; __S1: PSingle;
          __S2: PSingle; __C: PSingle; __M: vDSP_Length; __D: PSingle;
          __ID: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vtabi';
        procedure vDSP_vtabiD(__A: PDouble; __IA: vDSP_Stride; __S1: PDouble;
          __S2: PDouble; __C: PDouble; __M: vDSP_Length; __ID: PDouble;
          __L: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vtabiD';
        procedure vDSP_vthr(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vthr';
        procedure vDSP_vthrD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vthrD';
        procedure vDSP_vthres(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vthres';
        procedure vDSP_vthresD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vthresD';
        procedure vDSP_vthrsc(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __D: PSingle; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vthrsc';
        procedure vDSP_vthrscD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __D: PDouble; __ID: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vthrscD';
        procedure vDSP_vtmerg(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __IB: vDSP_Stride; __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vtmerg';
        procedure vDSP_vtmergD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __IB: vDSP_Stride; __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vtmergD';
        procedure vDSP_vtrapz(__A: PSingle; __IA: vDSP_Stride; __B: PSingle;
          __C: PSingle; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vtrapz';
        procedure vDSP_vtrapzD(__A: PDouble; __IA: vDSP_Stride; __B: PDouble;
          __C: PDouble; __IC: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vtrapzD';
        procedure vDSP_wiener(__L: vDSP_Length; __A: PSingle; __C: PSingle;
          __F: PSingle; __P: PSingle; __flag: Integer; __Error: PInteger);
          cdecl; external libAccelerate name _PU + 'vDSP_wiener';
        procedure vDSP_wienerD(__L: vDSP_Length; __A: PDouble; __C: PDouble;
          __F: PDouble; __P: PDouble; __flag: Integer; __Error: PInteger);
          cdecl; external libAccelerate name _PU + 'vDSP_wienerD';
        procedure vDSP_FFT16_copv(__Output: PSingle; __Input: PSingle;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_FFT16_copv';
        procedure vDSP_FFT32_copv(__Output: PSingle; __Input: PSingle;
          __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_FFT32_copv';
        procedure vDSP_FFT16_zopv(__Or: PSingle; __Oi: PSingle; __Ir: PSingle;
          __Ii: PSingle; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_FFT16_zopv';
        procedure vDSP_FFT32_zopv(__Or: PSingle; __Oi: PSingle; __Ir: PSingle;
          __Ii: PSingle; __Direction: FFTDirection); cdecl;
          external libAccelerate name _PU + 'vDSP_FFT32_zopv';
        function vDSP_DFT_CreateSetup(__Previous: vDSP_DFT_Setup;
          __Length: vDSP_Length): vDSP_DFT_Setup; cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_CreateSetup';
        function vDSP_DFT_zop_CreateSetup(__Previous: vDSP_DFT_Setup;
          __Length: vDSP_Length; __Direction: vDSP_DFT_Direction)
          : vDSP_DFT_Setup; cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_zop_CreateSetup';
        function vDSP_DFT_zop_CreateSetupD(__Previous: vDSP_DFT_SetupD;
          __Length: vDSP_Length; __Direction: vDSP_DFT_Direction)
          : vDSP_DFT_SetupD; cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_zop_CreateSetupD';
        function vDSP_DFT_zrop_CreateSetup(__Previous: vDSP_DFT_Setup;
          __Length: vDSP_Length; __Direction: vDSP_DFT_Direction)
          : vDSP_DFT_Setup; cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_zrop_CreateSetup';
        function vDSP_DFT_zrop_CreateSetupD(__Previous: vDSP_DFT_SetupD;
          __Length: vDSP_Length; __Direction: vDSP_DFT_Direction)
          : vDSP_DFT_SetupD; cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_zrop_CreateSetupD';
        procedure vDSP_DFT_DestroySetup(__setup: vDSP_DFT_Setup); cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_DestroySetup';
        procedure vDSP_DFT_DestroySetupD(__setup: vDSP_DFT_SetupD); cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_DestroySetupD';
        procedure vDSP_DFT_zop(__setup: Pointer; __Ir: PSingle; __Ii: PSingle;
          __Is: vDSP_Stride; __Or: PSingle; __Oi: PSingle; __Os: vDSP_Stride;
          __Direction: vDSP_DFT_Direction); cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_zop';
        procedure vDSP_DFT_Execute(__setup: Pointer; __Ir: PSingle;
          __Ii: PSingle; __Or: PSingle; __Oi: PSingle); cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_Execute';
        procedure vDSP_DFT_ExecuteD(__setup: Pointer; __Ir: PDouble;
          __Ii: PDouble; __Or: PDouble; __Oi: PDouble); cdecl;
          external libAccelerate name _PU + 'vDSP_DFT_ExecuteD';
        function vDSP_DCT_CreateSetup(__Previous: vDSP_DFT_Setup;
          __Length: vDSP_Length; __Type: vDSP_DCT_Type): vDSP_DFT_Setup; cdecl;
          external libAccelerate name _PU + 'vDSP_DCT_CreateSetup';
        procedure vDSP_DCT_Execute(__setup: Pointer; __Input: PSingle;
          __Output: PSingle); cdecl;
          external libAccelerate name _PU + 'vDSP_DCT_Execute';
        procedure vDSP_dotpr2(__A0: PSingle; __A0Stride: vDSP_Stride;
          __A1: PSingle; __A1Stride: vDSP_Stride; __B: PSingle;
          __BStride: vDSP_Stride; __C0: PSingle; __C1: PSingle;
          __Length: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotpr2';
        procedure vDSP_dotpr2D(__A0: PDouble; __A0Stride: vDSP_Stride;
          __A1: PDouble; __A1Stride: vDSP_Stride; __B: PDouble;
          __BStride: vDSP_Stride; __C0: PDouble; __C1: PDouble;
          __Length: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotpr2D';
        procedure vDSP_dotpr_s1_15(__A: PSmallInt; __AStride: vDSP_Stride;
          __B: PSmallInt; __BStride: vDSP_Stride; __C: PSmallInt;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotpr_s1_15';
        procedure vDSP_dotpr2_s1_15(__A0: PSmallInt; __A0Stride: vDSP_Stride;
          __A1: PSmallInt; __A1Stride: vDSP_Stride; __B: PSmallInt;
          __BStride: vDSP_Stride; __C0: PSmallInt; __C1: PSmallInt;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotpr2_s1_15';
        procedure vDSP_dotpr_s8_24(__A: PInteger; __AStride: vDSP_Stride;
          __B: PInteger; __BStride: vDSP_Stride; __C: PInteger;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotpr_s8_24';
        procedure vDSP_dotpr2_s8_24(__A0: PInteger; __A0Stride: vDSP_Stride;
          __A1: PInteger; __A1Stride: vDSP_Stride; __B: PInteger;
          __BStride: vDSP_Stride; __C0: PInteger; __C1: PInteger;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_dotpr2_s8_24';
        procedure vDSP_vaddsub(__I0: PSingle; __I0S: vDSP_Stride; __I1: PSingle;
          __I1S: vDSP_Stride; __O0: PSingle; __O0S: vDSP_Stride; __O1: PSingle;
          __O1S: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vaddsub';
        procedure vDSP_vaddsubD(__I0: PDouble; __I0S: vDSP_Stride;
          __I1: PDouble; __I1S: vDSP_Stride; __O0: PDouble; __O0S: vDSP_Stride;
          __O1: PDouble; __O1S: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vaddsubD';
        procedure vDSP_vrampmul(__I: PSingle; __Is: vDSP_Stride;
          __Start: PSingle; __Step: PSingle; __O: PSingle; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmul';
        procedure vDSP_vrampmulD(__I: PDouble; __Is: vDSP_Stride;
          __Start: PDouble; __Step: PDouble; __O: PDouble; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmulD';
        procedure vDSP_vrampmuladd(__I: PSingle; __Is: vDSP_Stride;
          __Start: PSingle; __Step: PSingle; __O: PSingle; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmuladd';
        procedure vDSP_vrampmuladdD(__I: PDouble; __Is: vDSP_Stride;
          __Start: PDouble; __Step: PDouble; __O: PDouble; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmuladdD';
        procedure vDSP_vrampmul2(__I0: PSingle; __I1: PSingle;
          __Is: vDSP_Stride; __Start: PSingle; __Step: PSingle; __O0: PSingle;
          __O1: PSingle; __Os: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmul2';
        procedure vDSP_vrampmul2D(__I0: PDouble; __I1: PDouble;
          __Is: vDSP_Stride; __Start: PDouble; __Step: PDouble; __O0: PDouble;
          __O1: PDouble; __Os: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmul2D';
        procedure vDSP_vrampmuladd2(__I0: PSingle; __I1: PSingle;
          __Is: vDSP_Stride; __Start: PSingle; __Step: PSingle; __O0: PSingle;
          __O1: PSingle; __Os: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmuladd2';
        procedure vDSP_vrampmuladd2D(__I0: PDouble; __I1: PDouble;
          __Is: vDSP_Stride; __Start: PDouble; __Step: PDouble; __O0: PDouble;
          __O1: PDouble; __Os: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmuladd2D';
        procedure vDSP_vrampmul_s1_15(__I: PSmallInt; __Is: vDSP_Stride;
          __Start: PSmallInt; __Step: PSmallInt; __O: PSmallInt;
          __Os: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmul_s1_15';
        procedure vDSP_vrampmuladd_s1_15(__I: PSmallInt; __Is: vDSP_Stride;
          __Start: PSmallInt; __Step: PSmallInt; __O: PSmallInt;
          __Os: vDSP_Stride; __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmuladd_s1_15';
        procedure vDSP_vrampmul2_s1_15(__I0: PSmallInt; __I1: PSmallInt;
          __Is: vDSP_Stride; __Start: PSmallInt; __Step: PSmallInt;
          __O0: PSmallInt; __O1: PSmallInt; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmul2_s1_15';
        procedure vDSP_vrampmuladd2_s1_15(__I0: PSmallInt; __I1: PSmallInt;
          __Is: vDSP_Stride; __Start: PSmallInt; __Step: PSmallInt;
          __O0: PSmallInt; __O1: PSmallInt; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmuladd2_s1_15';
        procedure vDSP_vrampmul_s8_24(__I: PInteger; __Is: vDSP_Stride;
          __Start: PInteger; __Step: PInteger; __O: PInteger; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmul_s8_24';
        procedure vDSP_vrampmuladd_s8_24(__I: PInteger; __Is: vDSP_Stride;
          __Start: PInteger; __Step: PInteger; __O: PInteger; __Os: vDSP_Stride;
          __N: vDSP_Length); cdecl;
          external libAccelerate name _PU + 'vDSP_vrampmuladd_s8_24';
        procedure vDSP_vrampmul2_s8_24(__I0: PInteger; __I1: PInteger;
          __Is: vDSP_Stride; __Start: PInteger; __Step: PInteger;
          __O0: PInteger; __O1: PInteger; __Os: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vrampmul2_s8_24';
        procedure vDSP_vrampmuladd2_s8_24(__I0: PInteger; __I1: PInteger;
          __Is: vDSP_Stride; __Start: PInteger; __Step: PInteger;
          __O0: PInteger; __O1: PInteger; __Os: vDSP_Stride; __N: vDSP_Length);
          cdecl; external libAccelerate name _PU + 'vDSP_vrampmuladd2_s8_24';
        function cblas_errprn(__ierr: Integer; __info: Integer;
          __form: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'cblas_errprn';
        procedure cblas_xerbla(__P: Integer; __rout: MarshaledAString;
          __form: MarshaledAString); cdecl;
          external libAccelerate name _PU + 'cblas_xerbla';
        function cblas_sdsdot(__N: Integer; __alpha: Single; __X: PSingle;
          __incX: Integer; __Y: PSingle; __incY: Integer): Single; cdecl;
          external libAccelerate name _PU + 'cblas_sdsdot';
        function cblas_dsdot(__N: Integer; __X: PSingle; __incX: Integer;
          __Y: PSingle; __incY: Integer): Double; cdecl;
          external libAccelerate name _PU + 'cblas_dsdot';
        function cblas_sdot(__N: Integer; __X: PSingle; __incX: Integer;
          __Y: PSingle; __incY: Integer): Single; cdecl;
          external libAccelerate name _PU + 'cblas_sdot';
        function cblas_ddot(__N: Integer; __X: PDouble; __incX: Integer;
          __Y: PDouble; __incY: Integer): Double; cdecl;
          external libAccelerate name _PU + 'cblas_ddot';
        procedure cblas_cdotu_sub(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer; __dotu: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_cdotu_sub';
        procedure cblas_cdotc_sub(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer; __dotc: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_cdotc_sub';
        procedure cblas_zdotu_sub(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer; __dotu: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_zdotu_sub';
        procedure cblas_zdotc_sub(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer; __dotc: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_zdotc_sub';
        function cblas_snrm2(__N: Integer; __X: PSingle; __incX: Integer)
          : Single; cdecl; external libAccelerate name _PU + 'cblas_snrm2';
        function cblas_sasum(__N: Integer; __X: PSingle; __incX: Integer)
          : Single; cdecl; external libAccelerate name _PU + 'cblas_sasum';
        function cblas_dnrm2(__N: Integer; __X: PDouble; __incX: Integer)
          : Double; cdecl; external libAccelerate name _PU + 'cblas_dnrm2';
        function cblas_dasum(__N: Integer; __X: PDouble; __incX: Integer)
          : Double; cdecl; external libAccelerate name _PU + 'cblas_dasum';
        function cblas_scnrm2(__N: Integer; __X: Pointer; __incX: Integer)
          : Single; cdecl; external libAccelerate name _PU + 'cblas_scnrm2';
        function cblas_scasum(__N: Integer; __X: Pointer; __incX: Integer)
          : Single; cdecl; external libAccelerate name _PU + 'cblas_scasum';
        function cblas_dznrm2(__N: Integer; __X: Pointer; __incX: Integer)
          : Double; cdecl; external libAccelerate name _PU + 'cblas_dznrm2';
        function cblas_dzasum(__N: Integer; __X: Pointer; __incX: Integer)
          : Double; cdecl; external libAccelerate name _PU + 'cblas_dzasum';
        function cblas_isamax(__N: Integer; __X: PSingle; __incX: Integer)
          : Integer; cdecl; external libAccelerate name _PU + 'cblas_isamax';
        function cblas_idamax(__N: Integer; __X: PDouble; __incX: Integer)
          : Integer; cdecl; external libAccelerate name _PU + 'cblas_idamax';
        function cblas_icamax(__N: Integer; __X: Pointer; __incX: Integer)
          : Integer; cdecl; external libAccelerate name _PU + 'cblas_icamax';
        function cblas_izamax(__N: Integer; __X: Pointer; __incX: Integer)
          : Integer; cdecl; external libAccelerate name _PU + 'cblas_izamax';
        procedure cblas_sswap(__N: Integer; __X: PSingle; __incX: Integer;
          __Y: PSingle; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_sswap';
        procedure cblas_scopy(__N: Integer; __X: PSingle; __incX: Integer;
          __Y: PSingle; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_scopy';
        procedure cblas_saxpy(__N: Integer; __alpha: Single; __X: PSingle;
          __incX: Integer; __Y: PSingle; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_saxpy';
        procedure catlas_saxpby(__N: Integer; __alpha: Single; __X: PSingle;
          __incX: Integer; __beta: Single; __Y: PSingle; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'catlas_saxpby';
        procedure catlas_sset(__N: Integer; __alpha: Single; __X: PSingle;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'catlas_sset';
        procedure cblas_dswap(__N: Integer; __X: PDouble; __incX: Integer;
          __Y: PDouble; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dswap';
        procedure cblas_dcopy(__N: Integer; __X: PDouble; __incX: Integer;
          __Y: PDouble; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dcopy';
        procedure cblas_daxpy(__N: Integer; __alpha: Double; __X: PDouble;
          __incX: Integer; __Y: PDouble; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_daxpy';
        procedure catlas_daxpby(__N: Integer; __alpha: Double; __X: PDouble;
          __incX: Integer; __beta: Double; __Y: PDouble; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'catlas_daxpby';
        procedure catlas_dset(__N: Integer; __alpha: Double; __X: PDouble;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'catlas_dset';
        procedure cblas_cswap(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cswap';
        procedure cblas_ccopy(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ccopy';
        procedure cblas_caxpy(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer; __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_caxpy';
        procedure catlas_caxpby(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer; __beta: Pointer; __Y: Pointer; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'catlas_caxpby';
        procedure catlas_cset(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'catlas_cset';
        procedure cblas_zswap(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zswap';
        procedure cblas_zcopy(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zcopy';
        procedure cblas_zaxpy(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer; __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zaxpy';
        procedure catlas_zaxpby(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer; __beta: Pointer; __Y: Pointer; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'catlas_zaxpby';
        procedure catlas_zset(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'catlas_zset';
        procedure cblas_srotg(__A: PSingle; __B: PSingle; __C: PSingle;
          __S: PSingle); cdecl; external libAccelerate name _PU + 'cblas_srotg';
        procedure cblas_srotmg(__d1: PSingle; __d2: PSingle; __b1: PSingle;
          __b2: Single; __P: PSingle); cdecl;
          external libAccelerate name _PU + 'cblas_srotmg';
        procedure cblas_srot(__N: Integer; __X: PSingle; __incX: Integer;
          __Y: PSingle; __incY: Integer; __C: Single; __S: Single); cdecl;
          external libAccelerate name _PU + 'cblas_srot';
        procedure cblas_srotm(__N: Integer; __X: PSingle; __incX: Integer;
          __Y: PSingle; __incY: Integer; __P: PSingle); cdecl;
          external libAccelerate name _PU + 'cblas_srotm';
        procedure cblas_drotg(__A: PDouble; __B: PDouble; __C: PDouble;
          __S: PDouble); cdecl; external libAccelerate name _PU + 'cblas_drotg';
        procedure cblas_drotmg(__d1: PDouble; __d2: PDouble; __b1: PDouble;
          __b2: Double; __P: PDouble); cdecl;
          external libAccelerate name _PU + 'cblas_drotmg';
        procedure cblas_drot(__N: Integer; __X: PDouble; __incX: Integer;
          __Y: PDouble; __incY: Integer; __C: Double; __S: Double); cdecl;
          external libAccelerate name _PU + 'cblas_drot';
        procedure cblas_drotm(__N: Integer; __X: PDouble; __incX: Integer;
          __Y: PDouble; __incY: Integer; __P: PDouble); cdecl;
          external libAccelerate name _PU + 'cblas_drotm';
        procedure cblas_sscal(__N: Integer; __alpha: Single; __X: PSingle;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_sscal';
        procedure cblas_dscal(__N: Integer; __alpha: Double; __X: PDouble;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dscal';
        procedure cblas_cscal(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cscal';
        procedure cblas_zscal(__N: Integer; __alpha: Pointer; __X: Pointer;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zscal';
        procedure cblas_csscal(__N: Integer; __alpha: Single; __X: Pointer;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_csscal';
        procedure cblas_zdscal(__N: Integer; __alpha: Double; __X: Pointer;
          __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zdscal';
        procedure cblas_crotg(__A: Pointer; __B: Pointer; __C: Pointer;
          __S: Pointer); cdecl; external libAccelerate name _PU + 'cblas_crotg';
        procedure cblas_zrotg(__A: Pointer; __B: Pointer; __C: Pointer;
          __S: Pointer); cdecl; external libAccelerate name _PU + 'cblas_zrotg';
        procedure cblas_csrot(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer; __C: Single; __S: Single); cdecl;
          external libAccelerate name _PU + 'cblas_csrot';
        procedure cblas_zdrot(__N: Integer; __X: Pointer; __incX: Integer;
          __Y: Pointer; __incY: Integer; __C: Double; __S: Double); cdecl;
          external libAccelerate name _PU + 'cblas_zdrot';
        procedure cblas_sgemv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __alpha: Single; __A: PSingle;
          __lda: Integer; __X: PSingle; __incX: Integer; __beta: Single;
          __Y: PSingle; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_sgemv';
        procedure cblas_sgbmv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __KL: Integer; __KU: Integer;
          __alpha: Single; __A: PSingle; __lda: Integer; __X: PSingle;
          __incX: Integer; __beta: Single; __Y: PSingle; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_sgbmv';
        procedure cblas_strmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: PSingle;
          __lda: Integer; __X: PSingle; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_strmv';
        procedure cblas_stbmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: PSingle; __lda: Integer; __X: PSingle; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_stbmv';
        procedure cblas_stpmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: PSingle;
          __X: PSingle; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_stpmv';
        procedure cblas_strsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: PSingle;
          __lda: Integer; __X: PSingle; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_strsv';
        procedure cblas_stbsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: PSingle; __lda: Integer; __X: PSingle; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_stbsv';
        procedure cblas_stpsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: PSingle;
          __X: PSingle; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_stpsv';
        procedure cblas_dgemv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __alpha: Double; __A: PDouble;
          __lda: Integer; __X: PDouble; __incX: Integer; __beta: Double;
          __Y: PDouble; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dgemv';
        procedure cblas_dgbmv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __KL: Integer; __KU: Integer;
          __alpha: Double; __A: PDouble; __lda: Integer; __X: PDouble;
          __incX: Integer; __beta: Double; __Y: PDouble; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_dgbmv';
        procedure cblas_dtrmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: PDouble;
          __lda: Integer; __X: PDouble; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtrmv';
        procedure cblas_dtbmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: PDouble; __lda: Integer; __X: PDouble; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtbmv';
        procedure cblas_dtpmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: PDouble;
          __X: PDouble; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtpmv';
        procedure cblas_dtrsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: PDouble;
          __lda: Integer; __X: PDouble; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtrsv';
        procedure cblas_dtbsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: PDouble; __lda: Integer; __X: PDouble; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtbsv';
        procedure cblas_dtpsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: PDouble;
          __X: PDouble; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtpsv';
        procedure cblas_cgemv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __alpha: Pointer; __A: Pointer;
          __lda: Integer; __X: Pointer; __incX: Integer; __beta: Pointer;
          __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cgemv';
        procedure cblas_cgbmv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __KL: Integer; __KU: Integer;
          __alpha: Pointer; __A: Pointer; __lda: Integer; __X: Pointer;
          __incX: Integer; __beta: Pointer; __Y: Pointer; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_cgbmv';
        procedure cblas_ctrmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: Pointer;
          __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctrmv';
        procedure cblas_ctbmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: Pointer; __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctbmv';
        procedure cblas_ctpmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: Pointer;
          __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctpmv';
        procedure cblas_ctrsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: Pointer;
          __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctrsv';
        procedure cblas_ctbsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: Pointer; __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctbsv';
        procedure cblas_ctpsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: Pointer;
          __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctpsv';
        procedure cblas_zgemv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __alpha: Pointer; __A: Pointer;
          __lda: Integer; __X: Pointer; __incX: Integer; __beta: Pointer;
          __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zgemv';
        procedure cblas_zgbmv(__Order: Cardinal; __TransA: Cardinal;
          __M: Integer; __N: Integer; __KL: Integer; __KU: Integer;
          __alpha: Pointer; __A: Pointer; __lda: Integer; __X: Pointer;
          __incX: Integer; __beta: Pointer; __Y: Pointer; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_zgbmv';
        procedure cblas_ztrmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: Pointer;
          __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztrmv';
        procedure cblas_ztbmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: Pointer; __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztbmv';
        procedure cblas_ztpmv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: Pointer;
          __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztpmv';
        procedure cblas_ztrsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __A: Pointer;
          __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztrsv';
        procedure cblas_ztbsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __K: Integer;
          __A: Pointer; __lda: Integer; __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztbsv';
        procedure cblas_ztpsv(__Order: Cardinal; __Uplo: Cardinal;
          __TransA: Cardinal; __Diag: Cardinal; __N: Integer; __Ap: Pointer;
          __X: Pointer; __incX: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztpsv';
        procedure cblas_ssymv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __A: PSingle; __lda: Integer; __X: PSingle;
          __incX: Integer; __beta: Single; __Y: PSingle; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_ssymv';
        procedure cblas_ssbmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __K: Integer; __alpha: Single; __A: PSingle; __lda: Integer;
          __X: PSingle; __incX: Integer; __beta: Single; __Y: PSingle;
          __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ssbmv';
        procedure cblas_sspmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __Ap: PSingle; __X: PSingle; __incX: Integer;
          __beta: Single; __Y: PSingle; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_sspmv';
        procedure cblas_sger(__Order: Cardinal; __M: Integer; __N: Integer;
          __alpha: Single; __X: PSingle; __incX: Integer; __Y: PSingle;
          __incY: Integer; __A: PSingle; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_sger';
        procedure cblas_ssyr(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __X: PSingle; __incX: Integer; __A: PSingle;
          __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ssyr';
        procedure cblas_sspr(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __X: PSingle; __incX: Integer; __Ap: PSingle); cdecl;
          external libAccelerate name _PU + 'cblas_sspr';
        procedure cblas_ssyr2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __X: PSingle; __incX: Integer; __Y: PSingle;
          __incY: Integer; __A: PSingle; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ssyr2';
        procedure cblas_sspr2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __X: PSingle; __incX: Integer; __Y: PSingle;
          __incY: Integer; __A: PSingle); cdecl;
          external libAccelerate name _PU + 'cblas_sspr2';
        procedure cblas_dsymv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __A: PDouble; __lda: Integer; __X: PDouble;
          __incX: Integer; __beta: Double; __Y: PDouble; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_dsymv';
        procedure cblas_dsbmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __K: Integer; __alpha: Double; __A: PDouble; __lda: Integer;
          __X: PDouble; __incX: Integer; __beta: Double; __Y: PDouble;
          __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dsbmv';
        procedure cblas_dspmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __Ap: PDouble; __X: PDouble; __incX: Integer;
          __beta: Double; __Y: PDouble; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dspmv';
        procedure cblas_dger(__Order: Cardinal; __M: Integer; __N: Integer;
          __alpha: Double; __X: PDouble; __incX: Integer; __Y: PDouble;
          __incY: Integer; __A: PDouble; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dger';
        procedure cblas_dsyr(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __X: PDouble; __incX: Integer; __A: PDouble;
          __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dsyr';
        procedure cblas_dspr(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __X: PDouble; __incX: Integer; __Ap: PDouble); cdecl;
          external libAccelerate name _PU + 'cblas_dspr';
        procedure cblas_dsyr2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __X: PDouble; __incX: Integer; __Y: PDouble;
          __incY: Integer; __A: PDouble; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dsyr2';
        procedure cblas_dspr2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __X: PDouble; __incX: Integer; __Y: PDouble;
          __incY: Integer; __A: PDouble); cdecl;
          external libAccelerate name _PU + 'cblas_dspr2';
        procedure cblas_chemv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __A: Pointer; __lda: Integer; __X: Pointer;
          __incX: Integer; __beta: Pointer; __Y: Pointer; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_chemv';
        procedure cblas_chbmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __K: Integer; __alpha: Pointer; __A: Pointer; __lda: Integer;
          __X: Pointer; __incX: Integer; __beta: Pointer; __Y: Pointer;
          __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_chbmv';
        procedure cblas_chpmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __Ap: Pointer; __X: Pointer; __incX: Integer;
          __beta: Pointer; __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_chpmv';
        procedure cblas_cgeru(__Order: Cardinal; __M: Integer; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __A: Pointer; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cgeru';
        procedure cblas_cgerc(__Order: Cardinal; __M: Integer; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __A: Pointer; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cgerc';
        procedure cblas_cher(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __X: Pointer; __incX: Integer; __A: Pointer;
          __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cher';
        procedure cblas_chpr(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Single; __X: Pointer; __incX: Integer; __A: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_chpr';
        procedure cblas_cher2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __A: Pointer; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cher2';
        procedure cblas_chpr2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __Ap: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_chpr2';
        procedure cblas_zhemv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __A: Pointer; __lda: Integer; __X: Pointer;
          __incX: Integer; __beta: Pointer; __Y: Pointer; __incY: Integer);
          cdecl; external libAccelerate name _PU + 'cblas_zhemv';
        procedure cblas_zhbmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __K: Integer; __alpha: Pointer; __A: Pointer; __lda: Integer;
          __X: Pointer; __incX: Integer; __beta: Pointer; __Y: Pointer;
          __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zhbmv';
        procedure cblas_zhpmv(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __Ap: Pointer; __X: Pointer; __incX: Integer;
          __beta: Pointer; __Y: Pointer; __incY: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zhpmv';
        procedure cblas_zgeru(__Order: Cardinal; __M: Integer; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __A: Pointer; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zgeru';
        procedure cblas_zgerc(__Order: Cardinal; __M: Integer; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __A: Pointer; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zgerc';
        procedure cblas_zher(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __X: Pointer; __incX: Integer; __A: Pointer;
          __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zher';
        procedure cblas_zhpr(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Double; __X: Pointer; __incX: Integer; __A: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_zhpr';
        procedure cblas_zher2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __A: Pointer; __lda: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zher2';
        procedure cblas_zhpr2(__Order: Cardinal; __Uplo: Cardinal; __N: Integer;
          __alpha: Pointer; __X: Pointer; __incX: Integer; __Y: Pointer;
          __incY: Integer; __Ap: Pointer); cdecl;
          external libAccelerate name _PU + 'cblas_zhpr2';
        procedure cblas_sgemm(__Order: Cardinal; __TransA: Cardinal;
          __TransB: Cardinal; __M: Integer; __N: Integer; __K: Integer;
          __alpha: Single; __A: PSingle; __lda: Integer; __B: PSingle;
          __ldb: Integer; __beta: Single; __C: PSingle; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_sgemm';
        procedure cblas_ssymm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __M: Integer; __N: Integer; __alpha: Single;
          __A: PSingle; __lda: Integer; __B: PSingle; __ldb: Integer;
          __beta: Single; __C: PSingle; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ssymm';
        procedure cblas_ssyrk(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Single;
          __A: PSingle; __lda: Integer; __beta: Single; __C: PSingle;
          __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ssyrk';
        procedure cblas_ssyr2k(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Single;
          __A: PSingle; __lda: Integer; __B: PSingle; __ldb: Integer;
          __beta: Single; __C: PSingle; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ssyr2k';
        procedure cblas_strmm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Single; __A: PSingle; __lda: Integer;
          __B: PSingle; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_strmm';
        procedure cblas_strsm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Single; __A: PSingle; __lda: Integer;
          __B: PSingle; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_strsm';
        procedure cblas_dgemm(__Order: Cardinal; __TransA: Cardinal;
          __TransB: Cardinal; __M: Integer; __N: Integer; __K: Integer;
          __alpha: Double; __A: PDouble; __lda: Integer; __B: PDouble;
          __ldb: Integer; __beta: Double; __C: PDouble; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dgemm';
        procedure cblas_dsymm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __M: Integer; __N: Integer; __alpha: Double;
          __A: PDouble; __lda: Integer; __B: PDouble; __ldb: Integer;
          __beta: Double; __C: PDouble; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dsymm';
        procedure cblas_dsyrk(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Double;
          __A: PDouble; __lda: Integer; __beta: Double; __C: PDouble;
          __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dsyrk';
        procedure cblas_dsyr2k(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Double;
          __A: PDouble; __lda: Integer; __B: PDouble; __ldb: Integer;
          __beta: Double; __C: PDouble; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dsyr2k';
        procedure cblas_dtrmm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Double; __A: PDouble; __lda: Integer;
          __B: PDouble; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtrmm';
        procedure cblas_dtrsm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Double; __A: PDouble; __lda: Integer;
          __B: PDouble; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_dtrsm';
        procedure cblas_cgemm(__Order: Cardinal; __TransA: Cardinal;
          __TransB: Cardinal; __M: Integer; __N: Integer; __K: Integer;
          __alpha: Pointer; __A: Pointer; __lda: Integer; __B: Pointer;
          __ldb: Integer; __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cgemm';
        procedure cblas_csymm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __M: Integer; __N: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_csymm';
        procedure cblas_csyrk(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __beta: Pointer; __C: Pointer;
          __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_csyrk';
        procedure cblas_csyr2k(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_csyr2k';
        procedure cblas_ctrmm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Pointer; __A: Pointer; __lda: Integer;
          __B: Pointer; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctrmm';
        procedure cblas_ctrsm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Pointer; __A: Pointer; __lda: Integer;
          __B: Pointer; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ctrsm';
        procedure cblas_zgemm(__Order: Cardinal; __TransA: Cardinal;
          __TransB: Cardinal; __M: Integer; __N: Integer; __K: Integer;
          __alpha: Pointer; __A: Pointer; __lda: Integer; __B: Pointer;
          __ldb: Integer; __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zgemm';
        procedure cblas_zsymm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __M: Integer; __N: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zsymm';
        procedure cblas_zsyrk(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __beta: Pointer; __C: Pointer;
          __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zsyrk';
        procedure cblas_zsyr2k(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zsyr2k';
        procedure cblas_ztrmm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Pointer; __A: Pointer; __lda: Integer;
          __B: Pointer; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztrmm';
        procedure cblas_ztrsm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __TransA: Cardinal; __Diag: Cardinal; __M: Integer;
          __N: Integer; __alpha: Pointer; __A: Pointer; __lda: Integer;
          __B: Pointer; __ldb: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_ztrsm';
        procedure cblas_chemm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __M: Integer; __N: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_chemm';
        procedure cblas_cherk(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Single;
          __A: Pointer; __lda: Integer; __beta: Single; __C: Pointer;
          __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cherk';
        procedure cblas_cher2k(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Single; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_cher2k';
        procedure cblas_zhemm(__Order: Cardinal; __Side: Cardinal;
          __Uplo: Cardinal; __M: Integer; __N: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Pointer; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zhemm';
        procedure cblas_zherk(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Double;
          __A: Pointer; __lda: Integer; __beta: Double; __C: Pointer;
          __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zherk';
        procedure cblas_zher2k(__Order: Cardinal; __Uplo: Cardinal;
          __Trans: Cardinal; __N: Integer; __K: Integer; __alpha: Pointer;
          __A: Pointer; __lda: Integer; __B: Pointer; __ldb: Integer;
          __beta: Double; __C: Pointer; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'cblas_zher2k';
        procedure appleblas_sgeadd(__Order: Cardinal; __TransA: Cardinal;
          __TransB: Cardinal; __M: Integer; __N: Integer; __alpha: Single;
          __A: PSingle; __lda: Integer; __beta: Single; __B: PSingle;
          __ldb: Integer; __C: PSingle; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'appleblas_sgeadd';
        procedure appleblas_dgeadd(__Order: Cardinal; __TransA: Cardinal;
          __TransB: Cardinal; __M: Integer; __N: Integer; __alpha: Double;
          __A: PDouble; __lda: Integer; __beta: Double; __B: PDouble;
          __ldb: Integer; __C: PDouble; __ldc: Integer); cdecl;
          external libAccelerate name _PU + 'appleblas_dgeadd';
        procedure ATLU_DestroyThreadMemory; cdecl;
          external libAccelerate name _PU + 'ATLU_DestroyThreadMemory';
        procedure SetBLASParamErrorProc(__ErrorProc: BLASParamErrorProc); cdecl;
          external libAccelerate name _PU + 'SetBLASParamErrorProc';
        function cbdsqr_(__Uplo: MarshaledAString; __N: PLongInt;
          __ncvt: PLongInt; __nru: PLongInt; __ncc: PLongInt; __d__: PSingle;
          __E: PSingle; __vt: Pointer; __ldvt: PLongInt; __u: Pointer;
          __ldu: PLongInt; __c__: Pointer; __ldc: PLongInt; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cbdsqr_';
        function cgbbrd_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __ncc: PLongInt; __KL: PLongInt; __KU: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __d__: PSingle; __E: PSingle; __Q: Pointer;
          __ldq: PLongInt; __pt: Pointer; __ldpt: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgbbrd_';
        function cgbcon_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbcon_';
        function cgbequ_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __r__: PSingle;
          __c__: PSingle; __rowcnd: PSingle; __colcnd: PSingle; __amax: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbequ_';
        function cgbequb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __r__: PSingle;
          __c__: PSingle; __rowcnd: PSingle; __colcnd: PSingle; __amax: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbequb_';
        function cgbrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __afb: Pointer; __ldafb: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __ferr: PSingle; __berr: PSingle; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbrfs_';
        function cgbsv_(__N: PLongInt; __KL: PLongInt; __KU: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbsv_';
        function cgbsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt;
          __ab: Pointer; __ldab: PLongInt; __afb: Pointer; __ldafb: PLongInt;
          __ipiv: PLongInt; __equed: MarshaledAString; __r__: PSingle;
          __c__: PSingle; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbsvx_';
        function cgbtf2_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbtf2_';
        function cgbtrf_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbtrf_';
        function cgbtrs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgbtrs_';
        function cgebak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PSingle;
          __M: PLongInt; __v: Pointer; __ldv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgebak_';
        function cgebal_(__job: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgebal_';
        function cgebd2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tauq: Pointer;
          __taup: Pointer; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgebd2_';
        function cgebrd_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tauq: Pointer;
          __taup: Pointer; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgebrd_';
        function cgecon_(__norm: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgecon_';
        function cgeequ_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __r__: PSingle; __c__: PSingle; __rowcnd: PSingle;
          __colcnd: PSingle; __amax: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgeequ_';
        function cgeequb_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __r__: PSingle; __c__: PSingle; __rowcnd: PSingle;
          __colcnd: PSingle; __amax: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgeequb_';
        function cgees_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __sdim: PLongInt; __w: Pointer; __vs: Pointer; __ldvs: PLongInt;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgees_';
        function cgeesx_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __sense: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __sdim: PLongInt; __w: Pointer;
          __vs: Pointer; __ldvs: PLongInt; __rconde: PSingle; __rcondv: PSingle;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgeesx_';
        function cgeev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __w: Pointer;
          __vl: Pointer; __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgeev_';
        function cgeevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __w: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __scale: PSingle; __abnrm: PSingle;
          __rconde: PSingle; __rcondv: PSingle; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cgeevx_';
        function cgegs_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __alpha: Pointer; __beta: Pointer; __vsl: Pointer;
          __ldvsl: PLongInt; __vsr: Pointer; __ldvsr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cgegs_';
        function cgegv_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __alpha: Pointer; __beta: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cgegv_';
        function cgehd2_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgehd2_';
        function cgehrd_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgehrd_';
        function cgelq2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgelq2_';
        function cgelqf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgelqf_';
        function cgels_(__Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgels_';
        function cgelsd_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __S: PSingle; __rcond: PSingle; __rank: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgelsd_';
        function cgelss_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __S: PSingle; __rcond: PSingle; __rank: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cgelss_';
        function cgelsx_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PSingle; __rank: PLongInt; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgelsx_';
        function cgelsy_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PSingle; __rank: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cgelsy_';
        function cgeql2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgeql2_';
        function cgeqlf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgeqlf_';
        function cgeqp3_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __jpvt: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cgeqp3_';
        function cgeqpf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __jpvt: PLongInt; __tau: Pointer; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgeqpf_';
        function cgeqr2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgeqr2_';
        function cgeqrf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgeqrf_';
        function cgerfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgerfs_';
        function cgerq2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgerq2_';
        function cgerqf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgerqf_';
        function cgesc2_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __rhs: Pointer; __ipiv: PLongInt; __jpiv: PLongInt; __scale: PSingle)
          : Integer; cdecl; external libAccelerate name _PU + 'cgesc2_';
        function cgesdd_(__jobz: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __S: PSingle; __u: Pointer;
          __ldu: PLongInt; __vt: Pointer; __ldvt: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgesdd_';
        function cgesv_(__N: PLongInt; __nrhs: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgesv_';
        function cgesvd_(__jobu: MarshaledAString; __jobvt: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __S: PSingle; __u: Pointer; __ldu: PLongInt; __vt: Pointer;
          __ldvt: PLongInt; __work: Pointer; __lwork: PLongInt;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgesvd_';
        function cgesvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __ipiv: PLongInt;
          __equed: MarshaledAString; __r__: PSingle; __c__: PSingle;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __rcond: PSingle; __ferr: PSingle; __berr: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgesvx_';
        function cgetc2_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __jpiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgetc2_';
        function cgetf2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgetf2_';
        function cgetrf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgetrf_';
        function cgetri_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgetri_';
        function cgetrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgetrs_';
        function cggbak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __lscale: PSingle;
          __rscale: PSingle; __M: PLongInt; __v: Pointer; __ldv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggbak_';
        function cggbal_(__job: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __lscale: PSingle; __rscale: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggbal_';
        function cgges_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __sdim: PLongInt; __alpha: Pointer; __beta: Pointer; __vsl: Pointer;
          __ldvsl: PLongInt; __vsr: Pointer; __ldvsr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __bwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgges_';
        function cggesx_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp;
          __sense: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __sdim: PLongInt;
          __alpha: Pointer; __beta: Pointer; __vsl: Pointer; __ldvsl: PLongInt;
          __vsr: Pointer; __ldvsr: PLongInt; __rconde: PSingle;
          __rcondv: PSingle; __work: Pointer; __lwork: PLongInt;
          __rwork: PSingle; __iwork: PLongInt; __liwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggesx_';
        function cggev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __alpha: Pointer; __beta: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cggev_';
        function cggevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __alpha: Pointer; __beta: Pointer; __vl: Pointer; __ldvl: PLongInt;
          __vr: Pointer; __ldvr: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __lscale: PSingle; __rscale: PSingle; __abnrm: PSingle;
          __bbnrm: PSingle; __rconde: PSingle; __rcondv: PSingle;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __iwork: PLongInt; __bwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cggevx_';
        function cggglm_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __d__: Pointer; __X: Pointer; __Y: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggglm_';
        function cgghrd_(__compq: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __Q: Pointer;
          __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgghrd_';
        function cgglse_(__M: PLongInt; __N: PLongInt; __P: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __c__: Pointer; __d__: Pointer; __X: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgglse_';
        function cggqrf_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: Pointer; __lda: PLongInt; __taua: Pointer; __B: Pointer;
          __ldb: PLongInt; __taub: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggqrf_';
        function cggrqf_(__M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __taua: Pointer; __B: Pointer;
          __ldb: PLongInt; __taub: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggrqf_';
        function cggsvd_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __N: PLongInt; __P: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __alpha: PSingle; __beta: PSingle;
          __u: Pointer; __ldu: PLongInt; __v: Pointer; __ldv: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __work: Pointer; __rwork: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggsvd_';
        function cggsvp_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __tola: PSingle; __tolb: PSingle; __K: PLongInt; __L: PLongInt;
          __u: Pointer; __ldu: PLongInt; __v: Pointer; __ldv: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __iwork: PLongInt; __rwork: PSingle;
          __tau: Pointer; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cggsvp_';
        function cgtcon_(__norm: MarshaledAString; __N: PLongInt; __dl: Pointer;
          __d__: Pointer; __du: Pointer; __du2: Pointer; __ipiv: PLongInt;
          __anorm: PSingle; __rcond: PSingle; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgtcon_';
        function cgtrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: Pointer; __d__: Pointer; __du: Pointer;
          __dlf: Pointer; __DF: Pointer; __duf: Pointer; __du2: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PSingle; __berr: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgtrfs_';
        function cgtsv_(__N: PLongInt; __nrhs: PLongInt; __dl: Pointer;
          __d__: Pointer; __du: Pointer; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgtsv_';
        function cgtsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __dl: Pointer; __d__: Pointer;
          __du: Pointer; __dlf: Pointer; __DF: Pointer; __duf: Pointer;
          __du2: Pointer; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle;
          __berr: PSingle; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgtsvx_';
        function cgttrf_(__N: PLongInt; __dl: Pointer; __d__: Pointer;
          __du: Pointer; __du2: Pointer; __ipiv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cgttrf_';
        function cgttrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: Pointer; __d__: Pointer; __du: Pointer;
          __du2: Pointer; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgttrs_';
        function cgtts2_(__itrans: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __dl: Pointer; __d__: Pointer; __du: Pointer; __du2: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cgtts2_';
        function chbev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __w: PSingle; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chbev_';
        function chbevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __w: PSingle; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __lrwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'chbevd_';
        function chbevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: Pointer; __ldab: PLongInt; __Q: Pointer; __ldq: PLongInt;
          __vl: PSingle; __vu: PSingle; __il: PLongInt; __iu: PLongInt;
          __abstol: PSingle; __M: PLongInt; __w: PSingle; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __rwork: PSingle; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chbevx_';
        function chbgst_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __bb: Pointer; __ldbb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'chbgst_';
        function chbgv_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __bb: Pointer; __ldbb: PLongInt; __w: PSingle;
          __z__: Pointer; __ldz: PLongInt; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chbgv_';
        function chbgvd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __bb: Pointer; __ldbb: PLongInt; __w: PSingle;
          __z__: Pointer; __ldz: PLongInt; __work: Pointer; __lwork: PLongInt;
          __rwork: PSingle; __lrwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chbgvd_';
        function chbgvx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __ka: PLongInt;
          __kb: PLongInt; __ab: Pointer; __ldab: PLongInt; __bb: Pointer;
          __ldbb: PLongInt; __Q: Pointer; __ldq: PLongInt; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __rwork: PSingle; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chbgvx_';
        function chbtrd_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __d__: PSingle; __E: PSingle; __Q: Pointer; __ldq: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chbtrd_';
        function checon_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'checon_';
        function cheequb_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PSingle; __scond: PSingle; __amax: PSingle;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cheequb_';
        function cheev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __w: PSingle;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cheev_';
        function cheevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __w: PSingle;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cheevd_';
        function cheevr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __vl: PSingle; __vu: PSingle; __il: PLongInt;
          __iu: PLongInt; __abstol: PSingle; __M: PLongInt; __w: PSingle;
          __z__: Pointer; __ldz: PLongInt; __isuppz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __lrwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cheevr_';
        function cheevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __vl: PSingle; __vu: PSingle; __il: PLongInt;
          __iu: PLongInt; __abstol: PSingle; __M: PLongInt; __w: PSingle;
          __z__: Pointer; __ldz: PLongInt; __work: Pointer; __lwork: PLongInt;
          __rwork: PSingle; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cheevx_';
        function chegs2_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chegs2_';
        function chegst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chegst_';
        function chegv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __w: PSingle;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chegv_';
        function chegvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __w: PSingle;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chegvd_';
        function chegvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __vl: PSingle; __vu: PSingle; __il: PLongInt; __iu: PLongInt;
          __abstol: PSingle; __M: PLongInt; __w: PSingle; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'chegvx_';
        function cherfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cherfs_';
        function chesv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chesv_';
        function chesvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PSingle;
          __ferr: PSingle; __berr: PSingle; __work: Pointer; __lwork: PLongInt;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chesvx_';
        function chetd2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tau: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chetd2_';
        function chetf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chetf2_';
        function chetrd_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tau: Pointer;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chetrd_';
        function chetrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chetrf_';
        function chetri_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'chetri_';
        function chetrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chetrs_';
        function chfrk_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __N: PLongInt; __K: PLongInt;
          __alpha: PSingle; __A: Pointer; __lda: PLongInt; __beta: PSingle;
          __c__: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'chfrk_';
        function chgeqz_(__job: MarshaledAString; __compq: MarshaledAString;
          __compz: MarshaledAString; __N: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt; __t: Pointer;
          __ldt: PLongInt; __alpha: Pointer; __beta: Pointer; __Q: Pointer;
          __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'chgeqz_';
        procedure chla_transtype__(__ret_val: MarshaledAString;
          __ret_val_len: __CLPK_ftnlen; __Trans: PLongInt); cdecl;
          external libAccelerate name _PU + 'chla_transtype__';
        function chpcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chpcon_';
        function chpev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __w: PSingle; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'chpev_';
        function chpevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __w: PSingle; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chpevd_';
        function chpevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __rwork: PSingle; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chpevx_';
        function chpgst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __bp: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'chpgst_';
        function chpgv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer; __bp: Pointer;
          __w: PSingle; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chpgv_';
        function chpgvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer; __bp: Pointer;
          __w: PSingle; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PSingle; __lrwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'chpgvd_';
        function chpgvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __Ap: Pointer; __bp: Pointer; __vl: PSingle; __vu: PSingle;
          __il: PLongInt; __iu: PLongInt; __abstol: PSingle; __M: PLongInt;
          __w: PSingle; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __rwork: PSingle; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chpgvx_';
        function chprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __ferr: PSingle; __berr: PSingle; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chprfs_';
        function chpsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chpsv_';
        function chpsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chpsvx_';
        function chptrd_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __d__: PSingle; __E: PSingle; __tau: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'chptrd_';
        function chptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chptrf_';
        function chptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chptri_';
        function chptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chptrs_';
        function chsein_(__Side: MarshaledAString; __eigsrc: MarshaledAString;
          __initv: MarshaledAString; __select: PLongInt; __N: PLongInt;
          __h__: Pointer; __ldh: PLongInt; __w: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __mm: PLongInt;
          __M: PLongInt; __work: Pointer; __rwork: PSingle; __ifaill: PLongInt;
          __ifailr: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chsein_';
        function chseqr_(__job: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer;
          __ldh: PLongInt; __w: Pointer; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'chseqr_';
        function clabrd_(__M: PLongInt; __N: PLongInt; __nb: PLongInt;
          __A: Pointer; __lda: PLongInt; __d__: PSingle; __E: PSingle;
          __tauq: Pointer; __taup: Pointer; __X: Pointer; __ldx: PLongInt;
          __Y: Pointer; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clabrd_';
        function clacgv_(__N: PLongInt; __X: Pointer; __incX: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clacgv_';
        function clacn2_(__N: PLongInt; __v: Pointer; __X: Pointer;
          __est: PSingle; __kase: PLongInt; __isave: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clacn2_';
        function clacon_(__N: PLongInt; __v: Pointer; __X: Pointer;
          __est: PSingle; __kase: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clacon_';
        function clacp2_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: Pointer; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clacp2_';
        function clacpy_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clacpy_';
        function clacrm_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: PSingle; __ldb: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __rwork: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'clacrm_';
        function clacrt_(__N: PLongInt; __cx: Pointer; __incX: PLongInt;
          __cy: Pointer; __incY: PLongInt; __c__: Pointer; __S: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'clacrt_';
        procedure cladiv_(__ret_val: Pointer; __X: Pointer; __Y: Pointer);
          cdecl; external libAccelerate name _PU + 'cladiv_';
        function claed0_(__qsiz: PLongInt; __N: PLongInt; __d__: PSingle;
          __E: PSingle; __Q: Pointer; __ldq: PLongInt; __qstore: Pointer;
          __ldqs: PLongInt; __rwork: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'claed0_';
        function claed7_(__N: PLongInt; __cutpnt: PLongInt; __qsiz: PLongInt;
          __tlvls: PLongInt; __curlvl: PLongInt; __curpbm: PLongInt;
          __d__: PSingle; __Q: Pointer; __ldq: PLongInt; __rho: PSingle;
          __indxq: PLongInt; __qstore: PSingle; __qptr: PLongInt;
          __prmptr: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __givnum: PSingle; __work: Pointer;
          __rwork: PSingle; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'claed7_';
        function claed8_(__K: PLongInt; __N: PLongInt; __qsiz: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __d__: PSingle; __rho: PSingle;
          __cutpnt: PLongInt; __z__: PSingle; __dlamda: PSingle; __q2: Pointer;
          __ldq2: PLongInt; __w: PSingle; __indxp: PLongInt; __indx: PLongInt;
          __indxq: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __givnum: PSingle; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'claed8_';
        function claein_(__rightv: PLongInt; __noinit: PLongInt; __N: PLongInt;
          __h__: Pointer; __ldh: PLongInt; __w: Pointer; __v: Pointer;
          __B: Pointer; __ldb: PLongInt; __rwork: PSingle; __eps3: PSingle;
          __smlnum: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'claein_';
        function claesy_(__A: Pointer; __B: Pointer; __c__: Pointer;
          __rt1: Pointer; __rt2: Pointer; __evscal: Pointer; __cs1: Pointer;
          __sn1: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'claesy_';
        function claev2_(__A: Pointer; __B: Pointer; __c__: Pointer;
          __rt1: PSingle; __rt2: PSingle; __cs1: PSingle; __sn1: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'claev2_';
        function clag2z_(__M: PLongInt; __N: PLongInt; __sa: Pointer;
          __ldsa: PLongInt; __A: Pointer; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clag2z_';
        function clags2_(__upper: PLongInt; __A1: PSingle; __a2: Pointer;
          __a3: PSingle; __b1: PSingle; __b2: Pointer; __b3: PSingle;
          __csu: PSingle; __snu: Pointer; __csv: PSingle; __snv: Pointer;
          __csq: PSingle; __snq: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clags2_';
        function clagtm_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __alpha: PSingle; __dl: Pointer; __d__: Pointer;
          __du: Pointer; __X: Pointer; __ldx: PLongInt; __beta: PSingle;
          __B: Pointer; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clagtm_';
        function clahef_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __w: Pointer; __ldw: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clahef_';
        function clahqr_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __w: Pointer; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clahqr_';
        function clahr2_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __t: Pointer;
          __ldt: PLongInt; __Y: Pointer; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clahr2_';
        function clahrd_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __t: Pointer;
          __ldt: PLongInt; __Y: Pointer; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clahrd_';
        function claic1_(__job: PLongInt; __J: PLongInt; __X: Pointer;
          __sest: PSingle; __w: Pointer; __gamma: Pointer; __sestpr: PSingle;
          __S: Pointer; __c__: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'claic1_';
        function clals0_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __nrhs: PLongInt; __B: Pointer; __ldb: PLongInt;
          __bx: Pointer; __ldbx: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __ldgcol: PLongInt; __givnum: PSingle;
          __ldgnum: PLongInt; __poles: PSingle; __difl: PSingle;
          __difr: PSingle; __z__: PSingle; __K: PLongInt; __c__: PSingle;
          __S: PSingle; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clals0_';
        function clalsa_(__icompq: PLongInt; __smlsiz: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __B: Pointer; __ldb: PLongInt; __bx: Pointer;
          __ldbx: PLongInt; __u: PSingle; __ldu: PLongInt; __vt: PSingle;
          __K: PLongInt; __difl: PSingle; __difr: PSingle; __z__: PSingle;
          __poles: PSingle; __givptr: PLongInt; __givcol: PLongInt;
          __ldgcol: PLongInt; __perm: PLongInt; __givnum: PSingle;
          __c__: PSingle; __S: PSingle; __rwork: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clalsa_';
        function clalsd_(__Uplo: MarshaledAString; __smlsiz: PLongInt;
          __N: PLongInt; __nrhs: PLongInt; __d__: PSingle; __E: PSingle;
          __B: Pointer; __ldb: PLongInt; __rcond: PSingle; __rank: PLongInt;
          __work: Pointer; __rwork: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clalsd_';
        function clangb_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clangb_';
        function clange_(__norm: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __work: PSingle): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'clange_';
        function clangt_(__norm: MarshaledAString; __N: PLongInt; __dl: Pointer;
          __d__: Pointer; __du: Pointer): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clangt_';
        function clanhb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clanhb_';
        function clanhe_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __work: PSingle)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clanhe_';
        function clanhf_(__norm: MarshaledAString; __transr: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clanhf_';
        function clanhp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __work: PSingle): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'clanhp_';
        function clanhs_(__norm: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clanhs_';
        function clanht_(__norm: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: Pointer): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clanht_';
        function clansb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clansb_';
        function clansp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __work: PSingle): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'clansp_';
        function clansy_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __work: PSingle)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clansy_';
        function clantb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __K: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clantb_';
        function clantp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clantp_';
        function clantr_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'clantr_';
        function clapll_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __Y: Pointer; __incY: PLongInt; __ssmin: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'clapll_';
        function clapmt_(__forwrd: PLongInt; __M: PLongInt; __N: PLongInt;
          __X: Pointer; __ldx: PLongInt; __K: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clapmt_';
        function claqgb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __r__: PSingle;
          __c__: PSingle; __rowcnd: PSingle; __colcnd: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'claqgb_';
        function claqge_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __r__: PSingle; __c__: PSingle; __rowcnd: PSingle;
          __colcnd: PSingle; __amax: PSingle; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'claqge_';
        function claqhb_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __S: PSingle;
          __scond: PSingle; __amax: PSingle; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'claqhb_';
        function claqhe_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PSingle; __scond: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'claqhe_';
        function claqhp_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __S: PSingle; __scond: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'claqhp_';
        function claqp2_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __A: Pointer; __lda: PLongInt; __jpvt: PLongInt; __tau: Pointer;
          __vn1: PSingle; __vn2: PSingle; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'claqp2_';
        function claqps_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: Pointer; __lda: PLongInt;
          __jpvt: PLongInt; __tau: Pointer; __vn1: PSingle; __vn2: PSingle;
          __auxv: Pointer; __F: Pointer; __ldf: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'claqps_';
        function claqr0_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __w: Pointer; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'claqr0_';
        function claqr1_(__N: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __S1: Pointer; __S2: Pointer; __v: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'claqr1_';
        function claqr2_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: Pointer;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sh: Pointer;
          __v: Pointer; __ldv: PLongInt; __nh: PLongInt; __t: Pointer;
          __ldt: PLongInt; __nv: PLongInt; __wv: Pointer; __ldwv: PLongInt;
          __work: Pointer; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'claqr2_';
        function claqr3_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: Pointer;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sh: Pointer;
          __v: Pointer; __ldv: PLongInt; __nh: PLongInt; __t: Pointer;
          __ldt: PLongInt; __nv: PLongInt; __wv: Pointer; __ldwv: PLongInt;
          __work: Pointer; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'claqr3_';
        function claqr4_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __w: Pointer; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'claqr4_';
        function claqr5_(__wantt: PLongInt; __wantz: PLongInt;
          __kacc22: PLongInt; __N: PLongInt; __ktop: PLongInt; __kbot: PLongInt;
          __nshfts: PLongInt; __S: Pointer; __h__: Pointer; __ldh: PLongInt;
          __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __v: Pointer; __ldv: PLongInt; __u: Pointer; __ldu: PLongInt;
          __nv: PLongInt; __wv: Pointer; __ldwv: PLongInt; __nh: PLongInt;
          __wh: Pointer; __ldwh: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'claqr5_';
        function claqsb_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __S: PSingle;
          __scond: PSingle; __amax: PSingle; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'claqsb_';
        function claqsp_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __S: PSingle; __scond: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'claqsp_';
        function claqsy_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PSingle; __scond: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'claqsy_';
        function clar1v_(__N: PLongInt; __b1: PLongInt; __bn: PLongInt;
          __lambda: PSingle; __d__: PSingle; __L: PSingle; __ld: PSingle;
          __lld: PSingle; __pivmin: PSingle; __gaptol: PSingle; __z__: Pointer;
          __wantnc: PLongInt; __negcnt: PLongInt; __ztz: PSingle;
          __mingma: PSingle; __r__: PLongInt; __isuppz: PLongInt;
          __nrminv: PSingle; __resid: PSingle; __rqcorr: PSingle;
          __work: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'clar1v_';
        function clar2v_(__N: PLongInt; __X: Pointer; __Y: Pointer;
          __z__: Pointer; __incX: PLongInt; __c__: PSingle; __S: Pointer;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clar2v_';
        function clarcm_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __rwork: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'clarcm_';
        function clarf_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: Pointer; __incv: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clarf_';
        function clarfb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __v: Pointer; __ldv: PLongInt;
          __t: Pointer; __ldt: PLongInt; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clarfb_';
        function clarfg_(__N: PLongInt; __alpha: Pointer; __X: Pointer;
          __incX: PLongInt; __tau: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clarfg_';
        function clarfp_(__N: PLongInt; __alpha: Pointer; __X: Pointer;
          __incX: PLongInt; __tau: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clarfp_';
        function clarft_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: Pointer; __ldv: PLongInt;
          __tau: Pointer; __t: Pointer; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clarft_';
        function clarfx_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: Pointer; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clarfx_';
        function clargv_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __Y: Pointer; __incY: PLongInt; __c__: PSingle; __incc: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clargv_';
        function clarnv_(__idist: PLongInt; __iseed: PLongInt; __N: PLongInt;
          __X: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clarnv_';
        function clarrv_(__N: PLongInt; __vl: PSingle; __vu: PSingle;
          __d__: PSingle; __L: PSingle; __pivmin: PSingle; __isplit: PLongInt;
          __M: PLongInt; __dol: PLongInt; __dou: PLongInt; __minrgp: PSingle;
          __rtol1: PSingle; __rtol2: PSingle; __w: PSingle; __werr: PSingle;
          __wgap: PSingle; __iblock: PLongInt; __indexw: PLongInt;
          __gers: PSingle; __z__: Pointer; __ldz: PLongInt; __isuppz: PLongInt;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clarrv_';
        function clarscl2_(__M: PLongInt; __N: PLongInt; __d__: PSingle;
          __X: Pointer; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clarscl2_';
        function clartg_(__F: Pointer; __g: Pointer; __cs: PSingle;
          __sn: Pointer; __r__: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clartg_';
        function clartv_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __Y: Pointer; __incY: PLongInt; __c__: PSingle; __S: Pointer;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clartv_';
        function clarz_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __L: PLongInt; __v: Pointer; __incv: PLongInt; __tau: Pointer;
          __c__: Pointer; __ldc: PLongInt; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clarz_';
        function clarzb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __L: PLongInt; __v: Pointer;
          __ldv: PLongInt; __t: Pointer; __ldt: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clarzb_';
        function clarzt_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: Pointer; __ldv: PLongInt;
          __tau: Pointer; __t: Pointer; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clarzt_';
        function clascl_(__type__: MarshaledAString; __KL: PLongInt;
          __KU: PLongInt; __cfrom: PSingle; __cto: PSingle; __M: PLongInt;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clascl_';
        function clascl2_(__M: PLongInt; __N: PLongInt; __d__: PSingle;
          __X: Pointer; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clascl2_';
        function claset_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: Pointer; __beta: Pointer; __A: Pointer; __lda: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'claset_';
        function clasr_(__Side: MarshaledAString; __pivot: MarshaledAString;
          __direct: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __c__: PSingle; __S: PSingle; __A: Pointer; __lda: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'clasr_';
        function classq_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __scale: PSingle; __sumsq: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'classq_';
        function claswp_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __k1: PLongInt; __k2: PLongInt; __ipiv: PLongInt; __incX: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'claswp_';
        function clasyf_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __w: Pointer; __ldw: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'clasyf_';
        function clatbs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __X: Pointer;
          __scale: PSingle; __cnorm: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clatbs_';
        function clatdf_(__ijob: PLongInt; __N: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __rhs: Pointer; __rdsum: PSingle; __rdscal: PSingle;
          __ipiv: PLongInt; __jpiv: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clatdf_';
        function clatps_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __Ap: Pointer; __X: Pointer; __scale: PSingle; __cnorm: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clatps_';
        function clatrd_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __A: Pointer; __lda: PLongInt; __E: PSingle;
          __tau: Pointer; __w: Pointer; __ldw: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clatrd_';
        function clatrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __X: Pointer; __scale: PSingle;
          __cnorm: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clatrs_';
        function clatrz_(__M: PLongInt; __N: PLongInt; __L: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'clatrz_';
        function clatzm_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: Pointer; __incv: PLongInt; __tau: Pointer; __C1: Pointer;
          __c2: Pointer; __ldc: PLongInt; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'clatzm_';
        function clauu2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clauu2_';
        function clauum_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'clauum_';
        function cpbcon_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __anorm: PSingle;
          __rcond: PSingle; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cpbcon_';
        function cpbequ_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __S: PSingle;
          __scond: PSingle; __amax: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpbequ_';
        function cpbrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __afb: Pointer; __ldafb: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpbrfs_';
        function cpbstf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cpbstf_';
        function cpbsv_(__Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpbsv_';
        function cpbsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __nrhs: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __afb: Pointer; __ldafb: PLongInt;
          __equed: MarshaledAString; __S: PSingle; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PSingle;
          __ferr: PSingle; __berr: PSingle; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpbsvx_';
        function cpbtf2_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cpbtf2_';
        function cpbtrf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cpbtrf_';
        function cpbtrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpbtrs_';
        function cpftrf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpftrf_';
        function cpftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpftri_';
        function cpftrs_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpftrs_';
        function cpocon_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpocon_';
        function cpoequ_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __S: PSingle; __scond: PSingle; __amax: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cpoequ_';
        function cpoequb_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __S: PSingle; __scond: PSingle; __amax: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cpoequb_';
        function cporfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PSingle; __berr: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cporfs_';
        function cposv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cposv_';
        function cposvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __equed: MarshaledAString;
          __S: PSingle; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cposvx_';
        function cpotf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpotf2_';
        function cpotrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpotrf_';
        function cpotri_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpotri_';
        function cpotrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpotrs_';
        function cppcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __anorm: PSingle; __rcond: PSingle; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cppcon_';
        function cppequ_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __S: PSingle; __scond: PSingle; __amax: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cppequ_';
        function cpprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __ferr: PSingle;
          __berr: PSingle; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cpprfs_';
        function cppsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cppsv_';
        function cppsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer;
          __equed: MarshaledAString; __S: PSingle; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PSingle;
          __ferr: PSingle; __berr: PSingle; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cppsvx_';
        function cpptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpptrf_';
        function cpptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpptri_';
        function cpptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpptrs_';
        function cpstf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpstf2_';
        function cpstrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpstrf_';
        function cptcon_(__N: PLongInt; __d__: PSingle; __E: Pointer;
          __anorm: PSingle; __rcond: PSingle; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cptcon_';
        function cpteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __z__: Pointer; __ldz: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpteqr_';
        function cptrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PSingle; __E: Pointer; __DF: PSingle;
          __ef: Pointer; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PSingle; __berr: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cptrfs_';
        function cptsv_(__N: PLongInt; __nrhs: PLongInt; __d__: PSingle;
          __E: Pointer; __B: Pointer; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cptsv_';
        function cptsvx_(__fact: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PSingle; __E: Pointer; __DF: PSingle;
          __ef: Pointer; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cptsvx_';
        function cpttrf_(__N: PLongInt; __d__: PSingle; __E: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpttrf_';
        function cpttrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PSingle; __E: Pointer; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cpttrs_';
        function cptts2_(__iuplo: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __d__: PSingle; __E: Pointer; __B: Pointer; __ldb: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cptts2_';
        function crot_(__N: PLongInt; __cx: Pointer; __incX: PLongInt;
          __cy: Pointer; __incY: PLongInt; __c__: PSingle; __S: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'crot_';
        function cspcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cspcon_';
        function cspmv_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __Ap: Pointer; __X: Pointer; __incX: PLongInt;
          __beta: Pointer; __Y: Pointer; __incY: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cspmv_';
        function cspr_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __X: Pointer; __incX: PLongInt; __Ap: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'cspr_';
        function csprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __ferr: PSingle; __berr: PSingle; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csprfs_';
        function cspsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cspsv_';
        function cspsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cspsvx_';
        function csptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csptrf_';
        function csptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csptri_';
        function csptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csptrs_';
        function csrscl_(__N: PLongInt; __sa: PSingle; __sx: Pointer;
          __incX: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csrscl_';
        function cstedc_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __lwork: PLongInt; __rwork: PSingle;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cstedc_';
        function cstegr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PSingle; __E: PSingle; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: Pointer; __ldz: PLongInt;
          __isuppz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'cstegr_';
        function cstein_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __M: PLongInt; __w: PSingle; __iblock: PLongInt; __isplit: PLongInt;
          __z__: Pointer; __ldz: PLongInt; __work: PSingle; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cstein_';
        function cstemr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PSingle; __E: PSingle; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __M: PLongInt;
          __w: PSingle; __z__: Pointer; __ldz: PLongInt; __nzc: PLongInt;
          __isuppz: PLongInt; __tryrac: PLongInt; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cstemr_';
        function csteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __z__: Pointer; __ldz: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csteqr_';
        function csycon_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csycon_';
        function csyequb_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PSingle; __scond: PSingle; __amax: PSingle;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csyequb_';
        function csymv_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __A: Pointer; __lda: PLongInt; __X: Pointer;
          __incX: PLongInt; __beta: Pointer; __Y: Pointer; __incY: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'csymv_';
        function csyr_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __X: Pointer; __incX: PLongInt; __A: Pointer;
          __lda: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csyr_';
        function csyrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csyrfs_';
        function csysv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csysv_';
        function csysvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PSingle;
          __ferr: PSingle; __berr: PSingle; __work: Pointer; __lwork: PLongInt;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csysvx_';
        function csytf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csytf2_';
        function csytrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csytrf_';
        function csytri_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'csytri_';
        function csytrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'csytrs_';
        function ctbcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: Pointer; __ldab: PLongInt; __rcond: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctbcon_';
        function ctbrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __ferr: PSingle;
          __berr: PSingle; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctbrfs_';
        function ctbtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctbtrs_';
        function ctfsm_(__transr: MarshaledAString; __Side: MarshaledAString;
          __Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: Pointer; __A: Pointer; __B: Pointer; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctfsm_';
        function ctftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctftri_';
        function ctfttp_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: Pointer; __Ap: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctfttp_';
        function ctfttr_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: Pointer; __A: Pointer; __lda: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctfttr_';
        function ctgevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __S: Pointer; __lds: PLongInt;
          __P: Pointer; __ldp: PLongInt; __vl: Pointer; __ldvl: PLongInt;
          __vr: Pointer; __ldvr: PLongInt; __mm: PLongInt; __M: PLongInt;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctgevc_';
        function ctgex2_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __j1: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctgex2_';
        function ctgexc_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __ifst: PLongInt; __ilst: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctgexc_';
        function ctgsen_(__ijob: PLongInt; __wantq: PLongInt; __wantz: PLongInt;
          __select: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __alpha: Pointer; __beta: Pointer;
          __Q: Pointer; __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __M: PLongInt; __pl: PSingle; __pr: PSingle; __dif: PSingle;
          __work: Pointer; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctgsen_';
        function ctgsja_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __tola: PSingle; __tolb: PSingle;
          __alpha: PSingle; __beta: PSingle; __u: Pointer; __ldu: PLongInt;
          __v: Pointer; __ldv: PLongInt; __Q: Pointer; __ldq: PLongInt;
          __work: Pointer; __ncycle: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'ctgsja_';
        function ctgsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __vl: Pointer; __ldvl: PLongInt;
          __vr: Pointer; __ldvr: PLongInt; __S: PSingle; __dif: PSingle;
          __mm: PLongInt; __M: PLongInt; __work: Pointer; __lwork: PLongInt;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctgsna_';
        function ctgsy2_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __c__: Pointer; __ldc: PLongInt;
          __d__: Pointer; __ldd: PLongInt; __E: Pointer; __lde: PLongInt;
          __F: Pointer; __ldf: PLongInt; __scale: PSingle; __rdsum: PSingle;
          __rdscal: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctgsy2_';
        function ctgsyl_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __c__: Pointer; __ldc: PLongInt;
          __d__: Pointer; __ldd: PLongInt; __E: Pointer; __lde: PLongInt;
          __F: Pointer; __ldf: PLongInt; __scale: PSingle; __dif: PSingle;
          __work: Pointer; __lwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctgsyl_';
        function ctpcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __rcond: PSingle; __work: Pointer; __rwork: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctpcon_';
        function ctprfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: Pointer; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PSingle; __berr: PSingle; __work: Pointer;
          __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctprfs_';
        function ctptri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctptri_';
        function ctptrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: Pointer; __B: Pointer; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctptrs_';
        function ctpttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __arf: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctpttf_';
        function ctpttr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __A: Pointer; __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctpttr_';
        function ctrcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __rcond: PSingle; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrcon_';
        function ctrevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: Pointer; __ldt: PLongInt;
          __vl: Pointer; __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt;
          __mm: PLongInt; __M: PLongInt; __work: Pointer; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrevc_';
        function ctrexc_(__compq: MarshaledAString; __N: PLongInt; __t: Pointer;
          __ldt: PLongInt; __Q: Pointer; __ldq: PLongInt; __ifst: PLongInt;
          __ilst: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrexc_';
        function ctrrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: Pointer; __rwork: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrrfs_';
        function ctrsen_(__job: MarshaledAString; __compq: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: Pointer; __ldt: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __w: Pointer; __M: PLongInt;
          __S: PSingle; __sep: PSingle; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrsen_';
        function ctrsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: Pointer; __ldt: PLongInt;
          __vl: Pointer; __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt;
          __S: PSingle; __sep: PSingle; __mm: PLongInt; __M: PLongInt;
          __work: Pointer; __ldwork: PLongInt; __rwork: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrsna_';
        function ctrsyl_(__trana: MarshaledAString; __tranb: MarshaledAString;
          __isgn: PLongInt; __M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __scale: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrsyl_';
        function ctrti2_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctrti2_';
        function ctrtri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ctrtri_';
        function ctrtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrtrs_';
        function ctrttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __arf: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrttf_';
        function ctrttp_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __Ap: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctrttp_';
        function ctzrqf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctzrqf_';
        function ctzrzf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ctzrzf_';
        function cung2l_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cung2l_';
        function cung2r_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cung2r_';
        function cungbr_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: Pointer; __lda: PLongInt; __tau: Pointer;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cungbr_';
        function cunghr_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunghr_';
        function cungl2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cungl2_';
        function cunglq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunglq_';
        function cungql_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cungql_';
        function cungqr_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cungqr_';
        function cungr2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cungr2_';
        function cungrq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cungrq_';
        function cungtr_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cungtr_';
        function cunm2l_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunm2l_';
        function cunm2r_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunm2r_';
        function cunmbr_(__vect: MarshaledAString; __Side: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: Pointer; __lda: PLongInt; __tau: Pointer;
          __c__: Pointer; __ldc: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmbr_';
        function cunmhr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cunmhr_';
        function cunml2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunml2_';
        function cunmlq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmlq_';
        function cunmql_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmql_';
        function cunmqr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmqr_';
        function cunmr2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmr2_';
        function cunmr3_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmr3_';
        function cunmrq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmrq_';
        function cunmrz_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'cunmrz_';
        function cunmtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cunmtr_';
        function cupgtr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __tau: Pointer; __Q: Pointer; __ldq: PLongInt; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cupgtr_';
        function cupmtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __Ap: Pointer; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'cupmtr_';
        function dbdsdc_(__Uplo: MarshaledAString; __compq: MarshaledAString;
          __N: PLongInt; __d__: PDouble; __E: PDouble; __u: PDouble;
          __ldu: PLongInt; __vt: PDouble; __ldvt: PLongInt; __Q: PDouble;
          __iq: PLongInt; __work: PDouble; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dbdsdc_';
        function dbdsqr_(__Uplo: MarshaledAString; __N: PLongInt;
          __ncvt: PLongInt; __nru: PLongInt; __ncc: PLongInt; __d__: PDouble;
          __E: PDouble; __vt: PDouble; __ldvt: PLongInt; __u: PDouble;
          __ldu: PLongInt; __c__: PDouble; __ldc: PLongInt; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dbdsqr_';
        function ddisna_(__job: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __d__: PDouble; __sep: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ddisna_';
        function dgbbrd_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __ncc: PLongInt; __KL: PLongInt; __KU: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __d__: PDouble; __E: PDouble; __Q: PDouble;
          __ldq: PLongInt; __pt: PDouble; __ldpt: PLongInt; __c__: PDouble;
          __ldc: PLongInt; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbbrd_';
        function dgbcon_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbcon_';
        function dgbequ_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PDouble; __ldab: PLongInt; __r__: PDouble;
          __c__: PDouble; __rowcnd: PDouble; __colcnd: PDouble; __amax: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbequ_';
        function dgbequb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PDouble; __ldab: PLongInt; __r__: PDouble;
          __c__: PDouble; __rowcnd: PDouble; __colcnd: PDouble; __amax: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbequb_';
        function dgbrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __afb: PDouble; __ldafb: PLongInt; __ipiv: PLongInt;
          __B: PDouble; __ldb: PLongInt; __X: PDouble; __ldx: PLongInt;
          __ferr: PDouble; __berr: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbrfs_';
        function dgbsv_(__N: PLongInt; __KL: PLongInt; __KU: PLongInt;
          __nrhs: PLongInt; __ab: PDouble; __ldab: PLongInt; __ipiv: PLongInt;
          __B: PDouble; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbsv_';
        function dgbsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt;
          __ab: PDouble; __ldab: PLongInt; __afb: PDouble; __ldafb: PLongInt;
          __ipiv: PLongInt; __equed: MarshaledAString; __r__: PDouble;
          __c__: PDouble; __B: PDouble; __ldb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbsvx_';
        function dgbtf2_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PDouble; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbtf2_';
        function dgbtrf_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PDouble; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbtrf_';
        function dgbtrs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgbtrs_';
        function dgebak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PDouble;
          __M: PLongInt; __v: PDouble; __ldv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgebak_';
        function dgebal_(__job: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgebal_';
        function dgebd2_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tauq: PDouble;
          __taup: PDouble; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgebd2_';
        function dgebrd_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tauq: PDouble;
          __taup: PDouble; __work: PDouble; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgebrd_';
        function dgecon_(__norm: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgecon_';
        function dgeequ_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __r__: PDouble; __c__: PDouble; __rowcnd: PDouble;
          __colcnd: PDouble; __amax: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeequ_';
        function dgeequb_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __r__: PDouble; __c__: PDouble; __rowcnd: PDouble;
          __colcnd: PDouble; __amax: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeequb_';
        function dgees_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __N: PLongInt; __A: PDouble; __lda: PLongInt;
          __sdim: PLongInt; __wr: PDouble; __wi: PDouble; __vs: PDouble;
          __ldvs: PLongInt; __work: PDouble; __lwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgees_';
        function dgeesx_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __sense: MarshaledAString; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __sdim: PLongInt; __wr: PDouble;
          __wi: PDouble; __vs: PDouble; __ldvs: PLongInt; __rconde: PDouble;
          __rcondv: PDouble; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __bwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeesx_';
        function dgeev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __wr: PDouble;
          __wi: PDouble; __vl: PDouble; __ldvl: PLongInt; __vr: PDouble;
          __ldvr: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeev_';
        function dgeevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __wr: PDouble; __wi: PDouble;
          __vl: PDouble; __ldvl: PLongInt; __vr: PDouble; __ldvr: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __scale: PDouble; __abnrm: PDouble;
          __rconde: PDouble; __rcondv: PDouble; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dgeevx_';
        function dgegs_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __alphar: PDouble; __alphai: PDouble;
          __beta: PDouble; __vsl: PDouble; __ldvsl: PLongInt; __vsr: PDouble;
          __ldvsr: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgegs_';
        function dgegv_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __alphar: PDouble; __alphai: PDouble;
          __beta: PDouble; __vl: PDouble; __ldvl: PLongInt; __vr: PDouble;
          __ldvr: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgegv_';
        function dgehd2_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgehd2_';
        function dgehrd_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgehrd_';
        function dgejsv_(__joba: MarshaledAString; __jobu: MarshaledAString;
          __jobv: MarshaledAString; __jobr: MarshaledAString;
          __jobt: MarshaledAString; __jobp: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __sva: PDouble;
          __u: PDouble; __ldu: PLongInt; __v: PDouble; __ldv: PLongInt;
          __work: PDouble; __lwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgejsv_';
        function dgelq2_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgelq2_';
        function dgelqf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgelqf_';
        function dgels_(__Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __work: PDouble; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgels_';
        function dgelsd_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __S: PDouble; __rcond: PDouble; __rank: PLongInt; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dgelsd_';
        function dgelss_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __S: PDouble; __rcond: PDouble; __rank: PLongInt; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgelss_';
        function dgelsx_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PDouble; __rank: PLongInt; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgelsx_';
        function dgelsy_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PDouble; __rank: PLongInt; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgelsy_';
        function dgeql2_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgeql2_';
        function dgeqlf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeqlf_';
        function dgeqp3_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __jpvt: PLongInt; __tau: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeqp3_';
        function dgeqpf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __jpvt: PLongInt; __tau: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeqpf_';
        function dgeqr2_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgeqr2_';
        function dgeqrf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgeqrf_';
        function dgerfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __af: PDouble;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt;
          __X: PDouble; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgerfs_';
        function dgerq2_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgerq2_';
        function dgerqf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgerqf_';
        function dgesc2_(__N: PLongInt; __A: PDouble; __lda: PLongInt;
          __rhs: PDouble; __ipiv: PLongInt; __jpiv: PLongInt; __scale: PDouble)
          : Integer; cdecl; external libAccelerate name _PU + 'dgesc2_';
        function dgesdd_(__jobz: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __S: PDouble; __u: PDouble;
          __ldu: PLongInt; __vt: PDouble; __ldvt: PLongInt; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dgesdd_';
        function dgesv_(__N: PLongInt; __nrhs: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgesv_';
        function dgesvd_(__jobu: MarshaledAString; __jobvt: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __A: PDouble; __lda: PLongInt;
          __S: PDouble; __u: PDouble; __ldu: PLongInt; __vt: PDouble;
          __ldvt: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgesvd_';
        function dgesvj_(__joba: MarshaledAString; __jobu: MarshaledAString;
          __jobv: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __sva: PDouble; __mv: PLongInt; __v: PDouble;
          __ldv: PLongInt; __work: PDouble; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgesvj_';
        function dgesvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PDouble; __lda: PLongInt;
          __af: PDouble; __ldaf: PLongInt; __ipiv: PLongInt;
          __equed: MarshaledAString; __r__: PDouble; __c__: PDouble;
          __B: PDouble; __ldb: PLongInt; __X: PDouble; __ldx: PLongInt;
          __rcond: PDouble; __ferr: PDouble; __berr: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgesvx_';
        function dgetc2_(__N: PLongInt; __A: PDouble; __lda: PLongInt;
          __ipiv: PLongInt; __jpiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgetc2_';
        function dgetf2_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgetf2_';
        function dgetrf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgetrf_';
        function dgetri_(__N: PLongInt; __A: PDouble; __lda: PLongInt;
          __ipiv: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgetri_';
        function dgetrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __ipiv: PLongInt;
          __B: PDouble; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgetrs_';
        function dggbak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __lscale: PDouble;
          __rscale: PDouble; __M: PLongInt; __v: PDouble; __ldv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggbak_';
        function dggbal_(__job: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __B: PDouble; __ldb: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __lscale: PDouble; __rscale: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggbal_';
        function dgges_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __sdim: PLongInt; __alphar: PDouble; __alphai: PDouble;
          __beta: PDouble; __vsl: PDouble; __ldvsl: PLongInt; __vsr: PDouble;
          __ldvsr: PLongInt; __work: PDouble; __lwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgges_';
        function dggesx_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp;
          __sense: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __B: PDouble; __ldb: PLongInt; __sdim: PLongInt;
          __alphar: PDouble; __alphai: PDouble; __beta: PDouble; __vsl: PDouble;
          __ldvsl: PLongInt; __vsr: PDouble; __ldvsr: PLongInt;
          __rconde: PDouble; __rcondv: PDouble; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggesx_';
        function dggev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __alphar: PDouble; __alphai: PDouble;
          __beta: PDouble; __vl: PDouble; __ldvl: PLongInt; __vr: PDouble;
          __ldvr: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggev_';
        function dggevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __alphar: PDouble; __alphai: PDouble; __beta: PDouble; __vl: PDouble;
          __ldvl: PLongInt; __vr: PDouble; __ldvr: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __lscale: PDouble; __rscale: PDouble;
          __abnrm: PDouble; __bbnrm: PDouble; __rconde: PDouble;
          __rcondv: PDouble; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __bwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dggevx_';
        function dggglm_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __d__: PDouble; __X: PDouble; __Y: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggglm_';
        function dgghrd_(__compq: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __A: PDouble;
          __lda: PLongInt; __B: PDouble; __ldb: PLongInt; __Q: PDouble;
          __ldq: PLongInt; __z__: PDouble; __ldz: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgghrd_';
        function dgglse_(__M: PLongInt; __N: PLongInt; __P: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __c__: PDouble; __d__: PDouble; __X: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgglse_';
        function dggqrf_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: PDouble; __lda: PLongInt; __taua: PDouble; __B: PDouble;
          __ldb: PLongInt; __taub: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggqrf_';
        function dggrqf_(__M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __taua: PDouble; __B: PDouble;
          __ldb: PLongInt; __taub: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggrqf_';
        function dggsvd_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __N: PLongInt; __P: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: PDouble; __lda: PLongInt;
          __B: PDouble; __ldb: PLongInt; __alpha: PDouble; __beta: PDouble;
          __u: PDouble; __ldu: PLongInt; __v: PDouble; __ldv: PLongInt;
          __Q: PDouble; __ldq: PLongInt; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggsvd_';
        function dggsvp_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __tola: PDouble; __tolb: PDouble; __K: PLongInt; __L: PLongInt;
          __u: PDouble; __ldu: PLongInt; __v: PDouble; __ldv: PLongInt;
          __Q: PDouble; __ldq: PLongInt; __iwork: PLongInt; __tau: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dggsvp_';
        function dgsvj0_(__jobv: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __d__: PDouble; __sva: PDouble;
          __mv: PLongInt; __v: PDouble; __ldv: PLongInt; __eps: PDouble;
          __sfmin: PDouble; __tol: PDouble; __nsweep: PLongInt; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgsvj0_';
        function dgsvj1_(__jobv: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __n1: PLongInt; __A: PDouble; __lda: PLongInt; __d__: PDouble;
          __sva: PDouble; __mv: PLongInt; __v: PDouble; __ldv: PLongInt;
          __eps: PDouble; __sfmin: PDouble; __tol: PDouble; __nsweep: PLongInt;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgsvj1_';
        function dgtcon_(__norm: MarshaledAString; __N: PLongInt; __dl: PDouble;
          __d__: PDouble; __du: PDouble; __du2: PDouble; __ipiv: PLongInt;
          __anorm: PDouble; __rcond: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgtcon_';
        function dgtrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: PDouble; __d__: PDouble; __du: PDouble;
          __dlf: PDouble; __DF: PDouble; __duf: PDouble; __du2: PDouble;
          __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __ferr: PDouble; __berr: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgtrfs_';
        function dgtsv_(__N: PLongInt; __nrhs: PLongInt; __dl: PDouble;
          __d__: PDouble; __du: PDouble; __B: PDouble; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgtsv_';
        function dgtsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __dl: PDouble; __d__: PDouble;
          __du: PDouble; __dlf: PDouble; __DF: PDouble; __duf: PDouble;
          __du2: PDouble; __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt;
          __X: PDouble; __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble;
          __berr: PDouble; __work: PDouble; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgtsvx_';
        function dgttrf_(__N: PLongInt; __dl: PDouble; __d__: PDouble;
          __du: PDouble; __du2: PDouble; __ipiv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dgttrf_';
        function dgttrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: PDouble; __d__: PDouble; __du: PDouble;
          __du2: PDouble; __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgttrs_';
        function dgtts2_(__itrans: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __dl: PDouble; __d__: PDouble; __du: PDouble; __du2: PDouble;
          __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dgtts2_';
        function dhgeqz_(__job: MarshaledAString; __compq: MarshaledAString;
          __compz: MarshaledAString; __N: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __h__: PDouble; __ldh: PLongInt; __t: PDouble;
          __ldt: PLongInt; __alphar: PDouble; __alphai: PDouble;
          __beta: PDouble; __Q: PDouble; __ldq: PLongInt; __z__: PDouble;
          __ldz: PLongInt; __work: PDouble; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dhgeqz_';
        function dhsein_(__Side: MarshaledAString; __eigsrc: MarshaledAString;
          __initv: MarshaledAString; __select: PLongInt; __N: PLongInt;
          __h__: PDouble; __ldh: PLongInt; __wr: PDouble; __wi: PDouble;
          __vl: PDouble; __ldvl: PLongInt; __vr: PDouble; __ldvr: PLongInt;
          __mm: PLongInt; __M: PLongInt; __work: PDouble; __ifaill: PLongInt;
          __ifailr: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dhsein_';
        function dhseqr_(__job: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __h__: PDouble;
          __ldh: PLongInt; __wr: PDouble; __wi: PDouble; __z__: PDouble;
          __ldz: PLongInt; __work: PDouble; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dhseqr_';
        function disnan_(__din: PDouble): __CLPK_logical; cdecl;
          external libAccelerate name _PU + 'disnan_';
        function dlabad_(__small: PDouble; __large: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlabad_';
        function dlabrd_(__M: PLongInt; __N: PLongInt; __nb: PLongInt;
          __A: PDouble; __lda: PLongInt; __d__: PDouble; __E: PDouble;
          __tauq: PDouble; __taup: PDouble; __X: PDouble; __ldx: PLongInt;
          __Y: PDouble; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlabrd_';
        function dlacn2_(__N: PLongInt; __v: PDouble; __X: PDouble;
          __isgn: PLongInt; __est: PDouble; __kase: PLongInt; __isave: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlacn2_';
        function dlacon_(__N: PLongInt; __v: PDouble; __X: PDouble;
          __isgn: PLongInt; __est: PDouble; __kase: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlacon_';
        function dlacpy_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlacpy_';
        function dladiv_(__A: PDouble; __B: PDouble; __c__: PDouble;
          __d__: PDouble; __P: PDouble; __Q: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dladiv_';
        function dlae2_(__A: PDouble; __B: PDouble; __c__: PDouble;
          __rt1: PDouble; __rt2: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlae2_';
        function dlaebz_(__ijob: PLongInt; __nitmax: PLongInt; __N: PLongInt;
          __mmax: PLongInt; __minp: PLongInt; __nbmin: PLongInt;
          __abstol: PDouble; __reltol: PDouble; __pivmin: PDouble;
          __d__: PDouble; __E: PDouble; __e2: PDouble; __nval: PLongInt;
          __ab: PDouble; __c__: PDouble; __mout: PLongInt; __nab: PLongInt;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaebz_';
        function dlaed0_(__icompq: PLongInt; __qsiz: PLongInt; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __Q: PDouble; __ldq: PLongInt;
          __qstore: PDouble; __ldqs: PLongInt; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed0_';
        function dlaed1_(__N: PLongInt; __d__: PDouble; __Q: PDouble;
          __ldq: PLongInt; __indxq: PLongInt; __rho: PDouble;
          __cutpnt: PLongInt; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed1_';
        function dlaed2_(__K: PLongInt; __N: PLongInt; __n1: PLongInt;
          __d__: PDouble; __Q: PDouble; __ldq: PLongInt; __indxq: PLongInt;
          __rho: PDouble; __z__: PDouble; __dlamda: PDouble; __w: PDouble;
          __q2: PDouble; __indx: PLongInt; __indxc: PLongInt; __indxp: PLongInt;
          __coltyp: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed2_';
        function dlaed3_(__K: PLongInt; __N: PLongInt; __n1: PLongInt;
          __d__: PDouble; __Q: PDouble; __ldq: PLongInt; __rho: PDouble;
          __dlamda: PDouble; __q2: PDouble; __indx: PLongInt; __ctot: PLongInt;
          __w: PDouble; __S: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed3_';
        function dlaed4_(__N: PLongInt; __i__: PLongInt; __d__: PDouble;
          __z__: PDouble; __delta: PDouble; __rho: PDouble; __dlam: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed4_';
        function dlaed5_(__i__: PLongInt; __d__: PDouble; __z__: PDouble;
          __delta: PDouble; __rho: PDouble; __dlam: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed5_';
        function dlaed6_(__kniter: PLongInt; __orgati: PLongInt; __rho: PDouble;
          __d__: PDouble; __z__: PDouble; __finit: PDouble; __tau: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed6_';
        function dlaed7_(__icompq: PLongInt; __N: PLongInt; __qsiz: PLongInt;
          __tlvls: PLongInt; __curlvl: PLongInt; __curpbm: PLongInt;
          __d__: PDouble; __Q: PDouble; __ldq: PLongInt; __indxq: PLongInt;
          __rho: PDouble; __cutpnt: PLongInt; __qstore: PDouble;
          __qptr: PLongInt; __prmptr: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __givnum: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed7_';
        function dlaed8_(__icompq: PLongInt; __K: PLongInt; __N: PLongInt;
          __qsiz: PLongInt; __d__: PDouble; __Q: PDouble; __ldq: PLongInt;
          __indxq: PLongInt; __rho: PDouble; __cutpnt: PLongInt; __z__: PDouble;
          __dlamda: PDouble; __q2: PDouble; __ldq2: PLongInt; __w: PDouble;
          __perm: PLongInt; __givptr: PLongInt; __givcol: PLongInt;
          __givnum: PDouble; __indxp: PLongInt; __indx: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed8_';
        function dlaed9_(__K: PLongInt; __kstart: PLongInt; __kstop: PLongInt;
          __N: PLongInt; __d__: PDouble; __Q: PDouble; __ldq: PLongInt;
          __rho: PDouble; __dlamda: PDouble; __w: PDouble; __S: PDouble;
          __lds: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaed9_';
        function dlaeda_(__N: PLongInt; __tlvls: PLongInt; __curlvl: PLongInt;
          __curpbm: PLongInt; __prmptr: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __givnum: PDouble;
          __Q: PDouble; __qptr: PLongInt; __z__: PDouble; __ztemp: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaeda_';
        function dlaein_(__rightv: PLongInt; __noinit: PLongInt; __N: PLongInt;
          __h__: PDouble; __ldh: PLongInt; __wr: PDouble; __wi: PDouble;
          __vr: PDouble; __vi: PDouble; __B: PDouble; __ldb: PLongInt;
          __work: PDouble; __eps3: PDouble; __smlnum: PDouble;
          __bignum: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaein_';
        function dlaev2_(__A: PDouble; __B: PDouble; __c__: PDouble;
          __rt1: PDouble; __rt2: PDouble; __cs1: PDouble; __sn1: PDouble)
          : Integer; cdecl; external libAccelerate name _PU + 'dlaev2_';
        function dlaexc_(__wantq: PLongInt; __N: PLongInt; __t: PDouble;
          __ldt: PLongInt; __Q: PDouble; __ldq: PLongInt; __j1: PLongInt;
          __n1: PLongInt; __n2: PLongInt; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlaexc_';
        function dlag2_(__A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __safmin: PDouble; __scale1: PDouble;
          __scale2: PDouble; __wr1: PDouble; __wr2: PDouble; __wi: PDouble)
          : Integer; cdecl; external libAccelerate name _PU + 'dlag2_';
        function dlag2s_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __sa: PSingle; __ldsa: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlag2s_';
        function dlags2_(__upper: PLongInt; __A1: PDouble; __a2: PDouble;
          __a3: PDouble; __b1: PDouble; __b2: PDouble; __b3: PDouble;
          __csu: PDouble; __snu: PDouble; __csv: PDouble; __snv: PDouble;
          __csq: PDouble; __snq: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlags2_';
        function dlagtf_(__N: PLongInt; __A: PDouble; __lambda: PDouble;
          __B: PDouble; __c__: PDouble; __tol: PDouble; __d__: PDouble;
          __in: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlagtf_';
        function dlagtm_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __alpha: PDouble; __dl: PDouble; __d__: PDouble;
          __du: PDouble; __X: PDouble; __ldx: PLongInt; __beta: PDouble;
          __B: PDouble; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlagtm_';
        function dlagts_(__job: PLongInt; __N: PLongInt; __A: PDouble;
          __B: PDouble; __c__: PDouble; __d__: PDouble; __in: PLongInt;
          __Y: PDouble; __tol: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlagts_';
        function dlagv2_(__A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __alphar: PDouble; __alphai: PDouble;
          __beta: PDouble; __csl: PDouble; __snl: PDouble; __csr: PDouble;
          __snr: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlagv2_';
        function dlahqr_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: PDouble; __ldh: PLongInt;
          __wr: PDouble; __wi: PDouble; __iloz: PLongInt; __ihiz: PLongInt;
          __z__: PDouble; __ldz: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlahqr_';
        function dlahr2_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __t: PDouble;
          __ldt: PLongInt; __Y: PDouble; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlahr2_';
        function dlahrd_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __t: PDouble;
          __ldt: PLongInt; __Y: PDouble; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlahrd_';
        function dlaic1_(__job: PLongInt; __J: PLongInt; __X: PDouble;
          __sest: PDouble; __w: PDouble; __gamma: PDouble; __sestpr: PDouble;
          __S: PDouble; __c__: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlaic1_';
        function dlaisnan_(__din1: PDouble; __din2: PDouble): __CLPK_logical;
          cdecl; external libAccelerate name _PU + 'dlaisnan_';
        function dlaln2_(__ltrans: PLongInt; __na: PLongInt; __nw: PLongInt;
          __smin: PDouble; __ca: PDouble; __A: PDouble; __lda: PLongInt;
          __d1: PDouble; __d2: PDouble; __B: PDouble; __ldb: PLongInt;
          __wr: PDouble; __wi: PDouble; __X: PDouble; __ldx: PLongInt;
          __scale: PDouble; __xnorm: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaln2_';
        function dlals0_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __nrhs: PLongInt; __B: PDouble; __ldb: PLongInt;
          __bx: PDouble; __ldbx: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __ldgcol: PLongInt; __givnum: PDouble;
          __ldgnum: PLongInt; __poles: PDouble; __difl: PDouble;
          __difr: PDouble; __z__: PDouble; __K: PLongInt; __c__: PDouble;
          __S: PDouble; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlals0_';
        function dlalsa_(__icompq: PLongInt; __smlsiz: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __B: PDouble; __ldb: PLongInt; __bx: PDouble;
          __ldbx: PLongInt; __u: PDouble; __ldu: PLongInt; __vt: PDouble;
          __K: PLongInt; __difl: PDouble; __difr: PDouble; __z__: PDouble;
          __poles: PDouble; __givptr: PLongInt; __givcol: PLongInt;
          __ldgcol: PLongInt; __perm: PLongInt; __givnum: PDouble;
          __c__: PDouble; __S: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlalsa_';
        function dlalsd_(__Uplo: MarshaledAString; __smlsiz: PLongInt;
          __N: PLongInt; __nrhs: PLongInt; __d__: PDouble; __E: PDouble;
          __B: PDouble; __ldb: PLongInt; __rcond: PDouble; __rank: PLongInt;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlalsd_';
        function dlamrg_(__n1: PLongInt; __n2: PLongInt; __A: PDouble;
          __dtrd1: PLongInt; __dtrd2: PLongInt; __index: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dlamrg_';
        function dlaneg_(__N: PLongInt; __d__: PDouble; __lld: PDouble;
          __sigma: PDouble; __pivmin: PDouble; __r__: PLongInt): __CLPK_integer;
          cdecl; external libAccelerate name _PU + 'dlaneg_';
        function dlangb_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlangb_';
        function dlange_(__norm: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __work: PDouble): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'dlange_';
        function dlangt_(__norm: MarshaledAString; __N: PLongInt; __dl: PDouble;
          __d__: PDouble; __du: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlangt_';
        function dlanhs_(__norm: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlanhs_';
        function dlansb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlansb_';
        function dlansf_(__norm: MarshaledAString; __transr: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlansf_';
        function dlansp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PDouble; __work: PDouble): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'dlansp_';
        function dlanst_(__norm: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlanst_';
        function dlansy_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __work: PDouble)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlansy_';
        function dlantb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __K: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlantb_';
        function dlantp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlantp_';
        function dlantr_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlantr_';
        function dlanv2_(__A: PDouble; __B: PDouble; __c__: PDouble;
          __d__: PDouble; __rt1r: PDouble; __rt1i: PDouble; __rt2r: PDouble;
          __rt2i: PDouble; __cs: PDouble; __sn: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlanv2_';
        function dlapll_(__N: PLongInt; __X: PDouble; __incX: PLongInt;
          __Y: PDouble; __incY: PLongInt; __ssmin: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlapll_';
        function dlapmt_(__forwrd: PLongInt; __M: PLongInt; __N: PLongInt;
          __X: PDouble; __ldx: PLongInt; __K: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlapmt_';
        function dlapy2_(__X: PDouble; __Y: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlapy2_';
        function dlapy3_(__X: PDouble; __Y: PDouble; __z__: PDouble)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlapy3_';
        function dlaqgb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PDouble; __ldab: PLongInt; __r__: PDouble;
          __c__: PDouble; __rowcnd: PDouble; __colcnd: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqgb_';
        function dlaqge_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __r__: PDouble; __c__: PDouble; __rowcnd: PDouble;
          __colcnd: PDouble; __amax: PDouble; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'dlaqge_';
        function dlaqp2_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __A: PDouble; __lda: PLongInt; __jpvt: PLongInt; __tau: PDouble;
          __vn1: PDouble; __vn2: PDouble; __work: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqp2_';
        function dlaqps_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: PDouble; __lda: PLongInt;
          __jpvt: PLongInt; __tau: PDouble; __vn1: PDouble; __vn2: PDouble;
          __auxv: PDouble; __F: PDouble; __ldf: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqps_';
        function dlaqr0_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: PDouble; __ldh: PLongInt;
          __wr: PDouble; __wi: PDouble; __iloz: PLongInt; __ihiz: PLongInt;
          __z__: PDouble; __ldz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqr0_';
        function dlaqr1_(__N: PLongInt; __h__: PDouble; __ldh: PLongInt;
          __sr1: PDouble; __si1: PDouble; __sr2: PDouble; __si2: PDouble;
          __v: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqr1_';
        function dlaqr2_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: PDouble;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: PDouble;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sr: PDouble;
          __si: PDouble; __v: PDouble; __ldv: PLongInt; __nh: PLongInt;
          __t: PDouble; __ldt: PLongInt; __nv: PLongInt; __wv: PDouble;
          __ldwv: PLongInt; __work: PDouble; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqr2_';
        function dlaqr3_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: PDouble;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: PDouble;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sr: PDouble;
          __si: PDouble; __v: PDouble; __ldv: PLongInt; __nh: PLongInt;
          __t: PDouble; __ldt: PLongInt; __nv: PLongInt; __wv: PDouble;
          __ldwv: PLongInt; __work: PDouble; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqr3_';
        function dlaqr4_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: PDouble; __ldh: PLongInt;
          __wr: PDouble; __wi: PDouble; __iloz: PLongInt; __ihiz: PLongInt;
          __z__: PDouble; __ldz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqr4_';
        function dlaqr5_(__wantt: PLongInt; __wantz: PLongInt;
          __kacc22: PLongInt; __N: PLongInt; __ktop: PLongInt; __kbot: PLongInt;
          __nshfts: PLongInt; __sr: PDouble; __si: PDouble; __h__: PDouble;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: PDouble;
          __ldz: PLongInt; __v: PDouble; __ldv: PLongInt; __u: PDouble;
          __ldu: PLongInt; __nv: PLongInt; __wv: PDouble; __ldwv: PLongInt;
          __nh: PLongInt; __wh: PDouble; __ldwh: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqr5_';
        function dlaqsb_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PDouble; __ldab: PLongInt; __S: PDouble;
          __scond: PDouble; __amax: PDouble; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'dlaqsb_';
        function dlaqsp_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __S: PDouble; __scond: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqsp_';
        function dlaqsy_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __S: PDouble; __scond: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqsy_';
        function dlaqtr_(__ltran: PLongInt; __l__CLPK_real: PLongInt;
          __N: PLongInt; __t: PDouble; __ldt: PLongInt; __B: PDouble;
          __w: PDouble; __scale: PDouble; __X: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlaqtr_';
        function dlar1v_(__N: PLongInt; __b1: PLongInt; __bn: PLongInt;
          __lambda: PDouble; __d__: PDouble; __L: PDouble; __ld: PDouble;
          __lld: PDouble; __pivmin: PDouble; __gaptol: PDouble; __z__: PDouble;
          __wantnc: PLongInt; __negcnt: PLongInt; __ztz: PDouble;
          __mingma: PDouble; __r__: PLongInt; __isuppz: PLongInt;
          __nrminv: PDouble; __resid: PDouble; __rqcorr: PDouble;
          __work: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlar1v_';
        function dlar2v_(__N: PLongInt; __X: PDouble; __Y: PDouble;
          __z__: PDouble; __incX: PLongInt; __c__: PDouble; __S: PDouble;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlar2v_';
        function dlarf_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: PDouble; __incv: PLongInt; __tau: PDouble; __c__: PDouble;
          __ldc: PLongInt; __work: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlarf_';
        function dlarfb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __v: PDouble; __ldv: PLongInt;
          __t: PDouble; __ldt: PLongInt; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarfb_';
        function dlarfg_(__N: PLongInt; __alpha: PDouble; __X: PDouble;
          __incX: PLongInt; __tau: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlarfg_';
        function dlarfp_(__N: PLongInt; __alpha: PDouble; __X: PDouble;
          __incX: PLongInt; __tau: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlarfp_';
        function dlarft_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: PDouble; __ldv: PLongInt;
          __tau: PDouble; __t: PDouble; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarft_';
        function dlarfx_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: PDouble; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlarfx_';
        function dlargv_(__N: PLongInt; __X: PDouble; __incX: PLongInt;
          __Y: PDouble; __incY: PLongInt; __c__: PDouble; __incc: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlargv_';
        function dlarnv_(__idist: PLongInt; __iseed: PLongInt; __N: PLongInt;
          __X: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlarnv_';
        function dlarra_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __e2: PDouble; __spltol: PDouble; __tnrm: PDouble; __nsplit: PLongInt;
          __isplit: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarra_';
        function dlarrb_(__N: PLongInt; __d__: PDouble; __lld: PDouble;
          __ifirst: PLongInt; __ilast: PLongInt; __rtol1: PDouble;
          __rtol2: PDouble; __offset: PLongInt; __w: PDouble; __wgap: PDouble;
          __werr: PDouble; __work: PDouble; __iwork: PLongInt;
          __pivmin: PDouble; __spdiam: PDouble; __twist: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarrb_';
        function dlarrc_(__jobt: MarshaledAString; __N: PLongInt; __vl: PDouble;
          __vu: PDouble; __d__: PDouble; __E: PDouble; __pivmin: PDouble;
          __eigcnt: PLongInt; __lcnt: PLongInt; __rcnt: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarrc_';
        function dlarrd_(__range: MarshaledAString; __Order: MarshaledAString;
          __N: PLongInt; __vl: PDouble; __vu: PDouble; __il: PLongInt;
          __iu: PLongInt; __gers: PDouble; __reltol: PDouble; __d__: PDouble;
          __E: PDouble; __e2: PDouble; __pivmin: PDouble; __nsplit: PLongInt;
          __isplit: PLongInt; __M: PLongInt; __w: PDouble; __werr: PDouble;
          __wl: PDouble; __wu: PDouble; __iblock: PLongInt; __indexw: PLongInt;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarrd_';
        function dlarre_(__range: MarshaledAString; __N: PLongInt;
          __vl: PDouble; __vu: PDouble; __il: PLongInt; __iu: PLongInt;
          __d__: PDouble; __E: PDouble; __e2: PDouble; __rtol1: PDouble;
          __rtol2: PDouble; __spltol: PDouble; __nsplit: PLongInt;
          __isplit: PLongInt; __M: PLongInt; __w: PDouble; __werr: PDouble;
          __wgap: PDouble; __iblock: PLongInt; __indexw: PLongInt;
          __gers: PDouble; __pivmin: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarre_';
        function dlarrf_(__N: PLongInt; __d__: PDouble; __L: PDouble;
          __ld: PDouble; __clstrt: PLongInt; __clend: PLongInt; __w: PDouble;
          __wgap: PDouble; __werr: PDouble; __spdiam: PDouble;
          __clgapl: PDouble; __clgapr: PDouble; __pivmin: PDouble;
          __sigma: PDouble; __dplus: PDouble; __lplus: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarrf_';
        function dlarrj_(__N: PLongInt; __d__: PDouble; __e2: PDouble;
          __ifirst: PLongInt; __ilast: PLongInt; __rtol: PDouble;
          __offset: PLongInt; __w: PDouble; __werr: PDouble; __work: PDouble;
          __iwork: PLongInt; __pivmin: PDouble; __spdiam: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarrj_';
        function dlarrk_(__N: PLongInt; __iw: PLongInt; __gl: PDouble;
          __gu: PDouble; __d__: PDouble; __e2: PDouble; __pivmin: PDouble;
          __reltol: PDouble; __w: PDouble; __werr: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlarrk_';
        function dlarrr_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarrr_';
        function dlarrv_(__N: PLongInt; __vl: PDouble; __vu: PDouble;
          __d__: PDouble; __L: PDouble; __pivmin: PDouble; __isplit: PLongInt;
          __M: PLongInt; __dol: PLongInt; __dou: PLongInt; __minrgp: PDouble;
          __rtol1: PDouble; __rtol2: PDouble; __w: PDouble; __werr: PDouble;
          __wgap: PDouble; __iblock: PLongInt; __indexw: PLongInt;
          __gers: PDouble; __z__: PDouble; __ldz: PLongInt; __isuppz: PLongInt;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarrv_';
        function dlarscl2_(__M: PLongInt; __N: PLongInt; __d__: PDouble;
          __X: PDouble; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarscl2_';
        function dlartg_(__F: PDouble; __g: PDouble; __cs: PDouble;
          __sn: PDouble; __r__: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlartg_';
        function dlartv_(__N: PLongInt; __X: PDouble; __incX: PLongInt;
          __Y: PDouble; __incY: PLongInt; __c__: PDouble; __S: PDouble;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlartv_';
        function dlaruv_(__iseed: PLongInt; __N: PLongInt; __X: PDouble)
          : Integer; cdecl; external libAccelerate name _PU + 'dlaruv_';
        function dlarz_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __L: PLongInt; __v: PDouble; __incv: PLongInt; __tau: PDouble;
          __c__: PDouble; __ldc: PLongInt; __work: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlarz_';
        function dlarzb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __L: PLongInt; __v: PDouble;
          __ldv: PLongInt; __t: PDouble; __ldt: PLongInt; __c__: PDouble;
          __ldc: PLongInt; __work: PDouble; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarzb_';
        function dlarzt_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: PDouble; __ldv: PLongInt;
          __tau: PDouble; __t: PDouble; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlarzt_';
        function dlas2_(__F: PDouble; __g: PDouble; __h__: PDouble;
          __ssmin: PDouble; __ssmax: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlas2_';
        function dlascl_(__type__: MarshaledAString; __KL: PLongInt;
          __KU: PLongInt; __cfrom: PDouble; __cto: PDouble; __M: PLongInt;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlascl_';
        function dlascl2_(__M: PLongInt; __N: PLongInt; __d__: PDouble;
          __X: PDouble; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlascl2_';
        function dlasd0_(__N: PLongInt; __sqre: PLongInt; __d__: PDouble;
          __E: PDouble; __u: PDouble; __ldu: PLongInt; __vt: PDouble;
          __ldvt: PLongInt; __smlsiz: PLongInt; __iwork: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd0_';
        function dlasd1_(__nl: PLongInt; __NR: PLongInt; __sqre: PLongInt;
          __d__: PDouble; __alpha: PDouble; __beta: PDouble; __u: PDouble;
          __ldu: PLongInt; __vt: PDouble; __ldvt: PLongInt; __idxq: PLongInt;
          __iwork: PLongInt; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd1_';
        function dlasd2_(__nl: PLongInt; __NR: PLongInt; __sqre: PLongInt;
          __K: PLongInt; __d__: PDouble; __z__: PDouble; __alpha: PDouble;
          __beta: PDouble; __u: PDouble; __ldu: PLongInt; __vt: PDouble;
          __ldvt: PLongInt; __dsigma: PDouble; __u2: PDouble; __ldu2: PLongInt;
          __vt2: PDouble; __ldvt2: PLongInt; __idxp: PLongInt; __idx: PLongInt;
          __idxc: PLongInt; __idxq: PLongInt; __coltyp: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd2_';
        function dlasd3_(__nl: PLongInt; __NR: PLongInt; __sqre: PLongInt;
          __K: PLongInt; __d__: PDouble; __Q: PDouble; __ldq: PLongInt;
          __dsigma: PDouble; __u: PDouble; __ldu: PLongInt; __u2: PDouble;
          __ldu2: PLongInt; __vt: PDouble; __ldvt: PLongInt; __vt2: PDouble;
          __ldvt2: PLongInt; __idxc: PLongInt; __ctot: PLongInt; __z__: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd3_';
        function dlasd4_(__N: PLongInt; __i__: PLongInt; __d__: PDouble;
          __z__: PDouble; __delta: PDouble; __rho: PDouble; __sigma: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd4_';
        function dlasd5_(__i__: PLongInt; __d__: PDouble; __z__: PDouble;
          __delta: PDouble; __rho: PDouble; __dsigma: PDouble; __work: PDouble)
          : Integer; cdecl; external libAccelerate name _PU + 'dlasd5_';
        function dlasd6_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __d__: PDouble; __vf: PDouble; __vl: PDouble;
          __alpha: PDouble; __beta: PDouble; __idxq: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __ldgcol: PLongInt;
          __givnum: PDouble; __ldgnum: PLongInt; __poles: PDouble;
          __difl: PDouble; __difr: PDouble; __z__: PDouble; __K: PLongInt;
          __c__: PDouble; __S: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd6_';
        function dlasd7_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __K: PLongInt; __d__: PDouble; __z__: PDouble;
          __zw: PDouble; __vf: PDouble; __vfw: PDouble; __vl: PDouble;
          __vlw: PDouble; __alpha: PDouble; __beta: PDouble; __dsigma: PDouble;
          __idx: PLongInt; __idxp: PLongInt; __idxq: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __ldgcol: PLongInt;
          __givnum: PDouble; __ldgnum: PLongInt; __c__: PDouble; __S: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd7_';
        function dlasd8_(__icompq: PLongInt; __K: PLongInt; __d__: PDouble;
          __z__: PDouble; __vf: PDouble; __vl: PDouble; __difl: PDouble;
          __difr: PDouble; __lddifr: PLongInt; __dsigma: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasd8_';
        function dlasda_(__icompq: PLongInt; __smlsiz: PLongInt; __N: PLongInt;
          __sqre: PLongInt; __d__: PDouble; __E: PDouble; __u: PDouble;
          __ldu: PLongInt; __vt: PDouble; __K: PLongInt; __difl: PDouble;
          __difr: PDouble; __z__: PDouble; __poles: PDouble; __givptr: PLongInt;
          __givcol: PLongInt; __ldgcol: PLongInt; __perm: PLongInt;
          __givnum: PDouble; __c__: PDouble; __S: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasda_';
        function dlasdq_(__Uplo: MarshaledAString; __sqre: PLongInt;
          __N: PLongInt; __ncvt: PLongInt; __nru: PLongInt; __ncc: PLongInt;
          __d__: PDouble; __E: PDouble; __vt: PDouble; __ldvt: PLongInt;
          __u: PDouble; __ldu: PLongInt; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasdq_';
        function dlasdt_(__N: PLongInt; __lvl: PLongInt; __nd: PLongInt;
          __inode: PLongInt; __ndiml: PLongInt; __ndimr: PLongInt;
          __msub: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasdt_';
        function dlaset_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: PDouble; __beta: PDouble; __A: PDouble; __lda: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlaset_';
        function dlasq1_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasq1_';
        function dlasq2_(__N: PLongInt; __z__: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlasq2_';
        function dlasq3_(__I0: PLongInt; __n0: PLongInt; __z__: PDouble;
          __pp: PLongInt; __dmin__: PDouble; __sigma: PDouble; __desig: PDouble;
          __qmax: PDouble; __nfail: PLongInt; __iter: PLongInt;
          __ndiv: PLongInt; __ieee: PLongInt; __ttype: PLongInt;
          __dmin1: PDouble; __dmin2: PDouble; __dn: PDouble; __dn1: PDouble;
          __dn2: PDouble; __g: PDouble; __tau: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlasq3_';
        function dlasq4_(__I0: PLongInt; __n0: PLongInt; __z__: PDouble;
          __pp: PLongInt; __n0in: PLongInt; __dmin__: PDouble; __dmin1: PDouble;
          __dmin2: PDouble; __dn: PDouble; __dn1: PDouble; __dn2: PDouble;
          __tau: PDouble; __ttype: PLongInt; __g: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlasq4_';
        function dlasq5_(__I0: PLongInt; __n0: PLongInt; __z__: PDouble;
          __pp: PLongInt; __tau: PDouble; __dmin__: PDouble; __dmin1: PDouble;
          __dmin2: PDouble; __dn: PDouble; __dnm1: PDouble; __dnm2: PDouble;
          __ieee: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasq5_';
        function dlasq6_(__I0: PLongInt; __n0: PLongInt; __z__: PDouble;
          __pp: PLongInt; __dmin__: PDouble; __dmin1: PDouble; __dmin2: PDouble;
          __dn: PDouble; __dnm1: PDouble; __dnm2: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlasq6_';
        function dlasr_(__Side: MarshaledAString; __pivot: MarshaledAString;
          __direct: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __c__: PDouble; __S: PDouble; __A: PDouble; __lda: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dlasr_';
        function dlasrt_(__ID: MarshaledAString; __N: PLongInt; __d__: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasrt_';
        function dlassq_(__N: PLongInt; __X: PDouble; __incX: PLongInt;
          __scale: PDouble; __sumsq: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlassq_';
        function dlasv2_(__F: PDouble; __g: PDouble; __h__: PDouble;
          __ssmin: PDouble; __ssmax: PDouble; __snr: PDouble; __csr: PDouble;
          __snl: PDouble; __csl: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlasv2_';
        function dlaswp_(__N: PLongInt; __A: PDouble; __lda: PLongInt;
          __k1: PLongInt; __k2: PLongInt; __ipiv: PLongInt; __incX: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlaswp_';
        function dlasy2_(__ltranl: PLongInt; __ltranr: PLongInt;
          __isgn: PLongInt; __n1: PLongInt; __n2: PLongInt; __tl: PDouble;
          __ldtl: PLongInt; __tr: PDouble; __ldtr: PLongInt; __B: PDouble;
          __ldb: PLongInt; __scale: PDouble; __X: PDouble; __ldx: PLongInt;
          __xnorm: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlasy2_';
        function dlasyf_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: PDouble; __lda: PLongInt;
          __ipiv: PLongInt; __w: PDouble; __ldw: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlasyf_';
        function dlat2s_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __sa: PSingle; __ldsa: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlat2s_';
        function dlatbs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PDouble; __ldab: PLongInt; __X: PDouble;
          __scale: PDouble; __cnorm: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlatbs_';
        function dlatdf_(__ijob: PLongInt; __N: PLongInt; __z__: PDouble;
          __ldz: PLongInt; __rhs: PDouble; __rdsum: PDouble; __rdscal: PDouble;
          __ipiv: PLongInt; __jpiv: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlatdf_';
        function dlatps_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __Ap: PDouble; __X: PDouble; __scale: PDouble; __cnorm: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlatps_';
        function dlatrd_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __A: PDouble; __lda: PLongInt; __E: PDouble;
          __tau: PDouble; __w: PDouble; __ldw: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlatrd_';
        function dlatrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __X: PDouble; __scale: PDouble;
          __cnorm: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlatrs_';
        function dlatrz_(__M: PLongInt; __N: PLongInt; __L: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble)
          : Integer; cdecl; external libAccelerate name _PU + 'dlatrz_';
        function dlatzm_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: PDouble; __incv: PLongInt; __tau: PDouble; __C1: PDouble;
          __c2: PDouble; __ldc: PLongInt; __work: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlatzm_';
        function dlauu2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlauu2_';
        function dlauum_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlauum_';
        function dopgtr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __tau: PDouble; __Q: PDouble; __ldq: PLongInt; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dopgtr_';
        function dopmtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __Ap: PDouble; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dopmtr_';
        function dorg2l_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorg2l_';
        function dorg2r_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorg2r_';
        function dorgbr_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: PDouble; __lda: PLongInt; __tau: PDouble;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorgbr_';
        function dorghr_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorghr_';
        function dorgl2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorgl2_';
        function dorglq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorglq_';
        function dorgql_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorgql_';
        function dorgqr_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorgqr_';
        function dorgr2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorgr2_';
        function dorgrq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorgrq_';
        function dorgtr_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorgtr_';
        function dorm2l_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorm2l_';
        function dorm2r_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorm2r_';
        function dormbr_(__vect: MarshaledAString; __Side: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: PDouble; __lda: PLongInt; __tau: PDouble;
          __c__: PDouble; __ldc: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormbr_';
        function dormhr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __c__: PDouble;
          __ldc: PLongInt; __work: PDouble; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dormhr_';
        function dorml2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dorml2_';
        function dormlq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormlq_';
        function dormql_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormql_';
        function dormqr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormqr_';
        function dormr2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormr2_';
        function dormr3_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __c__: PDouble;
          __ldc: PLongInt; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormr3_';
        function dormrq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormrq_';
        function dormrz_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: PDouble; __lda: PLongInt; __tau: PDouble; __c__: PDouble;
          __ldc: PLongInt; __work: PDouble; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dormrz_';
        function dormtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __c__: PDouble; __ldc: PLongInt;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dormtr_';
        function dpbcon_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PDouble; __ldab: PLongInt; __anorm: PDouble;
          __rcond: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpbcon_';
        function dpbequ_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PDouble; __ldab: PLongInt; __S: PDouble;
          __scond: PDouble; __amax: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpbequ_';
        function dpbrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __afb: PDouble; __ldafb: PLongInt; __B: PDouble; __ldb: PLongInt;
          __X: PDouble; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpbrfs_';
        function dpbstf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PDouble; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dpbstf_';
        function dpbsv_(__Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: PDouble; __ldab: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpbsv_';
        function dpbsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __nrhs: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __afb: PDouble; __ldafb: PLongInt;
          __equed: MarshaledAString; __S: PDouble; __B: PDouble;
          __ldb: PLongInt; __X: PDouble; __ldx: PLongInt; __rcond: PDouble;
          __ferr: PDouble; __berr: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpbsvx_';
        function dpbtf2_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PDouble; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dpbtf2_';
        function dpbtrf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PDouble; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dpbtrf_';
        function dpbtrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __B: PDouble; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpbtrs_';
        function dpftrf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpftrf_';
        function dpftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpftri_';
        function dpftrs_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PDouble; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpftrs_';
        function dpocon_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpocon_';
        function dpoequ_(__N: PLongInt; __A: PDouble; __lda: PLongInt;
          __S: PDouble; __scond: PDouble; __amax: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dpoequ_';
        function dpoequb_(__N: PLongInt; __A: PDouble; __lda: PLongInt;
          __S: PDouble; __scond: PDouble; __amax: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dpoequb_';
        function dporfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __af: PDouble;
          __ldaf: PLongInt; __B: PDouble; __ldb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __ferr: PDouble; __berr: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dporfs_';
        function dposv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dposv_';
        function dposvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PDouble; __lda: PLongInt;
          __af: PDouble; __ldaf: PLongInt; __equed: MarshaledAString;
          __S: PDouble; __B: PDouble; __ldb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dposvx_';
        function dpotf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpotf2_';
        function dpotrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpotrf_';
        function dpotri_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpotri_';
        function dpotrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpotrs_';
        function dppcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __anorm: PDouble; __rcond: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dppcon_';
        function dppequ_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __S: PDouble; __scond: PDouble; __amax: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dppequ_';
        function dpprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PDouble; __afp: PDouble; __B: PDouble;
          __ldb: PLongInt; __X: PDouble; __ldx: PLongInt; __ferr: PDouble;
          __berr: PDouble; __work: PDouble; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dpprfs_';
        function dppsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PDouble; __B: PDouble; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dppsv_';
        function dppsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: PDouble; __afp: PDouble;
          __equed: MarshaledAString; __S: PDouble; __B: PDouble;
          __ldb: PLongInt; __X: PDouble; __ldx: PLongInt; __rcond: PDouble;
          __ferr: PDouble; __berr: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dppsvx_';
        function dpptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpptrf_';
        function dpptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpptri_';
        function dpptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PDouble; __B: PDouble; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpptrs_';
        function dpstf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpstf2_';
        function dpstrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpstrf_';
        function dptcon_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __anorm: PDouble; __rcond: PDouble; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dptcon_';
        function dpteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __z__: PDouble; __ldz: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpteqr_';
        function dptrfs_(__N: PLongInt; __nrhs: PLongInt; __d__: PDouble;
          __E: PDouble; __DF: PDouble; __ef: PDouble; __B: PDouble;
          __ldb: PLongInt; __X: PDouble; __ldx: PLongInt; __ferr: PDouble;
          __berr: PDouble; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dptrfs_';
        function dptsv_(__N: PLongInt; __nrhs: PLongInt; __d__: PDouble;
          __E: PDouble; __B: PDouble; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dptsv_';
        function dptsvx_(__fact: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PDouble; __E: PDouble; __DF: PDouble;
          __ef: PDouble; __B: PDouble; __ldb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dptsvx_';
        function dpttrf_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dpttrf_';
        function dpttrs_(__N: PLongInt; __nrhs: PLongInt; __d__: PDouble;
          __E: PDouble; __B: PDouble; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dpttrs_';
        function dptts2_(__N: PLongInt; __nrhs: PLongInt; __d__: PDouble;
          __E: PDouble; __B: PDouble; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dptts2_';
        function drscl_(__N: PLongInt; __sa: PDouble; __sx: PDouble;
          __incX: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'drscl_';
        function dsbev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __w: PDouble; __z__: PDouble; __ldz: PLongInt; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsbev_';
        function dsbevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __w: PDouble; __z__: PDouble; __ldz: PLongInt; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsbevd_';
        function dsbevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: PDouble; __ldab: PLongInt; __Q: PDouble; __ldq: PLongInt;
          __vl: PDouble; __vu: PDouble; __il: PLongInt; __iu: PLongInt;
          __abstol: PDouble; __M: PLongInt; __w: PDouble; __z__: PDouble;
          __ldz: PLongInt; __work: PDouble; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsbevx_';
        function dsbgst_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __bb: PDouble; __ldbb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsbgst_';
        function dsbgv_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __bb: PDouble; __ldbb: PLongInt; __w: PDouble;
          __z__: PDouble; __ldz: PLongInt; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dsbgv_';
        function dsbgvd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: PDouble;
          __ldab: PLongInt; __bb: PDouble; __ldbb: PLongInt; __w: PDouble;
          __z__: PDouble; __ldz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dsbgvd_';
        function dsbgvx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __ka: PLongInt;
          __kb: PLongInt; __ab: PDouble; __ldab: PLongInt; __bb: PDouble;
          __ldbb: PLongInt; __Q: PDouble; __ldq: PLongInt; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: PDouble; __ldz: PLongInt;
          __work: PDouble; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsbgvx_';
        function dsbtrd_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: PDouble; __ldab: PLongInt;
          __d__: PDouble; __E: PDouble; __Q: PDouble; __ldq: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsbtrd_';
        function dsfrk_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __N: PLongInt; __K: PLongInt;
          __alpha: PDouble; __A: PDouble; __lda: PLongInt; __beta: PDouble;
          __c__: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dsfrk_';
        function dsgesv_(__N: PLongInt; __nrhs: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt;
          __X: PDouble; __ldx: PLongInt; __work: PDouble; __swork: PSingle;
          __iter: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsgesv_';
        function dspcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dspcon_';
        function dspev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PDouble; __w: PDouble; __z__: PDouble;
          __ldz: PLongInt; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dspev_';
        function dspevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PDouble; __w: PDouble; __z__: PDouble;
          __ldz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dspevd_';
        function dspevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: PDouble; __ldz: PLongInt;
          __work: PDouble; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dspevx_';
        function dspgst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PDouble; __bp: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dspgst_';
        function dspgv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble; __bp: PDouble;
          __w: PDouble; __z__: PDouble; __ldz: PLongInt; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dspgv_';
        function dspgvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble; __bp: PDouble;
          __w: PDouble; __z__: PDouble; __ldz: PLongInt; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dspgvd_';
        function dspgvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __Ap: PDouble; __bp: PDouble; __vl: PDouble; __vu: PDouble;
          __il: PLongInt; __iu: PLongInt; __abstol: PDouble; __M: PLongInt;
          __w: PDouble; __z__: PDouble; __ldz: PLongInt; __work: PDouble;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dspgvx_';
        function dsposv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __X: PDouble; __ldx: PLongInt; __work: PDouble;
          __swork: PSingle; __iter: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsposv_';
        function dsprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PDouble; __afp: PDouble; __ipiv: PLongInt;
          __B: PDouble; __ldb: PLongInt; __X: PDouble; __ldx: PLongInt;
          __ferr: PDouble; __berr: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsprfs_';
        function dspsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PDouble; __ipiv: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dspsv_';
        function dspsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: PDouble; __afp: PDouble;
          __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dspsvx_';
        function dsptrd_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __d__: PDouble; __E: PDouble; __tau: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dsptrd_';
        function dsptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsptrf_';
        function dsptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __ipiv: PLongInt; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsptri_';
        function dsptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PDouble; __ipiv: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsptrs_';
        function dstebz_(__range: MarshaledAString; __Order: MarshaledAString;
          __N: PLongInt; __vl: PDouble; __vu: PDouble; __il: PLongInt;
          __iu: PLongInt; __abstol: PDouble; __d__: PDouble; __E: PDouble;
          __M: PLongInt; __nsplit: PLongInt; __w: PDouble; __iblock: PLongInt;
          __isplit: PLongInt; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dstebz_';
        function dstedc_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __z__: PDouble; __ldz: PLongInt;
          __work: PDouble; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dstedc_';
        function dstegr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PDouble; __E: PDouble; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: PDouble; __ldz: PLongInt;
          __isuppz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dstegr_';
        function dstein_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __M: PLongInt; __w: PDouble; __iblock: PLongInt; __isplit: PLongInt;
          __z__: PDouble; __ldz: PLongInt; __work: PDouble; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dstein_';
        function dstemr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PDouble; __E: PDouble; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __M: PLongInt;
          __w: PDouble; __z__: PDouble; __ldz: PLongInt; __nzc: PLongInt;
          __isuppz: PLongInt; __tryrac: PLongInt; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dstemr_';
        function dsteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __z__: PDouble; __ldz: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsteqr_';
        function dsterf_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsterf_';
        function dstev_(__jobz: MarshaledAString; __N: PLongInt; __d__: PDouble;
          __E: PDouble; __z__: PDouble; __ldz: PLongInt; __work: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dstev_';
        function dstevd_(__jobz: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __z__: PDouble; __ldz: PLongInt;
          __work: PDouble; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dstevd_';
        function dstevr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PDouble; __E: PDouble; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: PDouble; __ldz: PLongInt;
          __isuppz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dstevr_';
        function dstevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PDouble; __E: PDouble; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: PDouble; __ldz: PLongInt;
          __work: PDouble; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dstevx_';
        function dsycon_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsycon_';
        function dsyequb_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __S: PDouble; __scond: PDouble; __amax: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsyequb_';
        function dsyev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __w: PDouble;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsyev_';
        function dsyevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __w: PDouble;
          __work: PDouble; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsyevd_';
        function dsyevr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __vl: PDouble; __vu: PDouble; __il: PLongInt;
          __iu: PLongInt; __abstol: PDouble; __M: PLongInt; __w: PDouble;
          __z__: PDouble; __ldz: PLongInt; __isuppz: PLongInt; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsyevr_';
        function dsyevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __vl: PDouble; __vu: PDouble; __il: PLongInt;
          __iu: PLongInt; __abstol: PDouble; __M: PLongInt; __w: PDouble;
          __z__: PDouble; __ldz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dsyevx_';
        function dsygs2_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsygs2_';
        function dsygst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsygst_';
        function dsygv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __B: PDouble; __ldb: PLongInt; __w: PDouble;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsygv_';
        function dsygvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __B: PDouble; __ldb: PLongInt; __w: PDouble;
          __work: PDouble; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsygvd_';
        function dsygvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __vl: PDouble; __vu: PDouble; __il: PLongInt; __iu: PLongInt;
          __abstol: PDouble; __M: PLongInt; __w: PDouble; __z__: PDouble;
          __ldz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dsygvx_';
        function dsyrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __af: PDouble;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: PDouble; __ldb: PLongInt;
          __X: PDouble; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsyrfs_';
        function dsysv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __ipiv: PLongInt;
          __B: PDouble; __ldb: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsysv_';
        function dsysvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PDouble; __lda: PLongInt;
          __af: PDouble; __ldaf: PLongInt; __ipiv: PLongInt; __B: PDouble;
          __ldb: PLongInt; __X: PDouble; __ldx: PLongInt; __rcond: PDouble;
          __ferr: PDouble; __berr: PDouble; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsysvx_';
        function dsytd2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tau: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsytd2_';
        function dsytf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsytf2_';
        function dsytrd_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tau: PDouble;
          __work: PDouble; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsytrd_';
        function dsytrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsytrf_';
        function dsytri_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __ipiv: PLongInt; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dsytri_';
        function dsytrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PDouble; __lda: PLongInt; __ipiv: PLongInt;
          __B: PDouble; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dsytrs_';
        function dtbcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: PDouble; __ldab: PLongInt; __rcond: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtbcon_';
        function dtbrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: PDouble; __ldab: PLongInt; __B: PDouble;
          __ldb: PLongInt; __X: PDouble; __ldx: PLongInt; __ferr: PDouble;
          __berr: PDouble; __work: PDouble; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtbrfs_';
        function dtbtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: PDouble; __ldab: PLongInt; __B: PDouble;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtbtrs_';
        function dtfsm_(__transr: MarshaledAString; __Side: MarshaledAString;
          __Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: PDouble; __A: PDouble; __B: PDouble; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtfsm_';
        function dtftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtftri_';
        function dtfttp_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: PDouble; __Ap: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtfttp_';
        function dtfttr_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: PDouble; __A: PDouble; __lda: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtfttr_';
        function dtgevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __S: PDouble; __lds: PLongInt;
          __P: PDouble; __ldp: PLongInt; __vl: PDouble; __ldvl: PLongInt;
          __vr: PDouble; __ldvr: PLongInt; __mm: PLongInt; __M: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtgevc_';
        function dtgex2_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __Q: PDouble; __ldq: PLongInt; __z__: PDouble; __ldz: PLongInt;
          __j1: PLongInt; __n1: PLongInt; __n2: PLongInt; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtgex2_';
        function dtgexc_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __Q: PDouble; __ldq: PLongInt; __z__: PDouble; __ldz: PLongInt;
          __ifst: PLongInt; __ilst: PLongInt; __work: PDouble;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtgexc_';
        function dtgsen_(__ijob: PLongInt; __wantq: PLongInt; __wantz: PLongInt;
          __select: PLongInt; __N: PLongInt; __A: PDouble; __lda: PLongInt;
          __B: PDouble; __ldb: PLongInt; __alphar: PDouble; __alphai: PDouble;
          __beta: PDouble; __Q: PDouble; __ldq: PLongInt; __z__: PDouble;
          __ldz: PLongInt; __M: PLongInt; __pl: PDouble; __pr: PDouble;
          __dif: PDouble; __work: PDouble; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtgsen_';
        function dtgsja_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: PDouble; __lda: PLongInt;
          __B: PDouble; __ldb: PLongInt; __tola: PDouble; __tolb: PDouble;
          __alpha: PDouble; __beta: PDouble; __u: PDouble; __ldu: PLongInt;
          __v: PDouble; __ldv: PLongInt; __Q: PDouble; __ldq: PLongInt;
          __work: PDouble; __ncycle: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'dtgsja_';
        function dtgsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __A: PDouble; __lda: PLongInt;
          __B: PDouble; __ldb: PLongInt; __vl: PDouble; __ldvl: PLongInt;
          __vr: PDouble; __ldvr: PLongInt; __S: PDouble; __dif: PDouble;
          __mm: PLongInt; __M: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtgsna_';
        function dtgsy2_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: PDouble; __lda: PLongInt;
          __B: PDouble; __ldb: PLongInt; __c__: PDouble; __ldc: PLongInt;
          __d__: PDouble; __ldd: PLongInt; __E: PDouble; __lde: PLongInt;
          __F: PDouble; __ldf: PLongInt; __scale: PDouble; __rdsum: PDouble;
          __rdscal: PDouble; __iwork: PLongInt; __pq: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtgsy2_';
        function dtgsyl_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: PDouble; __lda: PLongInt;
          __B: PDouble; __ldb: PLongInt; __c__: PDouble; __ldc: PLongInt;
          __d__: PDouble; __ldd: PLongInt; __E: PDouble; __lde: PLongInt;
          __F: PDouble; __ldf: PLongInt; __scale: PDouble; __dif: PDouble;
          __work: PDouble; __lwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtgsyl_';
        function dtpcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __rcond: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtpcon_';
        function dtprfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: PDouble; __B: PDouble; __ldb: PLongInt; __X: PDouble;
          __ldx: PLongInt; __ferr: PDouble; __berr: PDouble; __work: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtprfs_';
        function dtptri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __Ap: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtptri_';
        function dtptrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: PDouble; __B: PDouble; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtptrs_';
        function dtpttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PDouble; __arf: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtpttf_';
        function dtpttr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PDouble;
          __A: PDouble; __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtpttr_';
        function dtrcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __rcond: PDouble; __work: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrcon_';
        function dtrevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: PDouble; __ldt: PLongInt;
          __vl: PDouble; __ldvl: PLongInt; __vr: PDouble; __ldvr: PLongInt;
          __mm: PLongInt; __M: PLongInt; __work: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtrevc_';
        function dtrexc_(__compq: MarshaledAString; __N: PLongInt; __t: PDouble;
          __ldt: PLongInt; __Q: PDouble; __ldq: PLongInt; __ifst: PLongInt;
          __ilst: PLongInt; __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrexc_';
        function dtrrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __X: PDouble; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrrfs_';
        function dtrsen_(__job: MarshaledAString; __compq: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: PDouble; __ldt: PLongInt;
          __Q: PDouble; __ldq: PLongInt; __wr: PDouble; __wi: PDouble;
          __M: PLongInt; __S: PDouble; __sep: PDouble; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrsen_';
        function dtrsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: PDouble; __ldt: PLongInt;
          __vl: PDouble; __ldvl: PLongInt; __vr: PDouble; __ldvr: PLongInt;
          __S: PDouble; __sep: PDouble; __mm: PLongInt; __M: PLongInt;
          __work: PDouble; __ldwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrsna_';
        function dtrsyl_(__trana: MarshaledAString; __tranb: MarshaledAString;
          __isgn: PLongInt; __M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __B: PDouble; __ldb: PLongInt; __c__: PDouble;
          __ldc: PLongInt; __scale: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrsyl_';
        function dtrti2_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtrti2_';
        function dtrtri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dtrtri_';
        function dtrtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: PDouble; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrtrs_';
        function dtrttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PDouble; __lda: PLongInt; __arf: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrttf_';
        function dtrttp_(__Uplo: MarshaledAString; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __Ap: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtrttp_';
        function dtzrqf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtzrqf_';
        function dtzrzf_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __tau: PDouble; __work: PDouble; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dtzrzf_';
        function dzsum1_(__N: PLongInt; __cx: Pointer; __incX: PLongInt)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dzsum1_';
        function icmax1_(__N: PLongInt; __cx: Pointer; __incX: PLongInt)
          : __CLPK_integer; cdecl; external libAccelerate name _PU + 'icmax1_';
        function ieeeck_(__ispec: PLongInt; __zero: PSingle; __one: PSingle)
          : __CLPK_integer; cdecl; external libAccelerate name _PU + 'ieeeck_';
        function ilaclc_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilaclc_';
        function ilaclr_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilaclr_';
        function iladiag_(__Diag: MarshaledAString): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'iladiag_';
        function iladlc_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'iladlc_';
        function iladlr_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'iladlr_';
        function ilaenv_(__ispec: PLongInt; __name__: MarshaledAString;
          __opts: MarshaledAString; __n1: PLongInt; __n2: PLongInt;
          __n3: PLongInt; __n4: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilaenv_';
        function ilaprec_(__prec: MarshaledAString): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilaprec_';
        function ilaslc_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilaslc_';
        function ilaslr_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilaslr_';
        function ilatrans_(__Trans: MarshaledAString): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilatrans_';
        function ilauplo_(__Uplo: MarshaledAString): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilauplo_';
        function ilaver_(__vers_major__: PLongInt; __vers_minor__: PLongInt;
          __vers_patch__: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ilaver_';
        function ilazlc_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilazlc_';
        function ilazlr_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'ilazlr_';
        function iparmq_(__ispec: PLongInt; __name__: MarshaledAString;
          __opts: MarshaledAString; __N: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __lwork: PLongInt): __CLPK_integer; cdecl;
          external libAccelerate name _PU + 'iparmq_';
        function izmax1_(__N: PLongInt; __cx: Pointer; __incX: PLongInt)
          : __CLPK_integer; cdecl; external libAccelerate name _PU + 'izmax1_';
        function lsamen_(__N: PLongInt; __ca: MarshaledAString;
          __cb: MarshaledAString): __CLPK_logical; cdecl;
          external libAccelerate name _PU + 'lsamen_';
        function smaxloc_(__A: PSingle; __dimm: PLongInt): __CLPK_integer;
          cdecl; external libAccelerate name _PU + 'smaxloc_';
        function sbdsdc_(__Uplo: MarshaledAString; __compq: MarshaledAString;
          __N: PLongInt; __d__: PSingle; __E: PSingle; __u: PSingle;
          __ldu: PLongInt; __vt: PSingle; __ldvt: PLongInt; __Q: PSingle;
          __iq: PLongInt; __work: PSingle; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sbdsdc_';
        function sbdsqr_(__Uplo: MarshaledAString; __N: PLongInt;
          __ncvt: PLongInt; __nru: PLongInt; __ncc: PLongInt; __d__: PSingle;
          __E: PSingle; __vt: PSingle; __ldvt: PLongInt; __u: PSingle;
          __ldu: PLongInt; __c__: PSingle; __ldc: PLongInt; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sbdsqr_';
        function scsum1_(__N: PLongInt; __cx: Pointer; __incX: PLongInt)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'scsum1_';
        function sdisna_(__job: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __d__: PSingle; __sep: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sdisna_';
        function sgbbrd_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __ncc: PLongInt; __KL: PLongInt; __KU: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __d__: PSingle; __E: PSingle; __Q: PSingle;
          __ldq: PLongInt; __pt: PSingle; __ldpt: PLongInt; __c__: PSingle;
          __ldc: PLongInt; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbbrd_';
        function sgbcon_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbcon_';
        function sgbequ_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PSingle; __ldab: PLongInt; __r__: PSingle;
          __c__: PSingle; __rowcnd: PSingle; __colcnd: PSingle; __amax: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbequ_';
        function sgbequb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PSingle; __ldab: PLongInt; __r__: PSingle;
          __c__: PSingle; __rowcnd: PSingle; __colcnd: PSingle; __amax: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbequb_';
        function sgbrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __afb: PSingle; __ldafb: PLongInt; __ipiv: PLongInt;
          __B: PSingle; __ldb: PLongInt; __X: PSingle; __ldx: PLongInt;
          __ferr: PSingle; __berr: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbrfs_';
        function sgbsv_(__N: PLongInt; __KL: PLongInt; __KU: PLongInt;
          __nrhs: PLongInt; __ab: PSingle; __ldab: PLongInt; __ipiv: PLongInt;
          __B: PSingle; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbsv_';
        function sgbsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt;
          __ab: PSingle; __ldab: PLongInt; __afb: PSingle; __ldafb: PLongInt;
          __ipiv: PLongInt; __equed: MarshaledAString; __r__: PSingle;
          __c__: PSingle; __B: PSingle; __ldb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbsvx_';
        function sgbtf2_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PSingle; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbtf2_';
        function sgbtrf_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PSingle; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbtrf_';
        function sgbtrs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgbtrs_';
        function sgebak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PSingle;
          __M: PLongInt; __v: PSingle; __ldv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgebak_';
        function sgebal_(__job: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgebal_';
        function sgebd2_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tauq: PSingle;
          __taup: PSingle; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgebd2_';
        function sgebrd_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tauq: PSingle;
          __taup: PSingle; __work: PSingle; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgebrd_';
        function sgecon_(__norm: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgecon_';
        function sgeequ_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __r__: PSingle; __c__: PSingle; __rowcnd: PSingle;
          __colcnd: PSingle; __amax: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeequ_';
        function sgeequb_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __r__: PSingle; __c__: PSingle; __rowcnd: PSingle;
          __colcnd: PSingle; __amax: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeequb_';
        function sgees_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __N: PLongInt; __A: PSingle; __lda: PLongInt;
          __sdim: PLongInt; __wr: PSingle; __wi: PSingle; __vs: PSingle;
          __ldvs: PLongInt; __work: PSingle; __lwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgees_';
        function sgeesx_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __sense: MarshaledAString; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __sdim: PLongInt; __wr: PSingle;
          __wi: PSingle; __vs: PSingle; __ldvs: PLongInt; __rconde: PSingle;
          __rcondv: PSingle; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __bwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeesx_';
        function sgeev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __wr: PSingle;
          __wi: PSingle; __vl: PSingle; __ldvl: PLongInt; __vr: PSingle;
          __ldvr: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeev_';
        function sgeevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __wr: PSingle; __wi: PSingle;
          __vl: PSingle; __ldvl: PLongInt; __vr: PSingle; __ldvr: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __scale: PSingle; __abnrm: PSingle;
          __rconde: PSingle; __rcondv: PSingle; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sgeevx_';
        function sgegs_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __alphar: PSingle; __alphai: PSingle;
          __beta: PSingle; __vsl: PSingle; __ldvsl: PLongInt; __vsr: PSingle;
          __ldvsr: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgegs_';
        function sgegv_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __alphar: PSingle; __alphai: PSingle;
          __beta: PSingle; __vl: PSingle; __ldvl: PLongInt; __vr: PSingle;
          __ldvr: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgegv_';
        function sgehd2_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgehd2_';
        function sgehrd_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgehrd_';
        function sgejsv_(__joba: MarshaledAString; __jobu: MarshaledAString;
          __jobv: MarshaledAString; __jobr: MarshaledAString;
          __jobt: MarshaledAString; __jobp: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __sva: PSingle;
          __u: PSingle; __ldu: PLongInt; __v: PSingle; __ldv: PLongInt;
          __work: PSingle; __lwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgejsv_';
        function sgelq2_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgelq2_';
        function sgelqf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgelqf_';
        function sgels_(__Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __work: PSingle; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgels_';
        function sgelsd_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __S: PSingle; __rcond: PSingle; __rank: PLongInt; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sgelsd_';
        function sgelss_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __S: PSingle; __rcond: PSingle; __rank: PLongInt; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgelss_';
        function sgelsx_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PSingle; __rank: PLongInt; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgelsx_';
        function sgelsy_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PSingle; __rank: PLongInt; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgelsy_';
        function sgeql2_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgeql2_';
        function sgeqlf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeqlf_';
        function sgeqp3_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __jpvt: PLongInt; __tau: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeqp3_';
        function sgeqpf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __jpvt: PLongInt; __tau: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeqpf_';
        function sgeqr2_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgeqr2_';
        function sgeqrf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgeqrf_';
        function sgerfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __af: PSingle;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt;
          __X: PSingle; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgerfs_';
        function sgerq2_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgerq2_';
        function sgerqf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgerqf_';
        function sgesc2_(__N: PLongInt; __A: PSingle; __lda: PLongInt;
          __rhs: PSingle; __ipiv: PLongInt; __jpiv: PLongInt; __scale: PSingle)
          : Integer; cdecl; external libAccelerate name _PU + 'sgesc2_';
        function sgesdd_(__jobz: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __S: PSingle; __u: PSingle;
          __ldu: PLongInt; __vt: PSingle; __ldvt: PLongInt; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sgesdd_';
        function sgesv_(__N: PLongInt; __nrhs: PLongInt; __A: PSingle;
          __lda: PLongInt; __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgesv_';
        function sgesvd_(__jobu: MarshaledAString; __jobvt: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __A: PSingle; __lda: PLongInt;
          __S: PSingle; __u: PSingle; __ldu: PLongInt; __vt: PSingle;
          __ldvt: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgesvd_';
        function sgesvj_(__joba: MarshaledAString; __jobu: MarshaledAString;
          __jobv: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __sva: PSingle; __mv: PLongInt; __v: PSingle;
          __ldv: PLongInt; __work: PSingle; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgesvj_';
        function sgesvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PSingle; __lda: PLongInt;
          __af: PSingle; __ldaf: PLongInt; __ipiv: PLongInt;
          __equed: MarshaledAString; __r__: PSingle; __c__: PSingle;
          __B: PSingle; __ldb: PLongInt; __X: PSingle; __ldx: PLongInt;
          __rcond: PSingle; __ferr: PSingle; __berr: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgesvx_';
        function sgetc2_(__N: PLongInt; __A: PSingle; __lda: PLongInt;
          __ipiv: PLongInt; __jpiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgetc2_';
        function sgetf2_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgetf2_';
        function sgetrf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgetrf_';
        function sgetri_(__N: PLongInt; __A: PSingle; __lda: PLongInt;
          __ipiv: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgetri_';
        function sgetrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __ipiv: PLongInt;
          __B: PSingle; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgetrs_';
        function sggbak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __lscale: PSingle;
          __rscale: PSingle; __M: PLongInt; __v: PSingle; __ldv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggbak_';
        function sggbal_(__job: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __B: PSingle; __ldb: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __lscale: PSingle; __rscale: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggbal_';
        function sgges_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __sdim: PLongInt; __alphar: PSingle; __alphai: PSingle;
          __beta: PSingle; __vsl: PSingle; __ldvsl: PLongInt; __vsr: PSingle;
          __ldvsr: PLongInt; __work: PSingle; __lwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgges_';
        function sggesx_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp;
          __sense: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __B: PSingle; __ldb: PLongInt; __sdim: PLongInt;
          __alphar: PSingle; __alphai: PSingle; __beta: PSingle; __vsl: PSingle;
          __ldvsl: PLongInt; __vsr: PSingle; __ldvsr: PLongInt;
          __rconde: PSingle; __rcondv: PSingle; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggesx_';
        function sggev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __alphar: PSingle; __alphai: PSingle;
          __beta: PSingle; __vl: PSingle; __ldvl: PLongInt; __vr: PSingle;
          __ldvr: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggev_';
        function sggevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __alphar: PSingle; __alphai: PSingle; __beta: PSingle; __vl: PSingle;
          __ldvl: PLongInt; __vr: PSingle; __ldvr: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __lscale: PSingle; __rscale: PSingle;
          __abnrm: PSingle; __bbnrm: PSingle; __rconde: PSingle;
          __rcondv: PSingle; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __bwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sggevx_';
        function sggglm_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __d__: PSingle; __X: PSingle; __Y: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggglm_';
        function sgghrd_(__compq: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __A: PSingle;
          __lda: PLongInt; __B: PSingle; __ldb: PLongInt; __Q: PSingle;
          __ldq: PLongInt; __z__: PSingle; __ldz: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgghrd_';
        function sgglse_(__M: PLongInt; __N: PLongInt; __P: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __c__: PSingle; __d__: PSingle; __X: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgglse_';
        function sggqrf_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: PSingle; __lda: PLongInt; __taua: PSingle; __B: PSingle;
          __ldb: PLongInt; __taub: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggqrf_';
        function sggrqf_(__M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __taua: PSingle; __B: PSingle;
          __ldb: PLongInt; __taub: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggrqf_';
        function sggsvd_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __N: PLongInt; __P: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: PSingle; __lda: PLongInt;
          __B: PSingle; __ldb: PLongInt; __alpha: PSingle; __beta: PSingle;
          __u: PSingle; __ldu: PLongInt; __v: PSingle; __ldv: PLongInt;
          __Q: PSingle; __ldq: PLongInt; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggsvd_';
        function sggsvp_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __tola: PSingle; __tolb: PSingle; __K: PLongInt; __L: PLongInt;
          __u: PSingle; __ldu: PLongInt; __v: PSingle; __ldv: PLongInt;
          __Q: PSingle; __ldq: PLongInt; __iwork: PLongInt; __tau: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sggsvp_';
        function sgsvj0_(__jobv: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __d__: PSingle; __sva: PSingle;
          __mv: PLongInt; __v: PSingle; __ldv: PLongInt; __eps: PSingle;
          __sfmin: PSingle; __tol: PSingle; __nsweep: PLongInt; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgsvj0_';
        function sgsvj1_(__jobv: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __n1: PLongInt; __A: PSingle; __lda: PLongInt; __d__: PSingle;
          __sva: PSingle; __mv: PLongInt; __v: PSingle; __ldv: PLongInt;
          __eps: PSingle; __sfmin: PSingle; __tol: PSingle; __nsweep: PLongInt;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgsvj1_';
        function sgtcon_(__norm: MarshaledAString; __N: PLongInt; __dl: PSingle;
          __d__: PSingle; __du: PSingle; __du2: PSingle; __ipiv: PLongInt;
          __anorm: PSingle; __rcond: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgtcon_';
        function sgtrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: PSingle; __d__: PSingle; __du: PSingle;
          __dlf: PSingle; __DF: PSingle; __duf: PSingle; __du2: PSingle;
          __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __ferr: PSingle; __berr: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgtrfs_';
        function sgtsv_(__N: PLongInt; __nrhs: PLongInt; __dl: PSingle;
          __d__: PSingle; __du: PSingle; __B: PSingle; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgtsv_';
        function sgtsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __dl: PSingle; __d__: PSingle;
          __du: PSingle; __dlf: PSingle; __DF: PSingle; __duf: PSingle;
          __du2: PSingle; __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt;
          __X: PSingle; __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle;
          __berr: PSingle; __work: PSingle; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgtsvx_';
        function sgttrf_(__N: PLongInt; __dl: PSingle; __d__: PSingle;
          __du: PSingle; __du2: PSingle; __ipiv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sgttrf_';
        function sgttrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: PSingle; __d__: PSingle; __du: PSingle;
          __du2: PSingle; __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgttrs_';
        function sgtts2_(__itrans: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __dl: PSingle; __d__: PSingle; __du: PSingle; __du2: PSingle;
          __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sgtts2_';
        function shgeqz_(__job: MarshaledAString; __compq: MarshaledAString;
          __compz: MarshaledAString; __N: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __h__: PSingle; __ldh: PLongInt; __t: PSingle;
          __ldt: PLongInt; __alphar: PSingle; __alphai: PSingle;
          __beta: PSingle; __Q: PSingle; __ldq: PLongInt; __z__: PSingle;
          __ldz: PLongInt; __work: PSingle; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'shgeqz_';
        function shsein_(__Side: MarshaledAString; __eigsrc: MarshaledAString;
          __initv: MarshaledAString; __select: PLongInt; __N: PLongInt;
          __h__: PSingle; __ldh: PLongInt; __wr: PSingle; __wi: PSingle;
          __vl: PSingle; __ldvl: PLongInt; __vr: PSingle; __ldvr: PLongInt;
          __mm: PLongInt; __M: PLongInt; __work: PSingle; __ifaill: PLongInt;
          __ifailr: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'shsein_';
        function shseqr_(__job: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __h__: PSingle;
          __ldh: PLongInt; __wr: PSingle; __wi: PSingle; __z__: PSingle;
          __ldz: PLongInt; __work: PSingle; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'shseqr_';
        function sisnan_(__sin__: PSingle): __CLPK_logical; cdecl;
          external libAccelerate name _PU + 'sisnan_';
        function slabad_(__small: PSingle; __large: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slabad_';
        function slabrd_(__M: PLongInt; __N: PLongInt; __nb: PLongInt;
          __A: PSingle; __lda: PLongInt; __d__: PSingle; __E: PSingle;
          __tauq: PSingle; __taup: PSingle; __X: PSingle; __ldx: PLongInt;
          __Y: PSingle; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slabrd_';
        function slacn2_(__N: PLongInt; __v: PSingle; __X: PSingle;
          __isgn: PLongInt; __est: PSingle; __kase: PLongInt; __isave: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slacn2_';
        function slacon_(__N: PLongInt; __v: PSingle; __X: PSingle;
          __isgn: PLongInt; __est: PSingle; __kase: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slacon_';
        function slacpy_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slacpy_';
        function sladiv_(__A: PSingle; __B: PSingle; __c__: PSingle;
          __d__: PSingle; __P: PSingle; __Q: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'sladiv_';
        function slae2_(__A: PSingle; __B: PSingle; __c__: PSingle;
          __rt1: PSingle; __rt2: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slae2_';
        function slaebz_(__ijob: PLongInt; __nitmax: PLongInt; __N: PLongInt;
          __mmax: PLongInt; __minp: PLongInt; __nbmin: PLongInt;
          __abstol: PSingle; __reltol: PSingle; __pivmin: PSingle;
          __d__: PSingle; __E: PSingle; __e2: PSingle; __nval: PLongInt;
          __ab: PSingle; __c__: PSingle; __mout: PLongInt; __nab: PLongInt;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaebz_';
        function slaed0_(__icompq: PLongInt; __qsiz: PLongInt; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __Q: PSingle; __ldq: PLongInt;
          __qstore: PSingle; __ldqs: PLongInt; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed0_';
        function slaed1_(__N: PLongInt; __d__: PSingle; __Q: PSingle;
          __ldq: PLongInt; __indxq: PLongInt; __rho: PSingle;
          __cutpnt: PLongInt; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed1_';
        function slaed2_(__K: PLongInt; __N: PLongInt; __n1: PLongInt;
          __d__: PSingle; __Q: PSingle; __ldq: PLongInt; __indxq: PLongInt;
          __rho: PSingle; __z__: PSingle; __dlamda: PSingle; __w: PSingle;
          __q2: PSingle; __indx: PLongInt; __indxc: PLongInt; __indxp: PLongInt;
          __coltyp: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed2_';
        function slaed3_(__K: PLongInt; __N: PLongInt; __n1: PLongInt;
          __d__: PSingle; __Q: PSingle; __ldq: PLongInt; __rho: PSingle;
          __dlamda: PSingle; __q2: PSingle; __indx: PLongInt; __ctot: PLongInt;
          __w: PSingle; __S: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed3_';
        function slaed4_(__N: PLongInt; __i__: PLongInt; __d__: PSingle;
          __z__: PSingle; __delta: PSingle; __rho: PSingle; __dlam: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed4_';
        function slaed5_(__i__: PLongInt; __d__: PSingle; __z__: PSingle;
          __delta: PSingle; __rho: PSingle; __dlam: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slaed5_';
        function slaed6_(__kniter: PLongInt; __orgati: PLongInt; __rho: PSingle;
          __d__: PSingle; __z__: PSingle; __finit: PSingle; __tau: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed6_';
        function slaed7_(__icompq: PLongInt; __N: PLongInt; __qsiz: PLongInt;
          __tlvls: PLongInt; __curlvl: PLongInt; __curpbm: PLongInt;
          __d__: PSingle; __Q: PSingle; __ldq: PLongInt; __indxq: PLongInt;
          __rho: PSingle; __cutpnt: PLongInt; __qstore: PSingle;
          __qptr: PLongInt; __prmptr: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __givnum: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed7_';
        function slaed8_(__icompq: PLongInt; __K: PLongInt; __N: PLongInt;
          __qsiz: PLongInt; __d__: PSingle; __Q: PSingle; __ldq: PLongInt;
          __indxq: PLongInt; __rho: PSingle; __cutpnt: PLongInt; __z__: PSingle;
          __dlamda: PSingle; __q2: PSingle; __ldq2: PLongInt; __w: PSingle;
          __perm: PLongInt; __givptr: PLongInt; __givcol: PLongInt;
          __givnum: PSingle; __indxp: PLongInt; __indx: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed8_';
        function slaed9_(__K: PLongInt; __kstart: PLongInt; __kstop: PLongInt;
          __N: PLongInt; __d__: PSingle; __Q: PSingle; __ldq: PLongInt;
          __rho: PSingle; __dlamda: PSingle; __w: PSingle; __S: PSingle;
          __lds: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaed9_';
        function slaeda_(__N: PLongInt; __tlvls: PLongInt; __curlvl: PLongInt;
          __curpbm: PLongInt; __prmptr: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __givnum: PSingle;
          __Q: PSingle; __qptr: PLongInt; __z__: PSingle; __ztemp: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaeda_';
        function slaein_(__rightv: PLongInt; __noinit: PLongInt; __N: PLongInt;
          __h__: PSingle; __ldh: PLongInt; __wr: PSingle; __wi: PSingle;
          __vr: PSingle; __vi: PSingle; __B: PSingle; __ldb: PLongInt;
          __work: PSingle; __eps3: PSingle; __smlnum: PSingle;
          __bignum: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaein_';
        function slaev2_(__A: PSingle; __B: PSingle; __c__: PSingle;
          __rt1: PSingle; __rt2: PSingle; __cs1: PSingle; __sn1: PSingle)
          : Integer; cdecl; external libAccelerate name _PU + 'slaev2_';
        function slaexc_(__wantq: PLongInt; __N: PLongInt; __t: PSingle;
          __ldt: PLongInt; __Q: PSingle; __ldq: PLongInt; __j1: PLongInt;
          __n1: PLongInt; __n2: PLongInt; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slaexc_';
        function slag2_(__A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __safmin: PSingle; __scale1: PSingle;
          __scale2: PSingle; __wr1: PSingle; __wr2: PSingle; __wi: PSingle)
          : Integer; cdecl; external libAccelerate name _PU + 'slag2_';
        function slag2d_(__M: PLongInt; __N: PLongInt; __sa: PSingle;
          __ldsa: PLongInt; __A: PDouble; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slag2d_';
        function slags2_(__upper: PLongInt; __A1: PSingle; __a2: PSingle;
          __a3: PSingle; __b1: PSingle; __b2: PSingle; __b3: PSingle;
          __csu: PSingle; __snu: PSingle; __csv: PSingle; __snv: PSingle;
          __csq: PSingle; __snq: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slags2_';
        function slagtf_(__N: PLongInt; __A: PSingle; __lambda: PSingle;
          __B: PSingle; __c__: PSingle; __tol: PSingle; __d__: PSingle;
          __in: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slagtf_';
        function slagtm_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __alpha: PSingle; __dl: PSingle; __d__: PSingle;
          __du: PSingle; __X: PSingle; __ldx: PLongInt; __beta: PSingle;
          __B: PSingle; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slagtm_';
        function slagts_(__job: PLongInt; __N: PLongInt; __A: PSingle;
          __B: PSingle; __c__: PSingle; __d__: PSingle; __in: PLongInt;
          __Y: PSingle; __tol: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slagts_';
        function slagv2_(__A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __alphar: PSingle; __alphai: PSingle;
          __beta: PSingle; __csl: PSingle; __snl: PSingle; __csr: PSingle;
          __snr: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slagv2_';
        function slahqr_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: PSingle; __ldh: PLongInt;
          __wr: PSingle; __wi: PSingle; __iloz: PLongInt; __ihiz: PLongInt;
          __z__: PSingle; __ldz: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slahqr_';
        function slahr2_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __t: PSingle;
          __ldt: PLongInt; __Y: PSingle; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slahr2_';
        function slahrd_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __t: PSingle;
          __ldt: PLongInt; __Y: PSingle; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slahrd_';
        function slaic1_(__job: PLongInt; __J: PLongInt; __X: PSingle;
          __sest: PSingle; __w: PSingle; __gamma: PSingle; __sestpr: PSingle;
          __S: PSingle; __c__: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slaic1_';
        function slaisnan_(__sin1: PSingle; __sin2: PSingle): __CLPK_logical;
          cdecl; external libAccelerate name _PU + 'slaisnan_';
        function slaln2_(__ltrans: PLongInt; __na: PLongInt; __nw: PLongInt;
          __smin: PSingle; __ca: PSingle; __A: PSingle; __lda: PLongInt;
          __d1: PSingle; __d2: PSingle; __B: PSingle; __ldb: PLongInt;
          __wr: PSingle; __wi: PSingle; __X: PSingle; __ldx: PLongInt;
          __scale: PSingle; __xnorm: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaln2_';
        function slals0_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __nrhs: PLongInt; __B: PSingle; __ldb: PLongInt;
          __bx: PSingle; __ldbx: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __ldgcol: PLongInt; __givnum: PSingle;
          __ldgnum: PLongInt; __poles: PSingle; __difl: PSingle;
          __difr: PSingle; __z__: PSingle; __K: PLongInt; __c__: PSingle;
          __S: PSingle; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slals0_';
        function slalsa_(__icompq: PLongInt; __smlsiz: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __B: PSingle; __ldb: PLongInt; __bx: PSingle;
          __ldbx: PLongInt; __u: PSingle; __ldu: PLongInt; __vt: PSingle;
          __K: PLongInt; __difl: PSingle; __difr: PSingle; __z__: PSingle;
          __poles: PSingle; __givptr: PLongInt; __givcol: PLongInt;
          __ldgcol: PLongInt; __perm: PLongInt; __givnum: PSingle;
          __c__: PSingle; __S: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slalsa_';
        function slalsd_(__Uplo: MarshaledAString; __smlsiz: PLongInt;
          __N: PLongInt; __nrhs: PLongInt; __d__: PSingle; __E: PSingle;
          __B: PSingle; __ldb: PLongInt; __rcond: PSingle; __rank: PLongInt;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slalsd_';
        function slamrg_(__n1: PLongInt; __n2: PLongInt; __A: PSingle;
          __strd1: PLongInt; __strd2: PLongInt; __index: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'slamrg_';
        function slaneg_(__N: PLongInt; __d__: PSingle; __lld: PSingle;
          __sigma: PSingle; __pivmin: PSingle; __r__: PLongInt): __CLPK_integer;
          cdecl; external libAccelerate name _PU + 'slaneg_';
        function slangb_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slangb_';
        function slange_(__norm: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __work: PSingle): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'slange_';
        function slangt_(__norm: MarshaledAString; __N: PLongInt; __dl: PSingle;
          __d__: PSingle; __du: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slangt_';
        function slanhs_(__norm: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slanhs_';
        function slansb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slansb_';
        function slansf_(__norm: MarshaledAString; __transr: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slansf_';
        function slansp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PSingle; __work: PSingle): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'slansp_';
        function slanst_(__norm: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slanst_';
        function slansy_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __work: PSingle)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slansy_';
        function slantb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __K: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slantb_';
        function slantp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slantp_';
        function slantr_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __work: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slantr_';
        function slanv2_(__A: PSingle; __B: PSingle; __c__: PSingle;
          __d__: PSingle; __rt1r: PSingle; __rt1i: PSingle; __rt2r: PSingle;
          __rt2i: PSingle; __cs: PSingle; __sn: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slanv2_';
        function slapll_(__N: PLongInt; __X: PSingle; __incX: PLongInt;
          __Y: PSingle; __incY: PLongInt; __ssmin: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slapll_';
        function slapmt_(__forwrd: PLongInt; __M: PLongInt; __N: PLongInt;
          __X: PSingle; __ldx: PLongInt; __K: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slapmt_';
        function slapy2_(__X: PSingle; __Y: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slapy2_';
        function slapy3_(__X: PSingle; __Y: PSingle; __z__: PSingle)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slapy3_';
        function slaqgb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: PSingle; __ldab: PLongInt; __r__: PSingle;
          __c__: PSingle; __rowcnd: PSingle; __colcnd: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'slaqgb_';
        function slaqge_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __r__: PSingle; __c__: PSingle; __rowcnd: PSingle;
          __colcnd: PSingle; __amax: PSingle; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'slaqge_';
        function slaqp2_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __A: PSingle; __lda: PLongInt; __jpvt: PLongInt; __tau: PSingle;
          __vn1: PSingle; __vn2: PSingle; __work: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slaqp2_';
        function slaqps_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: PSingle; __lda: PLongInt;
          __jpvt: PLongInt; __tau: PSingle; __vn1: PSingle; __vn2: PSingle;
          __auxv: PSingle; __F: PSingle; __ldf: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaqps_';
        function slaqr0_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: PSingle; __ldh: PLongInt;
          __wr: PSingle; __wi: PSingle; __iloz: PLongInt; __ihiz: PLongInt;
          __z__: PSingle; __ldz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaqr0_';
        function slaqr1_(__N: PLongInt; __h__: PSingle; __ldh: PLongInt;
          __sr1: PSingle; __si1: PSingle; __sr2: PSingle; __si2: PSingle;
          __v: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slaqr1_';
        function slaqr2_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: PSingle;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: PSingle;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sr: PSingle;
          __si: PSingle; __v: PSingle; __ldv: PLongInt; __nh: PLongInt;
          __t: PSingle; __ldt: PLongInt; __nv: PLongInt; __wv: PSingle;
          __ldwv: PLongInt; __work: PSingle; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaqr2_';
        function slaqr3_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: PSingle;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: PSingle;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sr: PSingle;
          __si: PSingle; __v: PSingle; __ldv: PLongInt; __nh: PLongInt;
          __t: PSingle; __ldt: PLongInt; __nv: PLongInt; __wv: PSingle;
          __ldwv: PLongInt; __work: PSingle; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaqr3_';
        function slaqr4_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: PSingle; __ldh: PLongInt;
          __wr: PSingle; __wi: PSingle; __iloz: PLongInt; __ihiz: PLongInt;
          __z__: PSingle; __ldz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaqr4_';
        function slaqr5_(__wantt: PLongInt; __wantz: PLongInt;
          __kacc22: PLongInt; __N: PLongInt; __ktop: PLongInt; __kbot: PLongInt;
          __nshfts: PLongInt; __sr: PSingle; __si: PSingle; __h__: PSingle;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: PSingle;
          __ldz: PLongInt; __v: PSingle; __ldv: PLongInt; __u: PSingle;
          __ldu: PLongInt; __nv: PLongInt; __wv: PSingle; __ldwv: PLongInt;
          __nh: PLongInt; __wh: PSingle; __ldwh: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaqr5_';
        function slaqsb_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PSingle; __ldab: PLongInt; __S: PSingle;
          __scond: PSingle; __amax: PSingle; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'slaqsb_';
        function slaqsp_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __S: PSingle; __scond: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'slaqsp_';
        function slaqsy_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __S: PSingle; __scond: PSingle; __amax: PSingle;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'slaqsy_';
        function slaqtr_(__ltran: PLongInt; __l__CLPK_real: PLongInt;
          __N: PLongInt; __t: PSingle; __ldt: PLongInt; __B: PSingle;
          __w: PSingle; __scale: PSingle; __X: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slaqtr_';
        function slar1v_(__N: PLongInt; __b1: PLongInt; __bn: PLongInt;
          __lambda: PSingle; __d__: PSingle; __L: PSingle; __ld: PSingle;
          __lld: PSingle; __pivmin: PSingle; __gaptol: PSingle; __z__: PSingle;
          __wantnc: PLongInt; __negcnt: PLongInt; __ztz: PSingle;
          __mingma: PSingle; __r__: PLongInt; __isuppz: PLongInt;
          __nrminv: PSingle; __resid: PSingle; __rqcorr: PSingle;
          __work: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slar1v_';
        function slar2v_(__N: PLongInt; __X: PSingle; __Y: PSingle;
          __z__: PSingle; __incX: PLongInt; __c__: PSingle; __S: PSingle;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slar2v_';
        function slarf_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: PSingle; __incv: PLongInt; __tau: PSingle; __c__: PSingle;
          __ldc: PLongInt; __work: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slarf_';
        function slarfb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __v: PSingle; __ldv: PLongInt;
          __t: PSingle; __ldt: PLongInt; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarfb_';
        function slarfg_(__N: PLongInt; __alpha: PSingle; __X: PSingle;
          __incX: PLongInt; __tau: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slarfg_';
        function slarfp_(__N: PLongInt; __alpha: PSingle; __X: PSingle;
          __incX: PLongInt; __tau: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slarfp_';
        function slarft_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: PSingle; __ldv: PLongInt;
          __tau: PSingle; __t: PSingle; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarft_';
        function slarfx_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: PSingle; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slarfx_';
        function slargv_(__N: PLongInt; __X: PSingle; __incX: PLongInt;
          __Y: PSingle; __incY: PLongInt; __c__: PSingle; __incc: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slargv_';
        function slarnv_(__idist: PLongInt; __iseed: PLongInt; __N: PLongInt;
          __X: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slarnv_';
        function slarra_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __e2: PSingle; __spltol: PSingle; __tnrm: PSingle; __nsplit: PLongInt;
          __isplit: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarra_';
        function slarrb_(__N: PLongInt; __d__: PSingle; __lld: PSingle;
          __ifirst: PLongInt; __ilast: PLongInt; __rtol1: PSingle;
          __rtol2: PSingle; __offset: PLongInt; __w: PSingle; __wgap: PSingle;
          __werr: PSingle; __work: PSingle; __iwork: PLongInt;
          __pivmin: PSingle; __spdiam: PSingle; __twist: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarrb_';
        function slarrc_(__jobt: MarshaledAString; __N: PLongInt; __vl: PSingle;
          __vu: PSingle; __d__: PSingle; __E: PSingle; __pivmin: PSingle;
          __eigcnt: PLongInt; __lcnt: PLongInt; __rcnt: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarrc_';
        function slarrd_(__range: MarshaledAString; __Order: MarshaledAString;
          __N: PLongInt; __vl: PSingle; __vu: PSingle; __il: PLongInt;
          __iu: PLongInt; __gers: PSingle; __reltol: PSingle; __d__: PSingle;
          __E: PSingle; __e2: PSingle; __pivmin: PSingle; __nsplit: PLongInt;
          __isplit: PLongInt; __M: PLongInt; __w: PSingle; __werr: PSingle;
          __wl: PSingle; __wu: PSingle; __iblock: PLongInt; __indexw: PLongInt;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarrd_';
        function slarre_(__range: MarshaledAString; __N: PLongInt;
          __vl: PSingle; __vu: PSingle; __il: PLongInt; __iu: PLongInt;
          __d__: PSingle; __E: PSingle; __e2: PSingle; __rtol1: PSingle;
          __rtol2: PSingle; __spltol: PSingle; __nsplit: PLongInt;
          __isplit: PLongInt; __M: PLongInt; __w: PSingle; __werr: PSingle;
          __wgap: PSingle; __iblock: PLongInt; __indexw: PLongInt;
          __gers: PSingle; __pivmin: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarre_';
        function slarrf_(__N: PLongInt; __d__: PSingle; __L: PSingle;
          __ld: PSingle; __clstrt: PLongInt; __clend: PLongInt; __w: PSingle;
          __wgap: PSingle; __werr: PSingle; __spdiam: PSingle;
          __clgapl: PSingle; __clgapr: PSingle; __pivmin: PSingle;
          __sigma: PSingle; __dplus: PSingle; __lplus: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarrf_';
        function slarrj_(__N: PLongInt; __d__: PSingle; __e2: PSingle;
          __ifirst: PLongInt; __ilast: PLongInt; __rtol: PSingle;
          __offset: PLongInt; __w: PSingle; __werr: PSingle; __work: PSingle;
          __iwork: PLongInt; __pivmin: PSingle; __spdiam: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarrj_';
        function slarrk_(__N: PLongInt; __iw: PLongInt; __gl: PSingle;
          __gu: PSingle; __d__: PSingle; __e2: PSingle; __pivmin: PSingle;
          __reltol: PSingle; __w: PSingle; __werr: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slarrk_';
        function slarrr_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarrr_';
        function slarrv_(__N: PLongInt; __vl: PSingle; __vu: PSingle;
          __d__: PSingle; __L: PSingle; __pivmin: PSingle; __isplit: PLongInt;
          __M: PLongInt; __dol: PLongInt; __dou: PLongInt; __minrgp: PSingle;
          __rtol1: PSingle; __rtol2: PSingle; __w: PSingle; __werr: PSingle;
          __wgap: PSingle; __iblock: PLongInt; __indexw: PLongInt;
          __gers: PSingle; __z__: PSingle; __ldz: PLongInt; __isuppz: PLongInt;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarrv_';
        function slarscl2_(__M: PLongInt; __N: PLongInt; __d__: PSingle;
          __X: PSingle; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarscl2_';
        function slartg_(__F: PSingle; __g: PSingle; __cs: PSingle;
          __sn: PSingle; __r__: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slartg_';
        function slartv_(__N: PLongInt; __X: PSingle; __incX: PLongInt;
          __Y: PSingle; __incY: PLongInt; __c__: PSingle; __S: PSingle;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slartv_';
        function slaruv_(__iseed: PLongInt; __N: PLongInt; __X: PSingle)
          : Integer; cdecl; external libAccelerate name _PU + 'slaruv_';
        function slarz_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __L: PLongInt; __v: PSingle; __incv: PLongInt; __tau: PSingle;
          __c__: PSingle; __ldc: PLongInt; __work: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slarz_';
        function slarzb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __L: PLongInt; __v: PSingle;
          __ldv: PLongInt; __t: PSingle; __ldt: PLongInt; __c__: PSingle;
          __ldc: PLongInt; __work: PSingle; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarzb_';
        function slarzt_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: PSingle; __ldv: PLongInt;
          __tau: PSingle; __t: PSingle; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slarzt_';
        function slas2_(__F: PSingle; __g: PSingle; __h__: PSingle;
          __ssmin: PSingle; __ssmax: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slas2_';
        function slascl_(__type__: MarshaledAString; __KL: PLongInt;
          __KU: PLongInt; __cfrom: PSingle; __cto: PSingle; __M: PLongInt;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slascl_';
        function slascl2_(__M: PLongInt; __N: PLongInt; __d__: PSingle;
          __X: PSingle; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slascl2_';
        function slasd0_(__N: PLongInt; __sqre: PLongInt; __d__: PSingle;
          __E: PSingle; __u: PSingle; __ldu: PLongInt; __vt: PSingle;
          __ldvt: PLongInt; __smlsiz: PLongInt; __iwork: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd0_';
        function slasd1_(__nl: PLongInt; __NR: PLongInt; __sqre: PLongInt;
          __d__: PSingle; __alpha: PSingle; __beta: PSingle; __u: PSingle;
          __ldu: PLongInt; __vt: PSingle; __ldvt: PLongInt; __idxq: PLongInt;
          __iwork: PLongInt; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd1_';
        function slasd2_(__nl: PLongInt; __NR: PLongInt; __sqre: PLongInt;
          __K: PLongInt; __d__: PSingle; __z__: PSingle; __alpha: PSingle;
          __beta: PSingle; __u: PSingle; __ldu: PLongInt; __vt: PSingle;
          __ldvt: PLongInt; __dsigma: PSingle; __u2: PSingle; __ldu2: PLongInt;
          __vt2: PSingle; __ldvt2: PLongInt; __idxp: PLongInt; __idx: PLongInt;
          __idxc: PLongInt; __idxq: PLongInt; __coltyp: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd2_';
        function slasd3_(__nl: PLongInt; __NR: PLongInt; __sqre: PLongInt;
          __K: PLongInt; __d__: PSingle; __Q: PSingle; __ldq: PLongInt;
          __dsigma: PSingle; __u: PSingle; __ldu: PLongInt; __u2: PSingle;
          __ldu2: PLongInt; __vt: PSingle; __ldvt: PLongInt; __vt2: PSingle;
          __ldvt2: PLongInt; __idxc: PLongInt; __ctot: PLongInt; __z__: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd3_';
        function slasd4_(__N: PLongInt; __i__: PLongInt; __d__: PSingle;
          __z__: PSingle; __delta: PSingle; __rho: PSingle; __sigma: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd4_';
        function slasd5_(__i__: PLongInt; __d__: PSingle; __z__: PSingle;
          __delta: PSingle; __rho: PSingle; __dsigma: PSingle; __work: PSingle)
          : Integer; cdecl; external libAccelerate name _PU + 'slasd5_';
        function slasd6_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __d__: PSingle; __vf: PSingle; __vl: PSingle;
          __alpha: PSingle; __beta: PSingle; __idxq: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __ldgcol: PLongInt;
          __givnum: PSingle; __ldgnum: PLongInt; __poles: PSingle;
          __difl: PSingle; __difr: PSingle; __z__: PSingle; __K: PLongInt;
          __c__: PSingle; __S: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd6_';
        function slasd7_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __K: PLongInt; __d__: PSingle; __z__: PSingle;
          __zw: PSingle; __vf: PSingle; __vfw: PSingle; __vl: PSingle;
          __vlw: PSingle; __alpha: PSingle; __beta: PSingle; __dsigma: PSingle;
          __idx: PLongInt; __idxp: PLongInt; __idxq: PLongInt; __perm: PLongInt;
          __givptr: PLongInt; __givcol: PLongInt; __ldgcol: PLongInt;
          __givnum: PSingle; __ldgnum: PLongInt; __c__: PSingle; __S: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd7_';
        function slasd8_(__icompq: PLongInt; __K: PLongInt; __d__: PSingle;
          __z__: PSingle; __vf: PSingle; __vl: PSingle; __difl: PSingle;
          __difr: PSingle; __lddifr: PLongInt; __dsigma: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasd8_';
        function slasda_(__icompq: PLongInt; __smlsiz: PLongInt; __N: PLongInt;
          __sqre: PLongInt; __d__: PSingle; __E: PSingle; __u: PSingle;
          __ldu: PLongInt; __vt: PSingle; __K: PLongInt; __difl: PSingle;
          __difr: PSingle; __z__: PSingle; __poles: PSingle; __givptr: PLongInt;
          __givcol: PLongInt; __ldgcol: PLongInt; __perm: PLongInt;
          __givnum: PSingle; __c__: PSingle; __S: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasda_';
        function slasdq_(__Uplo: MarshaledAString; __sqre: PLongInt;
          __N: PLongInt; __ncvt: PLongInt; __nru: PLongInt; __ncc: PLongInt;
          __d__: PSingle; __E: PSingle; __vt: PSingle; __ldvt: PLongInt;
          __u: PSingle; __ldu: PLongInt; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasdq_';
        function slasdt_(__N: PLongInt; __lvl: PLongInt; __nd: PLongInt;
          __inode: PLongInt; __ndiml: PLongInt; __ndimr: PLongInt;
          __msub: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasdt_';
        function slaset_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: PSingle; __beta: PSingle; __A: PSingle; __lda: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slaset_';
        function slasq1_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasq1_';
        function slasq2_(__N: PLongInt; __z__: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slasq2_';
        function slasq3_(__I0: PLongInt; __n0: PLongInt; __z__: PSingle;
          __pp: PLongInt; __dmin__: PSingle; __sigma: PSingle; __desig: PSingle;
          __qmax: PSingle; __nfail: PLongInt; __iter: PLongInt;
          __ndiv: PLongInt; __ieee: PLongInt; __ttype: PLongInt;
          __dmin1: PSingle; __dmin2: PSingle; __dn: PSingle; __dn1: PSingle;
          __dn2: PSingle; __g: PSingle; __tau: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slasq3_';
        function slasq4_(__I0: PLongInt; __n0: PLongInt; __z__: PSingle;
          __pp: PLongInt; __n0in: PLongInt; __dmin__: PSingle; __dmin1: PSingle;
          __dmin2: PSingle; __dn: PSingle; __dn1: PSingle; __dn2: PSingle;
          __tau: PSingle; __ttype: PLongInt; __g: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slasq4_';
        function slasq5_(__I0: PLongInt; __n0: PLongInt; __z__: PSingle;
          __pp: PLongInt; __tau: PSingle; __dmin__: PSingle; __dmin1: PSingle;
          __dmin2: PSingle; __dn: PSingle; __dnm1: PSingle; __dnm2: PSingle;
          __ieee: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasq5_';
        function slasq6_(__I0: PLongInt; __n0: PLongInt; __z__: PSingle;
          __pp: PLongInt; __dmin__: PSingle; __dmin1: PSingle; __dmin2: PSingle;
          __dn: PSingle; __dnm1: PSingle; __dnm2: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slasq6_';
        function slasr_(__Side: MarshaledAString; __pivot: MarshaledAString;
          __direct: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __c__: PSingle; __S: PSingle; __A: PSingle; __lda: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'slasr_';
        function slasrt_(__ID: MarshaledAString; __N: PLongInt; __d__: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasrt_';
        function slassq_(__N: PLongInt; __X: PSingle; __incX: PLongInt;
          __scale: PSingle; __sumsq: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slassq_';
        function slasv2_(__F: PSingle; __g: PSingle; __h__: PSingle;
          __ssmin: PSingle; __ssmax: PSingle; __snr: PSingle; __csr: PSingle;
          __snl: PSingle; __csl: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slasv2_';
        function slaswp_(__N: PLongInt; __A: PSingle; __lda: PLongInt;
          __k1: PLongInt; __k2: PLongInt; __ipiv: PLongInt; __incX: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slaswp_';
        function slasy2_(__ltranl: PLongInt; __ltranr: PLongInt;
          __isgn: PLongInt; __n1: PLongInt; __n2: PLongInt; __tl: PSingle;
          __ldtl: PLongInt; __tr: PSingle; __ldtr: PLongInt; __B: PSingle;
          __ldb: PLongInt; __scale: PSingle; __X: PSingle; __ldx: PLongInt;
          __xnorm: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slasy2_';
        function slasyf_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: PSingle; __lda: PLongInt;
          __ipiv: PLongInt; __w: PSingle; __ldw: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slasyf_';
        function slatbs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PSingle; __ldab: PLongInt; __X: PSingle;
          __scale: PSingle; __cnorm: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slatbs_';
        function slatdf_(__ijob: PLongInt; __N: PLongInt; __z__: PSingle;
          __ldz: PLongInt; __rhs: PSingle; __rdsum: PSingle; __rdscal: PSingle;
          __ipiv: PLongInt; __jpiv: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slatdf_';
        function slatps_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __Ap: PSingle; __X: PSingle; __scale: PSingle; __cnorm: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slatps_';
        function slatrd_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __A: PSingle; __lda: PLongInt; __E: PSingle;
          __tau: PSingle; __w: PSingle; __ldw: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slatrd_';
        function slatrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __X: PSingle; __scale: PSingle;
          __cnorm: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slatrs_';
        function slatrz_(__M: PLongInt; __N: PLongInt; __L: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle)
          : Integer; cdecl; external libAccelerate name _PU + 'slatrz_';
        function slatzm_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: PSingle; __incv: PLongInt; __tau: PSingle; __C1: PSingle;
          __c2: PSingle; __ldc: PLongInt; __work: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slatzm_';
        function slauu2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slauu2_';
        function slauum_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slauum_';
        function sopgtr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __tau: PSingle; __Q: PSingle; __ldq: PLongInt; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sopgtr_';
        function sopmtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __Ap: PSingle; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sopmtr_';
        function sorg2l_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorg2l_';
        function sorg2r_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorg2r_';
        function sorgbr_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: PSingle; __lda: PLongInt; __tau: PSingle;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorgbr_';
        function sorghr_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorghr_';
        function sorgl2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorgl2_';
        function sorglq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorglq_';
        function sorgql_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorgql_';
        function sorgqr_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorgqr_';
        function sorgr2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorgr2_';
        function sorgrq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorgrq_';
        function sorgtr_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorgtr_';
        function sorm2l_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorm2l_';
        function sorm2r_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorm2r_';
        function sormbr_(__vect: MarshaledAString; __Side: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: PSingle; __lda: PLongInt; __tau: PSingle;
          __c__: PSingle; __ldc: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormbr_';
        function sormhr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __c__: PSingle;
          __ldc: PLongInt; __work: PSingle; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sormhr_';
        function sorml2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sorml2_';
        function sormlq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormlq_';
        function sormql_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormql_';
        function sormqr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormqr_';
        function sormr2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormr2_';
        function sormr3_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __c__: PSingle;
          __ldc: PLongInt; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormr3_';
        function sormrq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormrq_';
        function sormrz_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: PSingle; __lda: PLongInt; __tau: PSingle; __c__: PSingle;
          __ldc: PLongInt; __work: PSingle; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sormrz_';
        function sormtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __c__: PSingle; __ldc: PLongInt;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sormtr_';
        function spbcon_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PSingle; __ldab: PLongInt; __anorm: PSingle;
          __rcond: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spbcon_';
        function spbequ_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PSingle; __ldab: PLongInt; __S: PSingle;
          __scond: PSingle; __amax: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spbequ_';
        function spbrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __afb: PSingle; __ldafb: PLongInt; __B: PSingle; __ldb: PLongInt;
          __X: PSingle; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spbrfs_';
        function spbstf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PSingle; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'spbstf_';
        function spbsv_(__Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: PSingle; __ldab: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spbsv_';
        function spbsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __nrhs: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __afb: PSingle; __ldafb: PLongInt;
          __equed: MarshaledAString; __S: PSingle; __B: PSingle;
          __ldb: PLongInt; __X: PSingle; __ldx: PLongInt; __rcond: PSingle;
          __ferr: PSingle; __berr: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spbsvx_';
        function spbtf2_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PSingle; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'spbtf2_';
        function spbtrf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: PSingle; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'spbtrf_';
        function spbtrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __B: PSingle; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spbtrs_';
        function spftrf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spftrf_';
        function spftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spftri_';
        function spftrs_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PSingle; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spftrs_';
        function spocon_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spocon_';
        function spoequ_(__N: PLongInt; __A: PSingle; __lda: PLongInt;
          __S: PSingle; __scond: PSingle; __amax: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'spoequ_';
        function spoequb_(__N: PLongInt; __A: PSingle; __lda: PLongInt;
          __S: PSingle; __scond: PSingle; __amax: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'spoequb_';
        function sporfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __af: PSingle;
          __ldaf: PLongInt; __B: PSingle; __ldb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __ferr: PSingle; __berr: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sporfs_';
        function sposv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sposv_';
        function sposvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PSingle; __lda: PLongInt;
          __af: PSingle; __ldaf: PLongInt; __equed: MarshaledAString;
          __S: PSingle; __B: PSingle; __ldb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sposvx_';
        function spotf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spotf2_';
        function spotrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spotrf_';
        function spotri_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spotri_';
        function spotrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spotrs_';
        function sppcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __anorm: PSingle; __rcond: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sppcon_';
        function sppequ_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __S: PSingle; __scond: PSingle; __amax: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sppequ_';
        function spprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PSingle; __afp: PSingle; __B: PSingle;
          __ldb: PLongInt; __X: PSingle; __ldx: PLongInt; __ferr: PSingle;
          __berr: PSingle; __work: PSingle; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'spprfs_';
        function sppsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PSingle; __B: PSingle; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sppsv_';
        function sppsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: PSingle; __afp: PSingle;
          __equed: MarshaledAString; __S: PSingle; __B: PSingle;
          __ldb: PLongInt; __X: PSingle; __ldx: PLongInt; __rcond: PSingle;
          __ferr: PSingle; __berr: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sppsvx_';
        function spptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spptrf_';
        function spptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spptri_';
        function spptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PSingle; __B: PSingle; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spptrs_';
        function spstf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spstf2_';
        function spstrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spstrf_';
        function sptcon_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __anorm: PSingle; __rcond: PSingle; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sptcon_';
        function spteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __z__: PSingle; __ldz: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spteqr_';
        function sptrfs_(__N: PLongInt; __nrhs: PLongInt; __d__: PSingle;
          __E: PSingle; __DF: PSingle; __ef: PSingle; __B: PSingle;
          __ldb: PLongInt; __X: PSingle; __ldx: PLongInt; __ferr: PSingle;
          __berr: PSingle; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sptrfs_';
        function sptsv_(__N: PLongInt; __nrhs: PLongInt; __d__: PSingle;
          __E: PSingle; __B: PSingle; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sptsv_';
        function sptsvx_(__fact: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PSingle; __E: PSingle; __DF: PSingle;
          __ef: PSingle; __B: PSingle; __ldb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sptsvx_';
        function spttrf_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'spttrf_';
        function spttrs_(__N: PLongInt; __nrhs: PLongInt; __d__: PSingle;
          __E: PSingle; __B: PSingle; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'spttrs_';
        function sptts2_(__N: PLongInt; __nrhs: PLongInt; __d__: PSingle;
          __E: PSingle; __B: PSingle; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sptts2_';
        function srscl_(__N: PLongInt; __sa: PSingle; __sx: PSingle;
          __incX: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'srscl_';
        function ssbev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __w: PSingle; __z__: PSingle; __ldz: PLongInt; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssbev_';
        function ssbevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __w: PSingle; __z__: PSingle; __ldz: PLongInt; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssbevd_';
        function ssbevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: PSingle; __ldab: PLongInt; __Q: PSingle; __ldq: PLongInt;
          __vl: PSingle; __vu: PSingle; __il: PLongInt; __iu: PLongInt;
          __abstol: PSingle; __M: PLongInt; __w: PSingle; __z__: PSingle;
          __ldz: PLongInt; __work: PSingle; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssbevx_';
        function ssbgst_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __bb: PSingle; __ldbb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssbgst_';
        function ssbgv_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __bb: PSingle; __ldbb: PLongInt; __w: PSingle;
          __z__: PSingle; __ldz: PLongInt; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ssbgv_';
        function ssbgvd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: PSingle;
          __ldab: PLongInt; __bb: PSingle; __ldbb: PLongInt; __w: PSingle;
          __z__: PSingle; __ldz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'ssbgvd_';
        function ssbgvx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __ka: PLongInt;
          __kb: PLongInt; __ab: PSingle; __ldab: PLongInt; __bb: PSingle;
          __ldbb: PLongInt; __Q: PSingle; __ldq: PLongInt; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: PSingle; __ldz: PLongInt;
          __work: PSingle; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssbgvx_';
        function ssbtrd_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: PSingle; __ldab: PLongInt;
          __d__: PSingle; __E: PSingle; __Q: PSingle; __ldq: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssbtrd_';
        function ssfrk_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __N: PLongInt; __K: PLongInt;
          __alpha: PSingle; __A: PSingle; __lda: PLongInt; __beta: PSingle;
          __c__: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'ssfrk_';
        function sspcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sspcon_';
        function sspev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PSingle; __w: PSingle; __z__: PSingle;
          __ldz: PLongInt; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sspev_';
        function sspevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PSingle; __w: PSingle; __z__: PSingle;
          __ldz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sspevd_';
        function sspevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: PSingle; __ldz: PLongInt;
          __work: PSingle; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sspevx_';
        function sspgst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PSingle; __bp: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'sspgst_';
        function sspgv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle; __bp: PSingle;
          __w: PSingle; __z__: PSingle; __ldz: PLongInt; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sspgv_';
        function sspgvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle; __bp: PSingle;
          __w: PSingle; __z__: PSingle; __ldz: PLongInt; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sspgvd_';
        function sspgvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __Ap: PSingle; __bp: PSingle; __vl: PSingle; __vu: PSingle;
          __il: PLongInt; __iu: PLongInt; __abstol: PSingle; __M: PLongInt;
          __w: PSingle; __z__: PSingle; __ldz: PLongInt; __work: PSingle;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sspgvx_';
        function ssprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PSingle; __afp: PSingle; __ipiv: PLongInt;
          __B: PSingle; __ldb: PLongInt; __X: PSingle; __ldx: PLongInt;
          __ferr: PSingle; __berr: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssprfs_';
        function sspsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PSingle; __ipiv: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sspsv_';
        function sspsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: PSingle; __afp: PSingle;
          __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __rcond: PSingle; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sspsvx_';
        function ssptrd_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __d__: PSingle; __E: PSingle; __tau: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ssptrd_';
        function ssptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssptrf_';
        function ssptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __ipiv: PLongInt; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssptri_';
        function ssptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: PSingle; __ipiv: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssptrs_';
        function sstebz_(__range: MarshaledAString; __Order: MarshaledAString;
          __N: PLongInt; __vl: PSingle; __vu: PSingle; __il: PLongInt;
          __iu: PLongInt; __abstol: PSingle; __d__: PSingle; __E: PSingle;
          __M: PLongInt; __nsplit: PLongInt; __w: PSingle; __iblock: PLongInt;
          __isplit: PLongInt; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sstebz_';
        function sstedc_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __z__: PSingle; __ldz: PLongInt;
          __work: PSingle; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sstedc_';
        function sstegr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PSingle; __E: PSingle; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: PSingle; __ldz: PLongInt;
          __isuppz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sstegr_';
        function sstein_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __M: PLongInt; __w: PSingle; __iblock: PLongInt; __isplit: PLongInt;
          __z__: PSingle; __ldz: PLongInt; __work: PSingle; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sstein_';
        function sstemr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PSingle; __E: PSingle; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __M: PLongInt;
          __w: PSingle; __z__: PSingle; __ldz: PLongInt; __nzc: PLongInt;
          __isuppz: PLongInt; __tryrac: PLongInt; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sstemr_';
        function ssteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __z__: PSingle; __ldz: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssteqr_';
        function ssterf_(__N: PLongInt; __d__: PSingle; __E: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssterf_';
        function sstev_(__jobz: MarshaledAString; __N: PLongInt; __d__: PSingle;
          __E: PSingle; __z__: PSingle; __ldz: PLongInt; __work: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sstev_';
        function sstevd_(__jobz: MarshaledAString; __N: PLongInt;
          __d__: PSingle; __E: PSingle; __z__: PSingle; __ldz: PLongInt;
          __work: PSingle; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sstevd_';
        function sstevr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PSingle; __E: PSingle; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: PSingle; __ldz: PLongInt;
          __isuppz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'sstevr_';
        function sstevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PSingle; __E: PSingle; __vl: PSingle;
          __vu: PSingle; __il: PLongInt; __iu: PLongInt; __abstol: PSingle;
          __M: PLongInt; __w: PSingle; __z__: PSingle; __ldz: PLongInt;
          __work: PSingle; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'sstevx_';
        function ssycon_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __ipiv: PLongInt; __anorm: PSingle; __rcond: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssycon_';
        function ssyequb_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __S: PSingle; __scond: PSingle; __amax: PSingle;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssyequb_';
        function ssyev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __w: PSingle;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssyev_';
        function ssyevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __w: PSingle;
          __work: PSingle; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssyevd_';
        function ssyevr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __vl: PSingle; __vu: PSingle; __il: PLongInt;
          __iu: PLongInt; __abstol: PSingle; __M: PLongInt; __w: PSingle;
          __z__: PSingle; __ldz: PLongInt; __isuppz: PLongInt; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssyevr_';
        function ssyevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __vl: PSingle; __vu: PSingle; __il: PLongInt;
          __iu: PLongInt; __abstol: PSingle; __M: PLongInt; __w: PSingle;
          __z__: PSingle; __ldz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'ssyevx_';
        function ssygs2_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssygs2_';
        function ssygst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssygst_';
        function ssygv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __B: PSingle; __ldb: PLongInt; __w: PSingle;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssygv_';
        function ssygvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __B: PSingle; __ldb: PLongInt; __w: PSingle;
          __work: PSingle; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssygvd_';
        function ssygvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __vl: PSingle; __vu: PSingle; __il: PLongInt; __iu: PLongInt;
          __abstol: PSingle; __M: PLongInt; __w: PSingle; __z__: PSingle;
          __ldz: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'ssygvx_';
        function ssyrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __af: PSingle;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: PSingle; __ldb: PLongInt;
          __X: PSingle; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssyrfs_';
        function ssysv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __ipiv: PLongInt;
          __B: PSingle; __ldb: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssysv_';
        function ssysvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: PSingle; __lda: PLongInt;
          __af: PSingle; __ldaf: PLongInt; __ipiv: PLongInt; __B: PSingle;
          __ldb: PLongInt; __X: PSingle; __ldx: PLongInt; __rcond: PSingle;
          __ferr: PSingle; __berr: PSingle; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssysvx_';
        function ssytd2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tau: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssytd2_';
        function ssytf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssytf2_';
        function ssytrd_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __d__: PSingle; __E: PSingle; __tau: PSingle;
          __work: PSingle; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssytrd_';
        function ssytrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __ipiv: PLongInt; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssytrf_';
        function ssytri_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __ipiv: PLongInt; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ssytri_';
        function ssytrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: PSingle; __lda: PLongInt; __ipiv: PLongInt;
          __B: PSingle; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ssytrs_';
        function stbcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: PSingle; __ldab: PLongInt; __rcond: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stbcon_';
        function stbrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: PSingle; __ldab: PLongInt; __B: PSingle;
          __ldb: PLongInt; __X: PSingle; __ldx: PLongInt; __ferr: PSingle;
          __berr: PSingle; __work: PSingle; __iwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'stbrfs_';
        function stbtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: PSingle; __ldab: PLongInt; __B: PSingle;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stbtrs_';
        function stfsm_(__transr: MarshaledAString; __Side: MarshaledAString;
          __Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: PSingle; __A: PSingle; __B: PSingle; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'stfsm_';
        function stftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stftri_';
        function stfttp_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: PSingle; __Ap: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'stfttp_';
        function stfttr_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: PSingle; __A: PSingle; __lda: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stfttr_';
        function stgevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __S: PSingle; __lds: PLongInt;
          __P: PSingle; __ldp: PLongInt; __vl: PSingle; __ldvl: PLongInt;
          __vr: PSingle; __ldvr: PLongInt; __mm: PLongInt; __M: PLongInt;
          __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stgevc_';
        function stgex2_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __Q: PSingle; __ldq: PLongInt; __z__: PSingle; __ldz: PLongInt;
          __j1: PLongInt; __n1: PLongInt; __n2: PLongInt; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stgex2_';
        function stgexc_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __Q: PSingle; __ldq: PLongInt; __z__: PSingle; __ldz: PLongInt;
          __ifst: PLongInt; __ilst: PLongInt; __work: PSingle;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stgexc_';
        function stgsen_(__ijob: PLongInt; __wantq: PLongInt; __wantz: PLongInt;
          __select: PLongInt; __N: PLongInt; __A: PSingle; __lda: PLongInt;
          __B: PSingle; __ldb: PLongInt; __alphar: PSingle; __alphai: PSingle;
          __beta: PSingle; __Q: PSingle; __ldq: PLongInt; __z__: PSingle;
          __ldz: PLongInt; __M: PLongInt; __pl: PSingle; __pr: PSingle;
          __dif: PSingle; __work: PSingle; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stgsen_';
        function stgsja_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: PSingle; __lda: PLongInt;
          __B: PSingle; __ldb: PLongInt; __tola: PSingle; __tolb: PSingle;
          __alpha: PSingle; __beta: PSingle; __u: PSingle; __ldu: PLongInt;
          __v: PSingle; __ldv: PLongInt; __Q: PSingle; __ldq: PLongInt;
          __work: PSingle; __ncycle: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'stgsja_';
        function stgsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __A: PSingle; __lda: PLongInt;
          __B: PSingle; __ldb: PLongInt; __vl: PSingle; __ldvl: PLongInt;
          __vr: PSingle; __ldvr: PLongInt; __S: PSingle; __dif: PSingle;
          __mm: PLongInt; __M: PLongInt; __work: PSingle; __lwork: PLongInt;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stgsna_';
        function stgsy2_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: PSingle; __lda: PLongInt;
          __B: PSingle; __ldb: PLongInt; __c__: PSingle; __ldc: PLongInt;
          __d__: PSingle; __ldd: PLongInt; __E: PSingle; __lde: PLongInt;
          __F: PSingle; __ldf: PLongInt; __scale: PSingle; __rdsum: PSingle;
          __rdscal: PSingle; __iwork: PLongInt; __pq: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stgsy2_';
        function stgsyl_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: PSingle; __lda: PLongInt;
          __B: PSingle; __ldb: PLongInt; __c__: PSingle; __ldc: PLongInt;
          __d__: PSingle; __ldd: PLongInt; __E: PSingle; __lde: PLongInt;
          __F: PSingle; __ldf: PLongInt; __scale: PSingle; __dif: PSingle;
          __work: PSingle; __lwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stgsyl_';
        function stpcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __rcond: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stpcon_';
        function stprfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: PSingle; __B: PSingle; __ldb: PLongInt; __X: PSingle;
          __ldx: PLongInt; __ferr: PSingle; __berr: PSingle; __work: PSingle;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stprfs_';
        function stptri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __Ap: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stptri_';
        function stptrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: PSingle; __B: PSingle; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'stptrs_';
        function stpttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: PSingle; __arf: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'stpttf_';
        function stpttr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: PSingle;
          __A: PSingle; __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stpttr_';
        function strcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __rcond: PSingle; __work: PSingle; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strcon_';
        function strevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: PSingle; __ldt: PLongInt;
          __vl: PSingle; __ldvl: PLongInt; __vr: PSingle; __ldvr: PLongInt;
          __mm: PLongInt; __M: PLongInt; __work: PSingle; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'strevc_';
        function strexc_(__compq: MarshaledAString; __N: PLongInt; __t: PSingle;
          __ldt: PLongInt; __Q: PSingle; __ldq: PLongInt; __ifst: PLongInt;
          __ilst: PLongInt; __work: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strexc_';
        function strrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __X: PSingle; __ldx: PLongInt; __ferr: PSingle; __berr: PSingle;
          __work: PSingle; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strrfs_';
        function strsen_(__job: MarshaledAString; __compq: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: PSingle; __ldt: PLongInt;
          __Q: PSingle; __ldq: PLongInt; __wr: PSingle; __wi: PSingle;
          __M: PLongInt; __S: PSingle; __sep: PSingle; __work: PSingle;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strsen_';
        function strsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: PSingle; __ldt: PLongInt;
          __vl: PSingle; __ldvl: PLongInt; __vr: PSingle; __ldvr: PLongInt;
          __S: PSingle; __sep: PSingle; __mm: PLongInt; __M: PLongInt;
          __work: PSingle; __ldwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strsna_';
        function strsyl_(__trana: MarshaledAString; __tranb: MarshaledAString;
          __isgn: PLongInt; __M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __B: PSingle; __ldb: PLongInt; __c__: PSingle;
          __ldc: PLongInt; __scale: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strsyl_';
        function strti2_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'strti2_';
        function strtri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'strtri_';
        function strtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: PSingle; __lda: PLongInt; __B: PSingle; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strtrs_';
        function strttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: PSingle; __lda: PLongInt; __arf: PSingle;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strttf_';
        function strttp_(__Uplo: MarshaledAString; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __Ap: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'strttp_';
        function stzrqf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stzrqf_';
        function stzrzf_(__M: PLongInt; __N: PLongInt; __A: PSingle;
          __lda: PLongInt; __tau: PSingle; __work: PSingle; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'stzrzf_';
        function zbdsqr_(__Uplo: MarshaledAString; __N: PLongInt;
          __ncvt: PLongInt; __nru: PLongInt; __ncc: PLongInt; __d__: PDouble;
          __E: PDouble; __vt: Pointer; __ldvt: PLongInt; __u: Pointer;
          __ldu: PLongInt; __c__: Pointer; __ldc: PLongInt; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zbdsqr_';
        function zcgesv_(__N: PLongInt; __nrhs: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __work: Pointer; __swork: Pointer;
          __rwork: PDouble; __iter: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zcgesv_';
        function zcposv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __work: Pointer;
          __swork: Pointer; __rwork: PDouble; __iter: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zcposv_';
        function zdrscl_(__N: PLongInt; __sa: PDouble; __sx: Pointer;
          __incX: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zdrscl_';
        function zgbbrd_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __ncc: PLongInt; __KL: PLongInt; __KU: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __d__: PDouble; __E: PDouble; __Q: Pointer;
          __ldq: PLongInt; __pt: Pointer; __ldpt: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgbbrd_';
        function zgbcon_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbcon_';
        function zgbequ_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __r__: PDouble;
          __c__: PDouble; __rowcnd: PDouble; __colcnd: PDouble; __amax: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbequ_';
        function zgbequb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __r__: PDouble;
          __c__: PDouble; __rowcnd: PDouble; __colcnd: PDouble; __amax: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbequb_';
        function zgbrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __afb: Pointer; __ldafb: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __ferr: PDouble; __berr: PDouble; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbrfs_';
        function zgbsv_(__N: PLongInt; __KL: PLongInt; __KU: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbsv_';
        function zgbsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt;
          __ab: Pointer; __ldab: PLongInt; __afb: Pointer; __ldafb: PLongInt;
          __ipiv: PLongInt; __equed: MarshaledAString; __r__: PDouble;
          __c__: PDouble; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbsvx_';
        function zgbtf2_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbtf2_';
        function zgbtrf_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __ipiv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbtrf_';
        function zgbtrs_(__Trans: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __nrhs: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgbtrs_';
        function zgebak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PDouble;
          __M: PLongInt; __v: Pointer; __ldv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgebak_';
        function zgebal_(__job: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __scale: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgebal_';
        function zgebd2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tauq: Pointer;
          __taup: Pointer; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgebd2_';
        function zgebrd_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tauq: Pointer;
          __taup: Pointer; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgebrd_';
        function zgecon_(__norm: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgecon_';
        function zgeequ_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __r__: PDouble; __c__: PDouble; __rowcnd: PDouble;
          __colcnd: PDouble; __amax: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgeequ_';
        function zgeequb_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __r__: PDouble; __c__: PDouble; __rowcnd: PDouble;
          __colcnd: PDouble; __amax: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgeequb_';
        function zgees_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __sdim: PLongInt; __w: Pointer; __vs: Pointer; __ldvs: PLongInt;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgees_';
        function zgeesx_(__jobvs: MarshaledAString; __sort: MarshaledAString;
          __select: __CLPK_L_fp; __sense: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __sdim: PLongInt; __w: Pointer;
          __vs: Pointer; __ldvs: PLongInt; __rconde: PDouble; __rcondv: PDouble;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgeesx_';
        function zgeev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __w: Pointer;
          __vl: Pointer; __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgeev_';
        function zgeevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __w: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __scale: PDouble; __abnrm: PDouble;
          __rconde: PDouble; __rcondv: PDouble; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zgeevx_';
        function zgegs_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __alpha: Pointer; __beta: Pointer; __vsl: Pointer;
          __ldvsl: PLongInt; __vsr: Pointer; __ldvsr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zgegs_';
        function zgegv_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __alpha: Pointer; __beta: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zgegv_';
        function zgehd2_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgehd2_';
        function zgehrd_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgehrd_';
        function zgelq2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgelq2_';
        function zgelqf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgelqf_';
        function zgels_(__Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgels_';
        function zgelsd_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __S: PDouble; __rcond: PDouble; __rank: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgelsd_';
        function zgelss_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __S: PDouble; __rcond: PDouble; __rank: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zgelss_';
        function zgelsx_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PDouble; __rank: PLongInt; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgelsx_';
        function zgelsy_(__M: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __jpvt: PLongInt; __rcond: PDouble; __rank: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zgelsy_';
        function zgeql2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgeql2_';
        function zgeqlf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgeqlf_';
        function zgeqp3_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __jpvt: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zgeqp3_';
        function zgeqpf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __jpvt: PLongInt; __tau: Pointer; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgeqpf_';
        function zgeqr2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgeqr2_';
        function zgeqrf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgeqrf_';
        function zgerfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgerfs_';
        function zgerq2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgerq2_';
        function zgerqf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgerqf_';
        function zgesc2_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __rhs: Pointer; __ipiv: PLongInt; __jpiv: PLongInt; __scale: PDouble)
          : Integer; cdecl; external libAccelerate name _PU + 'zgesc2_';
        function zgesdd_(__jobz: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __S: PDouble; __u: Pointer;
          __ldu: PLongInt; __vt: Pointer; __ldvt: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgesdd_';
        function zgesv_(__N: PLongInt; __nrhs: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgesv_';
        function zgesvd_(__jobu: MarshaledAString; __jobvt: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __S: PDouble; __u: Pointer; __ldu: PLongInt; __vt: Pointer;
          __ldvt: PLongInt; __work: Pointer; __lwork: PLongInt;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgesvd_';
        function zgesvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __ipiv: PLongInt;
          __equed: MarshaledAString; __r__: PDouble; __c__: PDouble;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __rcond: PDouble; __ferr: PDouble; __berr: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgesvx_';
        function zgetc2_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __jpiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgetc2_';
        function zgetf2_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgetf2_';
        function zgetrf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgetrf_';
        function zgetri_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgetri_';
        function zgetrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgetrs_';
        function zggbak_(__job: MarshaledAString; __Side: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __lscale: PDouble;
          __rscale: PDouble; __M: PLongInt; __v: Pointer; __ldv: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggbak_';
        function zggbal_(__job: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __lscale: PDouble; __rscale: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggbal_';
        function zgges_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __sdim: PLongInt; __alpha: Pointer; __beta: Pointer; __vsl: Pointer;
          __ldvsl: PLongInt; __vsr: Pointer; __ldvsr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __bwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgges_';
        function zggesx_(__jobvsl: MarshaledAString; __jobvsr: MarshaledAString;
          __sort: MarshaledAString; __selctg: __CLPK_L_fp;
          __sense: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __sdim: PLongInt;
          __alpha: Pointer; __beta: Pointer; __vsl: Pointer; __ldvsl: PLongInt;
          __vsr: Pointer; __ldvsr: PLongInt; __rconde: PDouble;
          __rcondv: PDouble; __work: Pointer; __lwork: PLongInt;
          __rwork: PDouble; __iwork: PLongInt; __liwork: PLongInt;
          __bwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggesx_';
        function zggev_(__jobvl: MarshaledAString; __jobvr: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __alpha: Pointer; __beta: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zggev_';
        function zggevx_(__balanc: MarshaledAString; __jobvl: MarshaledAString;
          __jobvr: MarshaledAString; __sense: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __alpha: Pointer; __beta: Pointer; __vl: Pointer; __ldvl: PLongInt;
          __vr: Pointer; __ldvr: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __lscale: PDouble; __rscale: PDouble; __abnrm: PDouble;
          __bbnrm: PDouble; __rconde: PDouble; __rcondv: PDouble;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __iwork: PLongInt; __bwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zggevx_';
        function zggglm_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __d__: Pointer; __X: Pointer; __Y: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggglm_';
        function zgghrd_(__compq: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __Q: Pointer;
          __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgghrd_';
        function zgglse_(__M: PLongInt; __N: PLongInt; __P: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __c__: Pointer; __d__: Pointer; __X: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgglse_';
        function zggqrf_(__N: PLongInt; __M: PLongInt; __P: PLongInt;
          __A: Pointer; __lda: PLongInt; __taua: Pointer; __B: Pointer;
          __ldb: PLongInt; __taub: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggqrf_';
        function zggrqf_(__M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __taua: Pointer; __B: Pointer;
          __ldb: PLongInt; __taub: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggrqf_';
        function zggsvd_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __N: PLongInt; __P: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __alpha: PDouble; __beta: PDouble;
          __u: Pointer; __ldu: PLongInt; __v: Pointer; __ldv: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __work: Pointer; __rwork: PDouble;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggsvd_';
        function zggsvp_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __tola: PDouble; __tolb: PDouble; __K: PLongInt; __L: PLongInt;
          __u: Pointer; __ldu: PLongInt; __v: Pointer; __ldv: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __iwork: PLongInt; __rwork: PDouble;
          __tau: Pointer; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zggsvp_';
        function zgtcon_(__norm: MarshaledAString; __N: PLongInt; __dl: Pointer;
          __d__: Pointer; __du: Pointer; __du2: Pointer; __ipiv: PLongInt;
          __anorm: PDouble; __rcond: PDouble; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgtcon_';
        function zgtrfs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: Pointer; __d__: Pointer; __du: Pointer;
          __dlf: Pointer; __DF: Pointer; __duf: Pointer; __du2: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PDouble; __berr: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgtrfs_';
        function zgtsv_(__N: PLongInt; __nrhs: PLongInt; __dl: Pointer;
          __d__: Pointer; __du: Pointer; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgtsv_';
        function zgtsvx_(__fact: MarshaledAString; __Trans: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __dl: Pointer; __d__: Pointer;
          __du: Pointer; __dlf: Pointer; __DF: Pointer; __duf: Pointer;
          __du2: Pointer; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble;
          __berr: PDouble; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgtsvx_';
        function zgttrf_(__N: PLongInt; __dl: Pointer; __d__: Pointer;
          __du: Pointer; __du2: Pointer; __ipiv: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zgttrf_';
        function zgttrs_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __dl: Pointer; __d__: Pointer; __du: Pointer;
          __du2: Pointer; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgttrs_';
        function zgtts2_(__itrans: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __dl: Pointer; __d__: Pointer; __du: Pointer; __du2: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zgtts2_';
        function zhbev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __w: PDouble; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhbev_';
        function zhbevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __w: PDouble; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __lrwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zhbevd_';
        function zhbevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: Pointer; __ldab: PLongInt; __Q: Pointer; __ldq: PLongInt;
          __vl: PDouble; __vu: PDouble; __il: PLongInt; __iu: PLongInt;
          __abstol: PDouble; __M: PLongInt; __w: PDouble; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __rwork: PDouble; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhbevx_';
        function zhbgst_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __bb: Pointer; __ldbb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zhbgst_';
        function zhbgv_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __bb: Pointer; __ldbb: PLongInt; __w: PDouble;
          __z__: Pointer; __ldz: PLongInt; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhbgv_';
        function zhbgvd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __ka: PLongInt; __kb: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __bb: Pointer; __ldbb: PLongInt; __w: PDouble;
          __z__: Pointer; __ldz: PLongInt; __work: Pointer; __lwork: PLongInt;
          __rwork: PDouble; __lrwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhbgvd_';
        function zhbgvx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __ka: PLongInt;
          __kb: PLongInt; __ab: Pointer; __ldab: PLongInt; __bb: Pointer;
          __ldbb: PLongInt; __Q: Pointer; __ldq: PLongInt; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __rwork: PDouble; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhbgvx_';
        function zhbtrd_(__vect: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __d__: PDouble; __E: PDouble; __Q: Pointer; __ldq: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhbtrd_';
        function zhecon_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhecon_';
        function zheequb_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PDouble; __scond: PDouble; __amax: PDouble;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zheequb_';
        function zheev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __w: PDouble;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zheev_';
        function zheevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __w: PDouble;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zheevd_';
        function zheevr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __vl: PDouble; __vu: PDouble; __il: PLongInt;
          __iu: PLongInt; __abstol: PDouble; __M: PLongInt; __w: PDouble;
          __z__: Pointer; __ldz: PLongInt; __isuppz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __lrwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zheevr_';
        function zheevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __vl: PDouble; __vu: PDouble; __il: PLongInt;
          __iu: PLongInt; __abstol: PDouble; __M: PLongInt; __w: PDouble;
          __z__: Pointer; __ldz: PLongInt; __work: Pointer; __lwork: PLongInt;
          __rwork: PDouble; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zheevx_';
        function zhegs2_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhegs2_';
        function zhegst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhegst_';
        function zhegv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __w: PDouble;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhegv_';
        function zhegvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __w: PDouble;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhegvd_';
        function zhegvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __vl: PDouble; __vu: PDouble; __il: PLongInt; __iu: PLongInt;
          __abstol: PDouble; __M: PLongInt; __w: PDouble; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __iwork: PLongInt; __ifail: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zhegvx_';
        function zherfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zherfs_';
        function zhesv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhesv_';
        function zhesvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PDouble;
          __ferr: PDouble; __berr: PDouble; __work: Pointer; __lwork: PLongInt;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhesvx_';
        function zhetd2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tau: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhetd2_';
        function zhetf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhetf2_';
        function zhetrd_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __d__: PDouble; __E: PDouble; __tau: Pointer;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhetrd_';
        function zhetrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhetrf_';
        function zhetri_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zhetri_';
        function zhetrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhetrs_';
        function zhfrk_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __N: PLongInt; __K: PLongInt;
          __alpha: PDouble; __A: Pointer; __lda: PLongInt; __beta: PDouble;
          __c__: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zhfrk_';
        function zhgeqz_(__job: MarshaledAString; __compq: MarshaledAString;
          __compz: MarshaledAString; __N: PLongInt; __ilo: PLongInt;
          __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt; __t: Pointer;
          __ldt: PLongInt; __alpha: Pointer; __beta: Pointer; __Q: Pointer;
          __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zhgeqz_';
        function zhpcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhpcon_';
        function zhpev_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __w: PDouble; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zhpev_';
        function zhpevd_(__jobz: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __w: PDouble; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhpevd_';
        function zhpevx_(__jobz: MarshaledAString; __range: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __rwork: PDouble; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhpevx_';
        function zhpgst_(__itype: PLongInt; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __bp: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zhpgst_';
        function zhpgv_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer; __bp: Pointer;
          __w: PDouble; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhpgv_';
        function zhpgvd_(__itype: PLongInt; __jobz: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer; __bp: Pointer;
          __w: PDouble; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __lwork: PLongInt; __rwork: PDouble; __lrwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zhpgvd_';
        function zhpgvx_(__itype: PLongInt; __jobz: MarshaledAString;
          __range: MarshaledAString; __Uplo: MarshaledAString; __N: PLongInt;
          __Ap: Pointer; __bp: Pointer; __vl: PDouble; __vu: PDouble;
          __il: PLongInt; __iu: PLongInt; __abstol: PDouble; __M: PLongInt;
          __w: PDouble; __z__: Pointer; __ldz: PLongInt; __work: Pointer;
          __rwork: PDouble; __iwork: PLongInt; __ifail: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhpgvx_';
        function zhprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __ferr: PDouble; __berr: PDouble; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhprfs_';
        function zhpsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhpsv_';
        function zhpsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhpsvx_';
        function zhptrd_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __d__: PDouble; __E: PDouble; __tau: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zhptrd_';
        function zhptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhptrf_';
        function zhptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhptri_';
        function zhptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhptrs_';
        function zhsein_(__Side: MarshaledAString; __eigsrc: MarshaledAString;
          __initv: MarshaledAString; __select: PLongInt; __N: PLongInt;
          __h__: Pointer; __ldh: PLongInt; __w: Pointer; __vl: Pointer;
          __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt; __mm: PLongInt;
          __M: PLongInt; __work: Pointer; __rwork: PDouble; __ifaill: PLongInt;
          __ifailr: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhsein_';
        function zhseqr_(__job: MarshaledAString; __compz: MarshaledAString;
          __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer;
          __ldh: PLongInt; __w: Pointer; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zhseqr_';
        function zlabrd_(__M: PLongInt; __N: PLongInt; __nb: PLongInt;
          __A: Pointer; __lda: PLongInt; __d__: PDouble; __E: PDouble;
          __tauq: Pointer; __taup: Pointer; __X: Pointer; __ldx: PLongInt;
          __Y: Pointer; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlabrd_';
        function zlacgv_(__N: PLongInt; __X: Pointer; __incX: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlacgv_';
        function zlacn2_(__N: PLongInt; __v: Pointer; __X: Pointer;
          __est: PDouble; __kase: PLongInt; __isave: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlacn2_';
        function zlacon_(__N: PLongInt; __v: Pointer; __X: Pointer;
          __est: PDouble; __kase: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlacon_';
        function zlacp2_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: PDouble; __lda: PLongInt; __B: Pointer; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlacp2_';
        function zlacpy_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlacpy_';
        function zlacrm_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: PDouble; __ldb: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __rwork: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'zlacrm_';
        function zlacrt_(__N: PLongInt; __cx: Pointer; __incX: PLongInt;
          __cy: Pointer; __incY: PLongInt; __c__: Pointer; __S: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'zlacrt_';
        procedure zladiv_(__ret_val: Pointer; __X: Pointer; __Y: Pointer);
          cdecl; external libAccelerate name _PU + 'zladiv_';
        function zlaed0_(__qsiz: PLongInt; __N: PLongInt; __d__: PDouble;
          __E: PDouble; __Q: Pointer; __ldq: PLongInt; __qstore: Pointer;
          __ldqs: PLongInt; __rwork: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlaed0_';
        function zlaed7_(__N: PLongInt; __cutpnt: PLongInt; __qsiz: PLongInt;
          __tlvls: PLongInt; __curlvl: PLongInt; __curpbm: PLongInt;
          __d__: PDouble; __Q: Pointer; __ldq: PLongInt; __rho: PDouble;
          __indxq: PLongInt; __qstore: PDouble; __qptr: PLongInt;
          __prmptr: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __givnum: PDouble; __work: Pointer;
          __rwork: PDouble; __iwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zlaed7_';
        function zlaed8_(__K: PLongInt; __N: PLongInt; __qsiz: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __d__: PDouble; __rho: PDouble;
          __cutpnt: PLongInt; __z__: PDouble; __dlamda: PDouble; __q2: Pointer;
          __ldq2: PLongInt; __w: PDouble; __indxp: PLongInt; __indx: PLongInt;
          __indxq: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __givnum: PDouble; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zlaed8_';
        function zlaein_(__rightv: PLongInt; __noinit: PLongInt; __N: PLongInt;
          __h__: Pointer; __ldh: PLongInt; __w: Pointer; __v: Pointer;
          __B: Pointer; __ldb: PLongInt; __rwork: PDouble; __eps3: PDouble;
          __smlnum: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlaein_';
        function zlaesy_(__A: Pointer; __B: Pointer; __c__: Pointer;
          __rt1: Pointer; __rt2: Pointer; __evscal: Pointer; __cs1: Pointer;
          __sn1: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlaesy_';
        function zlaev2_(__A: Pointer; __B: Pointer; __c__: Pointer;
          __rt1: PDouble; __rt2: PDouble; __cs1: PDouble; __sn1: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaev2_';
        function zlag2c_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __sa: Pointer; __ldsa: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlag2c_';
        function zlags2_(__upper: PLongInt; __A1: PDouble; __a2: Pointer;
          __a3: PDouble; __b1: PDouble; __b2: Pointer; __b3: PDouble;
          __csu: PDouble; __snu: Pointer; __csv: PDouble; __snv: Pointer;
          __csq: PDouble; __snq: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlags2_';
        function zlagtm_(__Trans: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __alpha: PDouble; __dl: Pointer; __d__: Pointer;
          __du: Pointer; __X: Pointer; __ldx: PLongInt; __beta: PDouble;
          __B: Pointer; __ldb: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlagtm_';
        function zlahef_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __w: Pointer; __ldw: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlahef_';
        function zlahqr_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __w: Pointer; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlahqr_';
        function zlahr2_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __t: Pointer;
          __ldt: PLongInt; __Y: Pointer; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlahr2_';
        function zlahrd_(__N: PLongInt; __K: PLongInt; __nb: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __t: Pointer;
          __ldt: PLongInt; __Y: Pointer; __ldy: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlahrd_';
        function zlaic1_(__job: PLongInt; __J: PLongInt; __X: Pointer;
          __sest: PDouble; __w: Pointer; __gamma: Pointer; __sestpr: PDouble;
          __S: Pointer; __c__: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlaic1_';
        function zlals0_(__icompq: PLongInt; __nl: PLongInt; __NR: PLongInt;
          __sqre: PLongInt; __nrhs: PLongInt; __B: Pointer; __ldb: PLongInt;
          __bx: Pointer; __ldbx: PLongInt; __perm: PLongInt; __givptr: PLongInt;
          __givcol: PLongInt; __ldgcol: PLongInt; __givnum: PDouble;
          __ldgnum: PLongInt; __poles: PDouble; __difl: PDouble;
          __difr: PDouble; __z__: PDouble; __K: PLongInt; __c__: PDouble;
          __S: PDouble; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlals0_';
        function zlalsa_(__icompq: PLongInt; __smlsiz: PLongInt; __N: PLongInt;
          __nrhs: PLongInt; __B: Pointer; __ldb: PLongInt; __bx: Pointer;
          __ldbx: PLongInt; __u: PDouble; __ldu: PLongInt; __vt: PDouble;
          __K: PLongInt; __difl: PDouble; __difr: PDouble; __z__: PDouble;
          __poles: PDouble; __givptr: PLongInt; __givcol: PLongInt;
          __ldgcol: PLongInt; __perm: PLongInt; __givnum: PDouble;
          __c__: PDouble; __S: PDouble; __rwork: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlalsa_';
        function zlalsd_(__Uplo: MarshaledAString; __smlsiz: PLongInt;
          __N: PLongInt; __nrhs: PLongInt; __d__: PDouble; __E: PDouble;
          __B: Pointer; __ldb: PLongInt; __rcond: PDouble; __rank: PLongInt;
          __work: Pointer; __rwork: PDouble; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlalsd_';
        function zlangb_(__norm: MarshaledAString; __N: PLongInt;
          __KL: PLongInt; __KU: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlangb_';
        function zlange_(__norm: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __work: PDouble): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'zlange_';
        function zlangt_(__norm: MarshaledAString; __N: PLongInt; __dl: Pointer;
          __d__: Pointer; __du: Pointer): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlangt_';
        function zlanhb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlanhb_';
        function zlanhe_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __work: PDouble)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlanhe_';
        function zlanhf_(__norm: MarshaledAString; __transr: MarshaledAString;
          __Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlanhf_';
        function zlanhp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __work: PDouble): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'zlanhp_';
        function zlanhs_(__norm: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlanhs_';
        function zlanht_(__norm: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: Pointer): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlanht_';
        function zlansb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlansb_';
        function zlansp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __work: PDouble): __CLPK_doublereal;
          cdecl; external libAccelerate name _PU + 'zlansp_';
        function zlansy_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __work: PDouble)
          : __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlansy_';
        function zlantb_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __K: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlantb_';
        function zlantp_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlantp_';
        function zlantr_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __work: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'zlantr_';
        function zlapll_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __Y: Pointer; __incY: PLongInt; __ssmin: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'zlapll_';
        function zlapmt_(__forwrd: PLongInt; __M: PLongInt; __N: PLongInt;
          __X: Pointer; __ldx: PLongInt; __K: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlapmt_';
        function zlaqgb_(__M: PLongInt; __N: PLongInt; __KL: PLongInt;
          __KU: PLongInt; __ab: Pointer; __ldab: PLongInt; __r__: PDouble;
          __c__: PDouble; __rowcnd: PDouble; __colcnd: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqgb_';
        function zlaqge_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __r__: PDouble; __c__: PDouble; __rowcnd: PDouble;
          __colcnd: PDouble; __amax: PDouble; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaqge_';
        function zlaqhb_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __S: PDouble;
          __scond: PDouble; __amax: PDouble; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaqhb_';
        function zlaqhe_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PDouble; __scond: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqhe_';
        function zlaqhp_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __S: PDouble; __scond: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqhp_';
        function zlaqp2_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __A: Pointer; __lda: PLongInt; __jpvt: PLongInt; __tau: Pointer;
          __vn1: PDouble; __vn2: PDouble; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqp2_';
        function zlaqps_(__M: PLongInt; __N: PLongInt; __offset: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: Pointer; __lda: PLongInt;
          __jpvt: PLongInt; __tau: Pointer; __vn1: PDouble; __vn2: PDouble;
          __auxv: Pointer; __F: Pointer; __ldf: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqps_';
        function zlaqr0_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __w: Pointer; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaqr0_';
        function zlaqr1_(__N: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __S1: Pointer; __S2: Pointer; __v: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqr1_';
        function zlaqr2_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: Pointer;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sh: Pointer;
          __v: Pointer; __ldv: PLongInt; __nh: PLongInt; __t: Pointer;
          __ldt: PLongInt; __nv: PLongInt; __wv: Pointer; __ldwv: PLongInt;
          __work: Pointer; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqr2_';
        function zlaqr3_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ktop: PLongInt; __kbot: PLongInt; __nw: PLongInt; __h__: Pointer;
          __ldh: PLongInt; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __ns: PLongInt; __nd: PLongInt; __sh: Pointer;
          __v: Pointer; __ldv: PLongInt; __nh: PLongInt; __t: Pointer;
          __ldt: PLongInt; __nv: PLongInt; __wv: Pointer; __ldwv: PLongInt;
          __work: Pointer; __lwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqr3_';
        function zlaqr4_(__wantt: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __ilo: PLongInt; __ihi: PLongInt; __h__: Pointer; __ldh: PLongInt;
          __w: Pointer; __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaqr4_';
        function zlaqr5_(__wantt: PLongInt; __wantz: PLongInt;
          __kacc22: PLongInt; __N: PLongInt; __ktop: PLongInt; __kbot: PLongInt;
          __nshfts: PLongInt; __S: Pointer; __h__: Pointer; __ldh: PLongInt;
          __iloz: PLongInt; __ihiz: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __v: Pointer; __ldv: PLongInt; __u: Pointer; __ldu: PLongInt;
          __nv: PLongInt; __wv: Pointer; __ldwv: PLongInt; __nh: PLongInt;
          __wh: Pointer; __ldwh: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqr5_';
        function zlaqsb_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __S: PDouble;
          __scond: PDouble; __amax: PDouble; __equed: MarshaledAString)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaqsb_';
        function zlaqsp_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __S: PDouble; __scond: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqsp_';
        function zlaqsy_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PDouble; __scond: PDouble; __amax: PDouble;
          __equed: MarshaledAString): Integer; cdecl;
          external libAccelerate name _PU + 'zlaqsy_';
        function zlar1v_(__N: PLongInt; __b1: PLongInt; __bn: PLongInt;
          __lambda: PDouble; __d__: PDouble; __L: PDouble; __ld: PDouble;
          __lld: PDouble; __pivmin: PDouble; __gaptol: PDouble; __z__: Pointer;
          __wantnc: PLongInt; __negcnt: PLongInt; __ztz: PDouble;
          __mingma: PDouble; __r__: PLongInt; __isuppz: PLongInt;
          __nrminv: PDouble; __resid: PDouble; __rqcorr: PDouble;
          __work: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'zlar1v_';
        function zlar2v_(__N: PLongInt; __X: Pointer; __Y: Pointer;
          __z__: Pointer; __incX: PLongInt; __c__: PDouble; __S: Pointer;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlar2v_';
        function zlarcm_(__M: PLongInt; __N: PLongInt; __A: PDouble;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __rwork: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'zlarcm_';
        function zlarf_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: Pointer; __incv: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlarf_';
        function zlarfb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __v: Pointer; __ldv: PLongInt;
          __t: Pointer; __ldt: PLongInt; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlarfb_';
        function zlarfg_(__N: PLongInt; __alpha: Pointer; __X: Pointer;
          __incX: PLongInt; __tau: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlarfg_';
        function zlarfp_(__N: PLongInt; __alpha: Pointer; __X: Pointer;
          __incX: PLongInt; __tau: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlarfp_';
        function zlarft_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: Pointer; __ldv: PLongInt;
          __tau: Pointer; __t: Pointer; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlarft_';
        function zlarfx_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: Pointer; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlarfx_';
        function zlargv_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __Y: Pointer; __incY: PLongInt; __c__: PDouble; __incc: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlargv_';
        function zlarnv_(__idist: PLongInt; __iseed: PLongInt; __N: PLongInt;
          __X: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlarnv_';
        function zlarrv_(__N: PLongInt; __vl: PDouble; __vu: PDouble;
          __d__: PDouble; __L: PDouble; __pivmin: PDouble; __isplit: PLongInt;
          __M: PLongInt; __dol: PLongInt; __dou: PLongInt; __minrgp: PDouble;
          __rtol1: PDouble; __rtol2: PDouble; __w: PDouble; __werr: PDouble;
          __wgap: PDouble; __iblock: PLongInt; __indexw: PLongInt;
          __gers: PDouble; __z__: Pointer; __ldz: PLongInt; __isuppz: PLongInt;
          __work: PDouble; __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlarrv_';
        function zlarscl2_(__M: PLongInt; __N: PLongInt; __d__: PDouble;
          __X: Pointer; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlarscl2_';
        function zlartg_(__F: Pointer; __g: Pointer; __cs: PDouble;
          __sn: Pointer; __r__: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlartg_';
        function zlartv_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __Y: Pointer; __incY: PLongInt; __c__: PDouble; __S: Pointer;
          __incc: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlartv_';
        function zlarz_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __L: PLongInt; __v: Pointer; __incv: PLongInt; __tau: Pointer;
          __c__: Pointer; __ldc: PLongInt; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlarz_';
        function zlarzb_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __direct: MarshaledAString; __storev: MarshaledAString; __M: PLongInt;
          __N: PLongInt; __K: PLongInt; __L: PLongInt; __v: Pointer;
          __ldv: PLongInt; __t: Pointer; __ldt: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __ldwork: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlarzb_';
        function zlarzt_(__direct: MarshaledAString; __storev: MarshaledAString;
          __N: PLongInt; __K: PLongInt; __v: Pointer; __ldv: PLongInt;
          __tau: Pointer; __t: Pointer; __ldt: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlarzt_';
        function zlascl_(__type__: MarshaledAString; __KL: PLongInt;
          __KU: PLongInt; __cfrom: PDouble; __cto: PDouble; __M: PLongInt;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlascl_';
        function zlascl2_(__M: PLongInt; __N: PLongInt; __d__: PDouble;
          __X: Pointer; __ldx: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlascl2_';
        function zlaset_(__Uplo: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: Pointer; __beta: Pointer; __A: Pointer; __lda: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaset_';
        function zlasr_(__Side: MarshaledAString; __pivot: MarshaledAString;
          __direct: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __c__: PDouble; __S: PDouble; __A: Pointer; __lda: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zlasr_';
        function zlassq_(__N: PLongInt; __X: Pointer; __incX: PLongInt;
          __scale: PDouble; __sumsq: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'zlassq_';
        function zlaswp_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __k1: PLongInt; __k2: PLongInt; __ipiv: PLongInt; __incX: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlaswp_';
        function zlasyf_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __kb: PLongInt; __A: Pointer; __lda: PLongInt;
          __ipiv: PLongInt; __w: Pointer; __ldw: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlasyf_';
        function zlat2c_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __sa: Pointer; __ldsa: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zlat2c_';
        function zlatbs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __X: Pointer;
          __scale: PDouble; __cnorm: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlatbs_';
        function zlatdf_(__ijob: PLongInt; __N: PLongInt; __z__: Pointer;
          __ldz: PLongInt; __rhs: Pointer; __rdsum: PDouble; __rdscal: PDouble;
          __ipiv: PLongInt; __jpiv: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlatdf_';
        function zlatps_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __Ap: Pointer; __X: Pointer; __scale: PDouble; __cnorm: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlatps_';
        function zlatrd_(__Uplo: MarshaledAString; __N: PLongInt;
          __nb: PLongInt; __A: Pointer; __lda: PLongInt; __E: PDouble;
          __tau: Pointer; __w: Pointer; __ldw: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlatrd_';
        function zlatrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __normin: MarshaledAString; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __X: Pointer; __scale: PDouble;
          __cnorm: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlatrs_';
        function zlatrz_(__M: PLongInt; __N: PLongInt; __L: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'zlatrz_';
        function zlatzm_(__Side: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __v: Pointer; __incv: PLongInt; __tau: Pointer; __C1: Pointer;
          __c2: Pointer; __ldc: PLongInt; __work: Pointer): Integer; cdecl;
          external libAccelerate name _PU + 'zlatzm_';
        function zlauu2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlauu2_';
        function zlauum_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zlauum_';
        function zpbcon_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __anorm: PDouble;
          __rcond: PDouble; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zpbcon_';
        function zpbequ_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __S: PDouble;
          __scond: PDouble; __amax: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpbequ_';
        function zpbrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __afb: Pointer; __ldafb: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpbrfs_';
        function zpbstf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zpbstf_';
        function zpbsv_(__Uplo: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpbsv_';
        function zpbsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __kd: PLongInt; __nrhs: PLongInt; __ab: Pointer;
          __ldab: PLongInt; __afb: Pointer; __ldafb: PLongInt;
          __equed: MarshaledAString; __S: PDouble; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PDouble;
          __ferr: PDouble; __berr: PDouble; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpbsvx_';
        function zpbtf2_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zpbtf2_';
        function zpbtrf_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __ab: Pointer; __ldab: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zpbtrf_';
        function zpbtrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __kd: PLongInt; __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpbtrs_';
        function zpftrf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpftrf_';
        function zpftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpftri_';
        function zpftrs_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpftrs_';
        function zpocon_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpocon_';
        function zpoequ_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __S: PDouble; __scond: PDouble; __amax: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zpoequ_';
        function zpoequb_(__N: PLongInt; __A: Pointer; __lda: PLongInt;
          __S: PDouble; __scond: PDouble; __amax: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zpoequb_';
        function zporfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PDouble; __berr: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zporfs_';
        function zposv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zposv_';
        function zposvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __equed: MarshaledAString;
          __S: PDouble; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zposvx_';
        function zpotf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpotf2_';
        function zpotrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpotrf_';
        function zpotri_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpotri_';
        function zpotrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpotrs_';
        function zppcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __anorm: PDouble; __rcond: PDouble; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zppcon_';
        function zppequ_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __S: PDouble; __scond: PDouble; __amax: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zppequ_';
        function zpprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __ferr: PDouble;
          __berr: PDouble; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zpprfs_';
        function zppsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zppsv_';
        function zppsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer;
          __equed: MarshaledAString; __S: PDouble; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PDouble;
          __ferr: PDouble; __berr: PDouble; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zppsvx_';
        function zpptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpptrf_';
        function zpptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpptri_';
        function zpptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpptrs_';
        function zpstf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpstf2_';
        function zpstrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __piv: PLongInt; __rank: PLongInt; __tol: PDouble;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpstrf_';
        function zptcon_(__N: PLongInt; __d__: PDouble; __E: Pointer;
          __anorm: PDouble; __rcond: PDouble; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zptcon_';
        function zpteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __z__: Pointer; __ldz: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpteqr_';
        function zptrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PDouble; __E: Pointer; __DF: PDouble;
          __ef: Pointer; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PDouble; __berr: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zptrfs_';
        function zptsv_(__N: PLongInt; __nrhs: PLongInt; __d__: PDouble;
          __E: Pointer; __B: Pointer; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zptsv_';
        function zptsvx_(__fact: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PDouble; __E: Pointer; __DF: PDouble;
          __ef: Pointer; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zptsvx_';
        function zpttrf_(__N: PLongInt; __d__: PDouble; __E: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpttrf_';
        function zpttrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __d__: PDouble; __E: Pointer; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zpttrs_';
        function zptts2_(__iuplo: PLongInt; __N: PLongInt; __nrhs: PLongInt;
          __d__: PDouble; __E: Pointer; __B: Pointer; __ldb: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zptts2_';
        function zrot_(__N: PLongInt; __cx: Pointer; __incX: PLongInt;
          __cy: Pointer; __incY: PLongInt; __c__: PDouble; __S: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'zrot_';
        function zspcon_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zspcon_';
        function zspmv_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __Ap: Pointer; __X: Pointer; __incX: PLongInt;
          __beta: Pointer; __Y: Pointer; __incY: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zspmv_';
        function zspr_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __X: Pointer; __incX: PLongInt; __Ap: Pointer)
          : Integer; cdecl; external libAccelerate name _PU + 'zspr_';
        function zsprfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __X: Pointer; __ldx: PLongInt;
          __ferr: PDouble; __berr: PDouble; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsprfs_';
        function zspsv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zspsv_';
        function zspsvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __Ap: Pointer; __afp: Pointer;
          __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __rcond: PDouble; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zspsvx_';
        function zsptrf_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsptrf_';
        function zsptri_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __ipiv: PLongInt; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsptri_';
        function zsptrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __Ap: Pointer; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsptrs_';
        function zstedc_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __z__: Pointer; __ldz: PLongInt;
          __work: Pointer; __lwork: PLongInt; __rwork: PDouble;
          __lrwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zstedc_';
        function zstegr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PDouble; __E: PDouble; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __abstol: PDouble;
          __M: PLongInt; __w: PDouble; __z__: Pointer; __ldz: PLongInt;
          __isuppz: PLongInt; __work: PDouble; __lwork: PLongInt;
          __iwork: PLongInt; __liwork: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'zstegr_';
        function zstein_(__N: PLongInt; __d__: PDouble; __E: PDouble;
          __M: PLongInt; __w: PDouble; __iblock: PLongInt; __isplit: PLongInt;
          __z__: Pointer; __ldz: PLongInt; __work: PDouble; __iwork: PLongInt;
          __ifail: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zstein_';
        function zstemr_(__jobz: MarshaledAString; __range: MarshaledAString;
          __N: PLongInt; __d__: PDouble; __E: PDouble; __vl: PDouble;
          __vu: PDouble; __il: PLongInt; __iu: PLongInt; __M: PLongInt;
          __w: PDouble; __z__: Pointer; __ldz: PLongInt; __nzc: PLongInt;
          __isuppz: PLongInt; __tryrac: PLongInt; __work: PDouble;
          __lwork: PLongInt; __iwork: PLongInt; __liwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zstemr_';
        function zsteqr_(__compz: MarshaledAString; __N: PLongInt;
          __d__: PDouble; __E: PDouble; __z__: Pointer; __ldz: PLongInt;
          __work: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsteqr_';
        function zsycon_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __anorm: PDouble; __rcond: PDouble;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsycon_';
        function zsyequb_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __S: PDouble; __scond: PDouble; __amax: PDouble;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsyequb_';
        function zsymv_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __A: Pointer; __lda: PLongInt; __X: Pointer;
          __incX: PLongInt; __beta: Pointer; __Y: Pointer; __incY: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zsymv_';
        function zsyr_(__Uplo: MarshaledAString; __N: PLongInt;
          __alpha: Pointer; __X: Pointer; __incX: PLongInt; __A: Pointer;
          __lda: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsyr_';
        function zsyrfs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __af: Pointer;
          __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsyrfs_';
        function zsysv_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsysv_';
        function zsysvx_(__fact: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __nrhs: PLongInt; __A: Pointer; __lda: PLongInt;
          __af: Pointer; __ldaf: PLongInt; __ipiv: PLongInt; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __rcond: PDouble;
          __ferr: PDouble; __berr: PDouble; __work: Pointer; __lwork: PLongInt;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsysvx_';
        function zsytf2_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsytf2_';
        function zsytrf_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsytrf_';
        function zsytri_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __ipiv: PLongInt; __work: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zsytri_';
        function zsytrs_(__Uplo: MarshaledAString; __N: PLongInt;
          __nrhs: PLongInt; __A: Pointer; __lda: PLongInt; __ipiv: PLongInt;
          __B: Pointer; __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zsytrs_';
        function ztbcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __ab: Pointer; __ldab: PLongInt; __rcond: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztbcon_';
        function ztbrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __B: Pointer;
          __ldb: PLongInt; __X: Pointer; __ldx: PLongInt; __ferr: PDouble;
          __berr: PDouble; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztbrfs_';
        function ztbtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __kd: PLongInt;
          __nrhs: PLongInt; __ab: Pointer; __ldab: PLongInt; __B: Pointer;
          __ldb: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztbtrs_';
        function ztfsm_(__transr: MarshaledAString; __Side: MarshaledAString;
          __Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __alpha: Pointer; __A: Pointer; __B: Pointer; __ldb: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztfsm_';
        function ztftri_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztftri_';
        function ztfttp_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: Pointer; __Ap: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztfttp_';
        function ztfttr_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __arf: Pointer; __A: Pointer; __lda: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztfttr_';
        function ztgevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __S: Pointer; __lds: PLongInt;
          __P: Pointer; __ldp: PLongInt; __vl: Pointer; __ldvl: PLongInt;
          __vr: Pointer; __ldvr: PLongInt; __mm: PLongInt; __M: PLongInt;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztgevc_';
        function ztgex2_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __j1: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztgex2_';
        function ztgexc_(__wantq: PLongInt; __wantz: PLongInt; __N: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __ifst: PLongInt; __ilst: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztgexc_';
        function ztgsen_(__ijob: PLongInt; __wantq: PLongInt; __wantz: PLongInt;
          __select: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __alpha: Pointer; __beta: Pointer;
          __Q: Pointer; __ldq: PLongInt; __z__: Pointer; __ldz: PLongInt;
          __M: PLongInt; __pl: PDouble; __pr: PDouble; __dif: PDouble;
          __work: Pointer; __lwork: PLongInt; __iwork: PLongInt;
          __liwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztgsen_';
        function ztgsja_(__jobu: MarshaledAString; __jobv: MarshaledAString;
          __jobq: MarshaledAString; __M: PLongInt; __P: PLongInt; __N: PLongInt;
          __K: PLongInt; __L: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __tola: PDouble; __tolb: PDouble;
          __alpha: PDouble; __beta: PDouble; __u: Pointer; __ldu: PLongInt;
          __v: Pointer; __ldv: PLongInt; __Q: Pointer; __ldq: PLongInt;
          __work: Pointer; __ncycle: PLongInt; __info: PLongInt): Integer;
          cdecl; external libAccelerate name _PU + 'ztgsja_';
        function ztgsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __vl: Pointer; __ldvl: PLongInt;
          __vr: Pointer; __ldvr: PLongInt; __S: PDouble; __dif: PDouble;
          __mm: PLongInt; __M: PLongInt; __work: Pointer; __lwork: PLongInt;
          __iwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztgsna_';
        function ztgsy2_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __c__: Pointer; __ldc: PLongInt;
          __d__: Pointer; __ldd: PLongInt; __E: Pointer; __lde: PLongInt;
          __F: Pointer; __ldf: PLongInt; __scale: PDouble; __rdsum: PDouble;
          __rdscal: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztgsy2_';
        function ztgsyl_(__Trans: MarshaledAString; __ijob: PLongInt;
          __M: PLongInt; __N: PLongInt; __A: Pointer; __lda: PLongInt;
          __B: Pointer; __ldb: PLongInt; __c__: Pointer; __ldc: PLongInt;
          __d__: Pointer; __ldd: PLongInt; __E: Pointer; __lde: PLongInt;
          __F: Pointer; __ldf: PLongInt; __scale: PDouble; __dif: PDouble;
          __work: Pointer; __lwork: PLongInt; __iwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztgsyl_';
        function ztpcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __rcond: PDouble; __work: Pointer; __rwork: PDouble; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztpcon_';
        function ztprfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: Pointer; __B: Pointer; __ldb: PLongInt; __X: Pointer;
          __ldx: PLongInt; __ferr: PDouble; __berr: PDouble; __work: Pointer;
          __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztprfs_';
        function ztptri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztptri_';
        function ztptrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __Ap: Pointer; __B: Pointer; __ldb: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztptrs_';
        function ztpttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __Ap: Pointer; __arf: Pointer; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztpttf_';
        function ztpttr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __A: Pointer; __lda: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztpttr_';
        function ztrcon_(__norm: MarshaledAString; __Uplo: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __rcond: PDouble; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrcon_';
        function ztrevc_(__Side: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: Pointer; __ldt: PLongInt;
          __vl: Pointer; __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt;
          __mm: PLongInt; __M: PLongInt; __work: Pointer; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrevc_';
        function ztrexc_(__compq: MarshaledAString; __N: PLongInt; __t: Pointer;
          __ldt: PLongInt; __Q: Pointer; __ldq: PLongInt; __ifst: PLongInt;
          __ilst: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrexc_';
        function ztrrfs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __X: Pointer; __ldx: PLongInt; __ferr: PDouble; __berr: PDouble;
          __work: Pointer; __rwork: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrrfs_';
        function ztrsen_(__job: MarshaledAString; __compq: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: Pointer; __ldt: PLongInt;
          __Q: Pointer; __ldq: PLongInt; __w: Pointer; __M: PLongInt;
          __S: PDouble; __sep: PDouble; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrsen_';
        function ztrsna_(__job: MarshaledAString; __howmny: MarshaledAString;
          __select: PLongInt; __N: PLongInt; __t: Pointer; __ldt: PLongInt;
          __vl: Pointer; __ldvl: PLongInt; __vr: Pointer; __ldvr: PLongInt;
          __S: PDouble; __sep: PDouble; __mm: PLongInt; __M: PLongInt;
          __work: Pointer; __ldwork: PLongInt; __rwork: PDouble;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrsna_';
        function ztrsyl_(__trana: MarshaledAString; __tranb: MarshaledAString;
          __isgn: PLongInt; __M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __B: Pointer; __ldb: PLongInt; __c__: Pointer;
          __ldc: PLongInt; __scale: PDouble; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrsyl_';
        function ztrti2_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztrti2_';
        function ztrtri_(__Uplo: MarshaledAString; __Diag: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'ztrtri_';
        function ztrtrs_(__Uplo: MarshaledAString; __Trans: MarshaledAString;
          __Diag: MarshaledAString; __N: PLongInt; __nrhs: PLongInt;
          __A: Pointer; __lda: PLongInt; __B: Pointer; __ldb: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrtrs_';
        function ztrttf_(__transr: MarshaledAString; __Uplo: MarshaledAString;
          __N: PLongInt; __A: Pointer; __lda: PLongInt; __arf: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrttf_';
        function ztrttp_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __Ap: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztrttp_';
        function ztzrqf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztzrqf_';
        function ztzrzf_(__M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'ztzrzf_';
        function zung2l_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zung2l_';
        function zung2r_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zung2r_';
        function zungbr_(__vect: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: Pointer; __lda: PLongInt; __tau: Pointer;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zungbr_';
        function zunghr_(__N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunghr_';
        function zungl2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zungl2_';
        function zunglq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunglq_';
        function zungql_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zungql_';
        function zungqr_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zungqr_';
        function zungr2_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zungr2_';
        function zungrq_(__M: PLongInt; __N: PLongInt; __K: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __work: Pointer;
          __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zungrq_';
        function zungtr_(__Uplo: MarshaledAString; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zungtr_';
        function zunm2l_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunm2l_';
        function zunm2r_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunm2r_';
        function zunmbr_(__vect: MarshaledAString; __Side: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __K: PLongInt; __A: Pointer; __lda: PLongInt; __tau: Pointer;
          __c__: Pointer; __ldc: PLongInt; __work: Pointer; __lwork: PLongInt;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmbr_';
        function zunmhr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __ilo: PLongInt; __ihi: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zunmhr_';
        function zunml2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunml2_';
        function zunmlq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmlq_';
        function zunmql_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmql_';
        function zunmqr_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmqr_';
        function zunmr2_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmr2_';
        function zunmr3_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmr3_';
        function zunmrq_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmrq_';
        function zunmrz_(__Side: MarshaledAString; __Trans: MarshaledAString;
          __M: PLongInt; __N: PLongInt; __K: PLongInt; __L: PLongInt;
          __A: Pointer; __lda: PLongInt; __tau: Pointer; __c__: Pointer;
          __ldc: PLongInt; __work: Pointer; __lwork: PLongInt; __info: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'zunmrz_';
        function zunmtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt; __A: Pointer;
          __lda: PLongInt; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __lwork: PLongInt; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zunmtr_';
        function zupgtr_(__Uplo: MarshaledAString; __N: PLongInt; __Ap: Pointer;
          __tau: Pointer; __Q: Pointer; __ldq: PLongInt; __work: Pointer;
          __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zupgtr_';
        function zupmtr_(__Side: MarshaledAString; __Uplo: MarshaledAString;
          __Trans: MarshaledAString; __M: PLongInt; __N: PLongInt;
          __Ap: Pointer; __tau: Pointer; __c__: Pointer; __ldc: PLongInt;
          __work: Pointer; __info: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'zupmtr_';
        function dlamc1_(__beta: PLongInt; __t: PLongInt; __rnd: PLongInt;
          __ieee1: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'dlamc1_';
        function slamch_(__cmach: MarshaledAString): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slamch_';
        function slamc1_(__beta: PLongInt; __t: PLongInt; __rnd: PLongInt;
          __ieee1: PLongInt): Integer; cdecl;
          external libAccelerate name _PU + 'slamc1_';
        function slamc2_(__beta: PLongInt; __t: PLongInt; __rnd: PLongInt;
          __eps: PSingle; __emin: PLongInt; __rmin: PSingle; __emax: PLongInt;
          __rmax: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slamc2_';
        function slamc3_(__A: PSingle; __B: PSingle): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'slamc3_';
        function slamc4_(__emin: PLongInt; __Start: PSingle; __base: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'slamc4_';
        function slamc5_(__beta: PLongInt; __P: PLongInt; __emin: PLongInt;
          __ieee: PLongInt; __emax: PLongInt; __rmax: PSingle): Integer; cdecl;
          external libAccelerate name _PU + 'slamc5_';
        function dlamch_(__cmach: MarshaledAString): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlamch_';
        function dlamc2_(__beta: PLongInt; __t: PLongInt; __rnd: PLongInt;
          __eps: PDouble; __emin: PLongInt; __rmin: PDouble; __emax: PLongInt;
          __rmax: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlamc2_';
        function dlamc3_(__A: PDouble; __B: PDouble): __CLPK_doublereal; cdecl;
          external libAccelerate name _PU + 'dlamc3_';
        function dlamc4_(__emin: PLongInt; __Start: PDouble; __base: PLongInt)
          : Integer; cdecl; external libAccelerate name _PU + 'dlamc4_';
        function dlamc5_(__beta: PLongInt; __P: PLongInt; __emin: PLongInt;
          __ieee: PLongInt; __emax: PLongInt; __rmax: PDouble): Integer; cdecl;
          external libAccelerate name _PU + 'dlamc5_';
        function la_retain(&object: la_object_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_retain';
        procedure la_release(&object: la_object_t); cdecl;
          external libAccelerate name _PU + 'la_release';
        procedure la_add_attributes(&object: la_object_t;
          attributes: la_attribute_t); cdecl;
          external libAccelerate name _PU + 'la_add_attributes';
        procedure la_remove_attributes(&object: la_object_t;
          attributes: la_attribute_t); cdecl;
          external libAccelerate name _PU + 'la_remove_attributes';
        function la_status(&object: la_object_t): la_status_t; cdecl;
          external libAccelerate name _PU + 'la_status';
        function la_matrix_from_float_buffer(buffer: PSingle;
          matrix_rows: la_count_t; matrix_cols: la_count_t;
          matrix_row_stride: la_count_t; matrix_hint: la_hint_t;
          attributes: la_attribute_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_matrix_from_float_buffer';
        function la_matrix_from_double_buffer(buffer: PDouble;
          matrix_rows: la_count_t; matrix_cols: la_count_t;
          matrix_row_stride: la_count_t; matrix_hint: la_hint_t;
          attributes: la_attribute_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_matrix_from_double_buffer';
        function la_matrix_from_float_buffer_nocopy(buffer: PSingle;
          matrix_rows: la_count_t; matrix_cols: la_count_t;
          matrix_row_stride: la_count_t; matrix_hint: la_hint_t;
          deallocator: la_deallocator_t; attributes: la_attribute_t)
          : la_object_t; cdecl;
          external libAccelerate name _PU +
          'la_matrix_from_float_buffer_nocopy';
        function la_matrix_from_double_buffer_nocopy(buffer: PDouble;
          matrix_rows: la_count_t; matrix_cols: la_count_t;
          matrix_row_stride: la_count_t; matrix_hint: la_hint_t;
          deallocator: la_deallocator_t; attributes: la_attribute_t)
          : la_object_t; cdecl;
          external libAccelerate name _PU +
          'la_matrix_from_double_buffer_nocopy';
        function la_matrix_to_float_buffer(buffer: PSingle;
          buffer_row_stride: la_count_t; matrix: la_object_t): la_status_t;
          cdecl; external libAccelerate name _PU + 'la_matrix_to_float_buffer';
        function la_matrix_to_double_buffer(buffer: PDouble;
          buffer_row_stride: la_count_t; matrix: la_object_t): la_status_t;
          cdecl; external libAccelerate name _PU + 'la_matrix_to_double_buffer';
        function la_matrix_rows(matrix: la_object_t): la_count_t; cdecl;
          external libAccelerate name _PU + 'la_matrix_rows';
        function la_matrix_cols(matrix: la_object_t): la_count_t; cdecl;
          external libAccelerate name _PU + 'la_matrix_cols';
        function la_matrix_slice(matrix: la_object_t;
          matrix_first_row: la_index_t; matrix_first_col: la_index_t;
          matrix_row_stride: la_index_t; matrix_col_stride: la_index_t;
          slice_rows: la_count_t; slice_cols: la_count_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_matrix_slice';
        function la_identity_matrix(matrix_size: la_count_t;
          scalar_type: la_scalar_type_t; attributes: la_attribute_t)
          : la_object_t; cdecl;
          external libAccelerate name _PU + 'la_identity_matrix';
        function la_diagonal_matrix_from_vector(vector: la_object_t;
          matrix_diagonal: la_index_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_diagonal_matrix_from_vector';
        function la_vector_from_matrix_row(matrix: la_object_t;
          matrix_row: la_count_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_vector_from_matrix_row';
        function la_vector_from_matrix_col(matrix: la_object_t;
          matrix_col: la_count_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_vector_from_matrix_col';
        function la_vector_from_matrix_diagonal(matrix: la_object_t;
          matrix_diagonal: la_index_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_vector_from_matrix_diagonal';
        function la_vector_to_float_buffer(buffer: PSingle;
          buffer_stride: la_index_t; vector: la_object_t): la_status_t; cdecl;
          external libAccelerate name _PU + 'la_vector_to_float_buffer';
        function la_vector_to_double_buffer(buffer: PDouble;
          buffer_stride: la_index_t; vector: la_object_t): la_status_t; cdecl;
          external libAccelerate name _PU + 'la_vector_to_double_buffer';
        function la_vector_length(vector: la_object_t): la_count_t; cdecl;
          external libAccelerate name _PU + 'la_vector_length';
        function la_vector_slice(vector: la_object_t; vector_first: la_index_t;
          vector_stride: la_index_t; slice_length: la_count_t): la_object_t;
          cdecl; external libAccelerate name _PU + 'la_vector_slice';
        function la_splat_from_float(scalar_value: Single;
          attributes: la_attribute_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_splat_from_float';
        function la_splat_from_double(scalar_value: Double;
          attributes: la_attribute_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_splat_from_double';
        function la_splat_from_vector_element(vector: la_object_t;
          vector_index: la_index_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_splat_from_vector_element';
        function la_splat_from_matrix_element(matrix: la_object_t;
          matrix_row: la_index_t; matrix_col: la_index_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_splat_from_matrix_element';
        function la_vector_from_splat(splat: la_object_t;
          vector_length: la_count_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_vector_from_splat';
        function la_matrix_from_splat(splat: la_object_t;
          matrix_rows: la_count_t; matrix_cols: la_count_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_matrix_from_splat';
        function la_transpose(matrix: la_object_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_transpose';
        function la_scale_with_float(matrix: la_object_t; scalar: Single)
          : la_object_t; cdecl;
          external libAccelerate name _PU + 'la_scale_with_float';
        function la_scale_with_double(matrix: la_object_t; scalar: Double)
          : la_object_t; cdecl;
          external libAccelerate name _PU + 'la_scale_with_double';
        function la_sum(obj_left: la_object_t; obj_right: la_object_t)
          : la_object_t; cdecl; external libAccelerate name _PU + 'la_sum';
        function la_difference(obj_left: la_object_t; obj_right: la_object_t)
          : la_object_t; cdecl;
          external libAccelerate name _PU + 'la_difference';
        function la_elementwise_product(obj_left: la_object_t;
          obj_right: la_object_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_elementwise_product';
        function la_inner_product(vector_left: la_object_t;
          vector_right: la_object_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_inner_product';
        function la_outer_product(vector_left: la_object_t;
          vector_right: la_object_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_outer_product';
        function la_matrix_product(matrix_left: la_object_t;
          matrix_right: la_object_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_matrix_product';
        function la_solve(matrix_system: la_object_t; obj_rhs: la_object_t)
          : la_object_t; cdecl; external libAccelerate name _PU + 'la_solve';
        function la_norm_as_float(vector: la_object_t; vector_norm: la_norm_t)
          : Single; cdecl; external libAccelerate name _PU + 'la_norm_as_float';
        function la_norm_as_double(vector: la_object_t; vector_norm: la_norm_t)
          : Double; cdecl; external libAccelerate name _PU +
          'la_norm_as_double';
        function la_normalized_vector(vector: la_object_t;
          vector_norm: la_norm_t): la_object_t; cdecl;
          external libAccelerate name _PU + 'la_normalized_vector';
        function sparse_inner_product_dense_float(nz: sparse_dimension;
          x: PSingle; indx: PInt64; y: PSingle; incy: sparse_stride): Single;
          cdecl; external libAccelerate name _PU +
          'sparse_inner_product_dense_float';
        function sparse_inner_product_dense_double(nz: sparse_dimension;
          x: PDouble; indx: PInt64; y: PDouble; incy: sparse_stride): Double;
          cdecl; external libAccelerate name _PU +
          'sparse_inner_product_dense_double';
        function sparse_inner_product_sparse_float(nzx: sparse_dimension;
          nzy: sparse_dimension; x: PSingle; indx: PInt64; y: PSingle;
          indy: PInt64): Single; cdecl;
          external libAccelerate name _PU + 'sparse_inner_product_sparse_float';
        function sparse_inner_product_sparse_double(nzx: sparse_dimension;
          nzy: sparse_dimension; x: PDouble; indx: PInt64; y: PDouble;
          indy: PInt64): Double; cdecl;
          external libAccelerate name _PU +
          'sparse_inner_product_sparse_double';
        procedure sparse_vector_add_with_scale_dense_float(nz: sparse_dimension;
          alpha: Single; x: PSingle; indx: PInt64; y: PSingle;
          incy: sparse_stride); cdecl;
          external libAccelerate name _PU +
          'sparse_vector_add_with_scale_dense_float';
        procedure sparse_vector_add_with_scale_dense_double
          (nz: sparse_dimension; alpha: Double; x: PDouble; indx: PInt64;
          y: PDouble; incy: sparse_stride); cdecl;
          external libAccelerate name _PU +
          'sparse_vector_add_with_scale_dense_double';
        function sparse_vector_norm_float(nz: sparse_dimension; x: PSingle;
          indx: PInt64; norm: sparse_norm): Single; cdecl;
          external libAccelerate name _PU + 'sparse_vector_norm_float';
        function sparse_vector_norm_double(nz: sparse_dimension; x: PDouble;
          indx: PInt64; norm: sparse_norm): Double; cdecl;
          external libAccelerate name _PU + 'sparse_vector_norm_double';
        function sparse_matrix_vector_product_dense_float(transa: Cardinal;
          alpha: Single; a: sparse_matrix_float; x: PSingle;
          incx: sparse_stride; y: PSingle; incy: sparse_stride): sparse_status;
          cdecl; external libAccelerate name _PU +
          'sparse_matrix_vector_product_dense_float';
        function sparse_matrix_vector_product_dense_double(transa: Cardinal;
          alpha: Double; a: sparse_matrix_double; x: PDouble;
          incx: sparse_stride; y: PDouble; incy: sparse_stride): sparse_status;
          cdecl; external libAccelerate name _PU +
          'sparse_matrix_vector_product_dense_double';
        function sparse_vector_triangular_solve_dense_float(transt: Cardinal;
          alpha: Single; T: sparse_matrix_float; x: PSingle;
          incx: sparse_stride): sparse_status; cdecl;
          external libAccelerate name _PU +
          'sparse_vector_triangular_solve_dense_float';
        function sparse_vector_triangular_solve_dense_double(transt: Cardinal;
          alpha: Double; T: sparse_matrix_double; x: PDouble;
          incx: sparse_stride): sparse_status; cdecl;
          external libAccelerate name _PU +
          'sparse_vector_triangular_solve_dense_double';
        function sparse_outer_product_dense_float(M: sparse_dimension;
          N: sparse_dimension; nz: sparse_dimension; alpha: Single; x: PSingle;
          incx: sparse_stride; y: PSingle; indy: PInt64; c: Pointer)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_outer_product_dense_float';
        function sparse_outer_product_dense_double(M: sparse_dimension;
          N: sparse_dimension; nz: sparse_dimension; alpha: Double; x: PDouble;
          incx: sparse_stride; y: PDouble; indy: PInt64; c: Pointer)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_outer_product_dense_double';
        function sparse_permute_rows_float(a: sparse_matrix_float; perm: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_permute_rows_float';
        function sparse_permute_rows_double(a: sparse_matrix_double;
          perm: PInt64): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_permute_rows_double';
        function sparse_permute_cols_float(a: sparse_matrix_float; perm: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_permute_cols_float';
        function sparse_permute_cols_double(a: sparse_matrix_double;
          perm: PInt64): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_permute_cols_double';
        function sparse_elementwise_norm_float(a: sparse_matrix_float;
          norm: sparse_norm): Single; cdecl;
          external libAccelerate name _PU + 'sparse_elementwise_norm_float';
        function sparse_elementwise_norm_double(a: sparse_matrix_double;
          norm: sparse_norm): Double; cdecl;
          external libAccelerate name _PU + 'sparse_elementwise_norm_double';
        function sparse_operator_norm_float(a: sparse_matrix_float;
          norm: sparse_norm): Single; cdecl;
          external libAccelerate name _PU + 'sparse_operator_norm_float';
        function sparse_operator_norm_double(a: sparse_matrix_double;
          norm: sparse_norm): Double; cdecl;
          external libAccelerate name _PU + 'sparse_operator_norm_double';
        function sparse_matrix_trace_float(a: sparse_matrix_float;
          offset: sparse_index): Single; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_trace_float';
        function sparse_matrix_trace_double(a: sparse_matrix_double;
          offset: sparse_index): Double; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_trace_double';
        function sparse_matrix_product_dense_float(order: Cardinal;
          transa: Cardinal; N: sparse_dimension; alpha: Single;
          a: sparse_matrix_float; b: PSingle; ldb: sparse_dimension; c: PSingle;
          ldc: sparse_dimension): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_product_dense_float';
        function sparse_matrix_product_dense_double(order: Cardinal;
          transa: Cardinal; N: sparse_dimension; alpha: Double;
          a: sparse_matrix_double; b: PDouble; ldb: sparse_dimension;
          c: PDouble; ldc: sparse_dimension): sparse_status; cdecl;
          external libAccelerate name _PU +
          'sparse_matrix_product_dense_double';
        function sparse_matrix_triangular_solve_dense_float(order: Cardinal;
          transt: Cardinal; nrhs: sparse_dimension; alpha: Single;
          T: sparse_matrix_float; b: PSingle; ldb: sparse_dimension)
          : sparse_status; cdecl;
          external libAccelerate name _PU +
          'sparse_matrix_triangular_solve_dense_float';
        function sparse_matrix_triangular_solve_dense_double(order: Cardinal;
          transt: Cardinal; nrhs: sparse_dimension; alpha: Double;
          T: sparse_matrix_double; b: PDouble; ldb: sparse_dimension)
          : sparse_status; cdecl;
          external libAccelerate name _PU +
          'sparse_matrix_triangular_solve_dense_double';
        function sparse_matrix_create_float(M: sparse_dimension;
          N: sparse_dimension): sparse_matrix_float; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_create_float';
        function sparse_matrix_create_double(M: sparse_dimension;
          N: sparse_dimension): sparse_matrix_double; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_create_double';
        function sparse_insert_entry_float(a: sparse_matrix_float; val: Single;
          i: sparse_index; j: sparse_index): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_entry_float';
        function sparse_insert_entry_double(a: sparse_matrix_double;
          val: Double; i: sparse_index; j: sparse_index): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_entry_double';
        function sparse_insert_entries_float(a: sparse_matrix_float;
          N: sparse_dimension; val: PSingle; indx: PInt64; jndx: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_entries_float';
        function sparse_insert_entries_double(a: sparse_matrix_double;
          N: sparse_dimension; val: PDouble; indx: PInt64; jndx: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_entries_double';
        function sparse_insert_col_float(a: sparse_matrix_float;
          j: sparse_index; nz: sparse_dimension; val: PSingle; indx: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_col_float';
        function sparse_insert_col_double(a: sparse_matrix_double;
          j: sparse_index; nz: sparse_dimension; val: PDouble; indx: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_col_double';
        function sparse_insert_row_float(a: sparse_matrix_float;
          i: sparse_index; nz: sparse_dimension; val: PSingle; jndx: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_row_float';
        function sparse_insert_row_double(a: sparse_matrix_double;
          i: sparse_index; nz: sparse_dimension; val: PDouble; jndx: PInt64)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_row_double';
        function sparse_extract_sparse_row_float(a: sparse_matrix_float;
          row: sparse_index; column_start: sparse_index; column_end: PInt64;
          nz: sparse_dimension; val: PSingle; jndx: PInt64): sparse_status;
          cdecl; external libAccelerate name _PU +
          'sparse_extract_sparse_row_float';
        function sparse_extract_sparse_row_double(a: sparse_matrix_double;
          row: sparse_index; column_start: sparse_index; column_end: PInt64;
          nz: sparse_dimension; val: PDouble; jndx: PInt64): sparse_status;
          cdecl; external libAccelerate name _PU +
          'sparse_extract_sparse_row_double';
        function sparse_extract_sparse_column_float(a: sparse_matrix_float;
          column: sparse_index; row_start: sparse_index; row_end: PInt64;
          nz: sparse_dimension; val: PSingle; indx: PInt64): sparse_status;
          cdecl; external libAccelerate name _PU +
          'sparse_extract_sparse_column_float';
        function sparse_extract_sparse_column_double(a: sparse_matrix_double;
          column: sparse_index; row_start: sparse_index; row_end: PInt64;
          nz: sparse_dimension; val: PDouble; indx: PInt64): sparse_status;
          cdecl; external libAccelerate name _PU +
          'sparse_extract_sparse_column_double';
        function sparse_matrix_block_create_float(Mb: sparse_dimension;
          Nb: sparse_dimension; k: sparse_dimension; l: sparse_dimension)
          : sparse_matrix_float; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_block_create_float';
        function sparse_matrix_block_create_double(Mb: sparse_dimension;
          Nb: sparse_dimension; k: sparse_dimension; l: sparse_dimension)
          : sparse_matrix_double; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_block_create_double';
        function sparse_matrix_variable_block_create_float(Mb: sparse_dimension;
          Nb: sparse_dimension; k: PUInt64; l: PUInt64): sparse_matrix_float;
          cdecl; external libAccelerate name _PU +
          'sparse_matrix_variable_block_create_float';
        function sparse_matrix_variable_block_create_double
          (Mb: sparse_dimension; Nb: sparse_dimension; k: PUInt64; l: PUInt64)
          : sparse_matrix_double; cdecl;
          external libAccelerate name _PU +
          'sparse_matrix_variable_block_create_double';
        function sparse_insert_block_float(a: sparse_matrix_float; val: PSingle;
          row_stride: sparse_dimension; col_stride: sparse_dimension;
          bi: sparse_index; bj: sparse_index): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_block_float';
        function sparse_insert_block_double(a: sparse_matrix_double;
          val: PDouble; row_stride: sparse_dimension;
          col_stride: sparse_dimension; bi: sparse_index; bj: sparse_index)
          : sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_insert_block_double';
        function sparse_extract_block_float(a: sparse_matrix_float;
          bi: sparse_index; bj: sparse_index; row_stride: sparse_dimension;
          col_stride: sparse_dimension; val: PSingle): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_extract_block_float';
        function sparse_extract_block_double(a: sparse_matrix_double;
          bi: sparse_index; bj: sparse_index; row_stride: sparse_dimension;
          col_stride: sparse_dimension; val: PDouble): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_extract_block_double';
        function sparse_get_block_dimension_for_row(a: Pointer; i: sparse_index)
          : LongInt; cdecl;
          external libAccelerate name _PU +
          'sparse_get_block_dimension_for_row';
        function sparse_get_block_dimension_for_col(a: Pointer; j: sparse_index)
          : LongInt; cdecl;
          external libAccelerate name _PU +
          'sparse_get_block_dimension_for_col';
        function sparse_commit(a: Pointer): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_commit';
        function sparse_get_matrix_property(a: Pointer;
          pname: sparse_matrix_property): LongInt; cdecl;
          external libAccelerate name _PU + 'sparse_get_matrix_property';
        function sparse_set_matrix_property(a: Pointer;
          pname: sparse_matrix_property): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_set_matrix_property';
        function sparse_get_matrix_number_of_rows(a: Pointer): sparse_dimension;
          cdecl; external libAccelerate name _PU +
          'sparse_get_matrix_number_of_rows';
        function sparse_get_matrix_number_of_columns(a: Pointer)
          : sparse_dimension; cdecl;
          external libAccelerate name _PU +
          'sparse_get_matrix_number_of_columns';
        function sparse_get_matrix_nonzero_count(a: Pointer): LongInt; cdecl;
          external libAccelerate name _PU + 'sparse_get_matrix_nonzero_count';
        function sparse_get_matrix_nonzero_count_for_row(a: Pointer;
          i: sparse_index): LongInt; cdecl;
          external libAccelerate name _PU +
          'sparse_get_matrix_nonzero_count_for_row';
        function sparse_get_matrix_nonzero_count_for_column(a: Pointer;
          j: sparse_index): LongInt; cdecl;
          external libAccelerate name _PU +
          'sparse_get_matrix_nonzero_count_for_column';
        function sparse_matrix_destroy(a: Pointer): sparse_status; cdecl;
          external libAccelerate name _PU + 'sparse_matrix_destroy';
        function sparse_get_vector_nonzero_count_float(N: sparse_dimension;
          x: PSingle; incx: sparse_stride): LongInt; cdecl;
          external libAccelerate name _PU +
          'sparse_get_vector_nonzero_count_float';
        function sparse_get_vector_nonzero_count_double(N: sparse_dimension;
          x: PDouble; incx: sparse_stride): LongInt; cdecl;
          external libAccelerate name _PU +
          'sparse_get_vector_nonzero_count_double';
        function sparse_pack_vector_float(N: sparse_dimension;
          nz: sparse_dimension; x: PSingle; incx: sparse_stride; y: PSingle;
          indy: PInt64): LongInt; cdecl;
          external libAccelerate name _PU + 'sparse_pack_vector_float';
        function sparse_pack_vector_double(N: sparse_dimension;
          nz: sparse_dimension; x: PDouble; incx: sparse_stride; y: PDouble;
          indy: PInt64): LongInt; cdecl;
          external libAccelerate name _PU + 'sparse_pack_vector_double';
        procedure sparse_unpack_vector_float(N: sparse_dimension;
          nz: sparse_dimension; zero: Integer; x: PSingle; indx: PInt64;
          y: PSingle; incy: sparse_stride); cdecl;
          external libAccelerate name _PU + 'sparse_unpack_vector_float';
        procedure sparse_unpack_vector_double(N: sparse_dimension;
          nz: sparse_dimension; zero: Integer; x: PDouble; indx: PInt64;
          y: PDouble; incy: sparse_stride); cdecl;
          external libAccelerate name _PU + 'sparse_unpack_vector_double';
        procedure vvrecf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvrecf';
        procedure vvrec(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvrec';
        procedure vvdivf(param1: PSingle; param2: PSingle; param3: PSingle;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvdivf';
        procedure vvdiv(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvdiv';
        procedure vvsqrtf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsqrtf';
        procedure vvsqrt(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsqrt';
        procedure vvcbrtf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcbrtf';
        procedure vvcbrt(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcbrt';
        procedure vvrsqrtf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvrsqrtf';
        procedure vvrsqrt(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvrsqrt';
        procedure vvexpf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvexpf';
        procedure vvexp(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvexp';
        procedure vvexpm1f(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvexpm1f';
        procedure vvexpm1(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvexpm1';
        procedure vvlogf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlogf';
        procedure vvlog(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlog';
        procedure vvlog10f(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlog10f';
        procedure vvlog10(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlog10';
        procedure vvlog1pf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlog1pf';
        procedure vvlog1p(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlog1p';
        procedure vvlogbf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlogbf';
        procedure vvlogb(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlogb';
        procedure vvfabf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvfabf';
        procedure vvfabsf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvfabsf';
        procedure vvfabs(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvfabs';
        procedure vvpowf(param1: PSingle; param2: PSingle; param3: PSingle;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvpowf';
        procedure vvpow(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvpow';
        procedure vvpowsf(param1: PSingle; param2: PSingle; param3: PSingle;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvpowsf';
        procedure vvpows(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvpows';
        procedure vvsinf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsinf';
        procedure vvsin(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsin';
        procedure vvcosf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcosf';
        procedure vvcos(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcos';
        procedure vvtanf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvtanf';
        procedure vvtan(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvtan';
        procedure vvasinf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvasinf';
        procedure vvasin(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvasin';
        procedure vvacosf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvacosf';
        procedure vvacos(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvacos';
        procedure vvatanf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvatanf';
        procedure vvatan(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvatan';
        procedure vvatan2f(param1: PSingle; param2: PSingle; param3: PSingle;
          param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvatan2f';
        procedure vvatan2(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvatan2';
        procedure vvsincosf(param1: PSingle; param2: PSingle; param3: PSingle;
          param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvsincosf';
        procedure vvsincos(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvsincos';
        procedure vvcosisinf(param1: { <Type::Complex> from float };
          param2: PSingle; param3: PInteger); cdecl;
          external libAccelerate name _PU + 'vvcosisinf';
        procedure vvcosisin(param1: { <Type::Complex> from double };
          param2: PDouble; param3: PInteger); cdecl;
          external libAccelerate name _PU + 'vvcosisin';
        procedure vvsinhf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsinhf';
        procedure vvsinh(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsinh';
        procedure vvcoshf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcoshf';
        procedure vvcosh(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcosh';
        procedure vvtanhf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvtanhf';
        procedure vvtanh(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvtanh';
        procedure vvasinhf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvasinhf';
        procedure vvasinh(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvasinh';
        procedure vvacoshf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvacoshf';
        procedure vvacosh(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvacosh';
        procedure vvatanhf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvatanhf';
        procedure vvatanh(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvatanh';
        procedure vvintf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvintf';
        procedure vvint(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvint';
        procedure vvnintf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvnintf';
        procedure vvnint(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvnint';
        procedure vvceilf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvceilf';
        procedure vvceil(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvceil';
        procedure vvfloorf(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvfloorf';
        procedure vvfloor(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvfloor';
        procedure vvfmodf(param1: PSingle; param2: PSingle; param3: PSingle;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvfmodf';
        procedure vvfmod(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl; external libAccelerate name _PU + 'vvfmod';
        procedure vvremainderf(param1: PSingle; param2: PSingle;
          param3: PSingle; param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvremainderf';
        procedure vvremainder(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvremainder';
        procedure vvcopysignf(param1: PSingle; param2: PSingle; param3: PSingle;
          param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvcopysignf';
        procedure vvcopysign(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvcopysign';
        procedure vvnextafterf(param1: PSingle; param2: PSingle;
          param3: PSingle; param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvnextafterf';
        procedure vvnextafter(param1: PDouble; param2: PDouble; param3: PDouble;
          param4: PInteger); cdecl;
          external libAccelerate name _PU + 'vvnextafter';
        procedure vvlog2f(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlog2f';
        procedure vvlog2(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvlog2';
        procedure vvexp2f(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvexp2f';
        procedure vvexp2(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvexp2';
        procedure vvsinpif(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsinpif';
        procedure vvsinpi(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvsinpi';
        procedure vvcospif(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcospif';
        procedure vvcospi(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvcospi';
        procedure vvtanpif(param1: PSingle; param2: PSingle; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvtanpif';
        procedure vvtanpi(param1: PDouble; param2: PDouble; param3: PInteger);
          cdecl; external libAccelerate name _PU + 'vvtanpi';
        function vImageAlphaBlend_Planar8(srcTop: Pointer; srcTopAlpha: Pointer;
          srcBottom: Pointer; srcBottomAlpha: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAlphaBlend_Planar8';
        function vImageAlphaBlend_PlanarF(srcTop: Pointer; srcTopAlpha: Pointer;
          srcBottom: Pointer; srcBottomAlpha: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAlphaBlend_PlanarF';
        function vImageAlphaBlend_ARGB8888(srcTop: Pointer; srcBottom: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAlphaBlend_ARGB8888';
        function vImageAlphaBlend_ARGBFFFF(srcTop: Pointer; srcBottom: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAlphaBlend_ARGBFFFF';
        function vImagePremultipliedAlphaBlend_Planar8(srcTop: Pointer;
          srcTopAlpha: Pointer; srcBottom: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlend_Planar8';
        function vImagePremultipliedAlphaBlend_PlanarF(srcTop: Pointer;
          srcTopAlpha: Pointer; srcBottom: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlend_PlanarF';
        function vImagePremultipliedAlphaBlend_ARGB8888(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlend_ARGB8888';
        function vImagePremultipliedAlphaBlend_BGRA8888(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlend_BGRA8888';
        function vImagePremultipliedAlphaBlend_ARGBFFFF(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlend_ARGBFFFF';
        function vImagePremultipliedAlphaBlend_BGRAFFFF(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlend_BGRAFFFF';
        function vImagePremultipliedAlphaBlendWithPermute_ARGB8888
          (srcTop: Pointer; srcBottom: Pointer; dest: Pointer; permuteMap: Byte;
          makeDestAlphaOpaque: Integer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlendWithPermute_ARGB8888';
        function vImagePremultipliedAlphaBlendWithPermute_RGBA8888
          (srcTop: Pointer; srcBottom: Pointer; dest: Pointer; permuteMap: Byte;
          makeDestAlphaOpaque: Integer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlendWithPermute_RGBA8888';
        function vImagePremultipliedAlphaBlendMultiply_RGBA8888(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlendMultiply_RGBA8888';
        function vImagePremultipliedAlphaBlendScreen_RGBA8888(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlendScreen_RGBA8888';
        function vImagePremultipliedAlphaBlendDarken_RGBA8888(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlendDarken_RGBA8888';
        function vImagePremultipliedAlphaBlendLighten_RGBA8888(srcTop: Pointer;
          srcBottom: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImagePremultipliedAlphaBlendLighten_RGBA8888';
        function vImagePremultiplyData_Planar8(src: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_Planar8';
        function vImagePremultiplyData_PlanarF(src: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_PlanarF';
        function vImagePremultiplyData_ARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_ARGB8888';
        function vImagePremultiplyData_ARGBFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_ARGBFFFF';
        function vImagePremultiplyData_RGBA8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_RGBA8888';
        function vImagePremultiplyData_RGBAFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_RGBAFFFF';
        function vImagePremultiplyData_ARGB16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_ARGB16U';
        function vImagePremultiplyData_RGBA16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_RGBA16U';
        function vImagePremultiplyData_ARGB16Q12(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_ARGB16Q12';
        function vImagePremultiplyData_RGBA16Q12(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePremultiplyData_RGBA16Q12';
        function vImageUnpremultiplyData_Planar8(src: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_Planar8';
        function vImageUnpremultiplyData_PlanarF(src: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_PlanarF';
        function vImageUnpremultiplyData_ARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_ARGB8888';
        function vImageUnpremultiplyData_RGBA8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_RGBA8888';
        function vImageUnpremultiplyData_ARGBFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_ARGBFFFF';
        function vImageUnpremultiplyData_RGBAFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_RGBAFFFF';
        function vImageUnpremultiplyData_ARGB16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_ARGB16U';
        function vImageUnpremultiplyData_RGBA16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_RGBA16U';
        function vImageUnpremultiplyData_ARGB16Q12(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_ARGB16Q12';
        function vImageUnpremultiplyData_RGBA16Q12(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageUnpremultiplyData_RGBA16Q12';
        function vImagePremultipliedConstAlphaBlend_Planar8(srcTop: Pointer;
          constAlpha: Pixel_8; srcTopAlpha: Pointer; srcBottom: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePremultipliedConstAlphaBlend_Planar8';
        function vImagePremultipliedConstAlphaBlend_PlanarF(srcTop: Pointer;
          constAlpha: Pixel_F; srcTopAlpha: Pointer; srcBottom: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePremultipliedConstAlphaBlend_PlanarF';
        function vImagePremultipliedConstAlphaBlend_ARGB8888(srcTop: Pointer;
          constAlpha: Pixel_8; srcBottom: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePremultipliedConstAlphaBlend_ARGB8888';
        function vImagePremultipliedConstAlphaBlend_ARGBFFFF(srcTop: Pointer;
          constAlpha: Pixel_F; srcBottom: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePremultipliedConstAlphaBlend_ARGBFFFF';
        function vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8
          (srcTop: Pointer; srcTopAlpha: Pointer; srcBottom: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8';
        function vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF
          (srcTop: Pointer; srcTopAlpha: Pointer; srcBottom: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF';
        function vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888
          (srcTop: Pointer; srcBottom: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888';
        function vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF
          (srcTop: Pointer; srcBottom: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF';
        function vImageClipToAlpha_Planar8(src: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageClipToAlpha_Planar8';
        function vImageClipToAlpha_PlanarF(src: Pointer; alpha: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageClipToAlpha_PlanarF';
        function vImageClipToAlpha_ARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageClipToAlpha_ARGB8888';
        function vImageClipToAlpha_ARGBFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageClipToAlpha_ARGBFFFF';
        function vImageClipToAlpha_RGBA8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageClipToAlpha_RGBA8888';
        function vImageClipToAlpha_RGBAFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageClipToAlpha_RGBAFFFF';
        function vImageConvolve_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSmallInt;
          kernel_height: LongWord; kernel_width: LongWord; divisor: Int32;
          backgroundColor: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolve_Planar8';
        function vImageConvolve_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: LongWord; kernel_width: LongWord;
          backgroundColor: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolve_PlanarF';
        function vImageConvolve_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSmallInt;
          kernel_height: LongWord; kernel_width: LongWord; divisor: Int32;
          backgroundColor: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolve_ARGB8888';
        function vImageConvolve_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: LongWord; kernel_width: LongWord;
          backgroundColor: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolve_ARGBFFFF';
        function vImageConvolveWithBias_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSmallInt;
          kernel_height: LongWord; kernel_width: LongWord; divisor: Int32;
          bias: Int32; backgroundColor: Pixel_8; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolveWithBias_Planar8';
        function vImageConvolveWithBias_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: LongWord; kernel_width: LongWord; bias: Single;
          backgroundColor: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolveWithBias_PlanarF';
        function vImageConvolveWithBias_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSmallInt;
          kernel_height: LongWord; kernel_width: LongWord; divisor: Int32;
          bias: Int32; backgroundColor: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolveWithBias_ARGB8888';
        function vImageConvolveWithBias_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: LongWord; kernel_width: LongWord; bias: Single;
          backgroundColor: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvolveWithBias_ARGBFFFF';
        function vImageConvolveMultiKernel_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernels: PSmallInt;
          kernel_height: LongWord; kernel_width: LongWord; divisors: Int32;
          biases: Int32; backgroundColor: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvolveMultiKernel_ARGB8888';
        function vImageConvolveMultiKernel_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernels: PSingle;
          kernel_height: LongWord; kernel_width: LongWord; biases: Single;
          backgroundColor: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvolveMultiKernel_ARGBFFFF';
        function vImageRichardsonLucyDeConvolve_Planar8(src: Pointer;
          dest: Pointer; tempBuffer: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSmallInt;
          kernel2: PSmallInt; kernel_height: LongWord; kernel_width: LongWord;
          kernel_height2: LongWord; kernel_width2: LongWord; divisor: Int32;
          divisor2: Int32; backgroundColor: Pixel_8; iterationCount: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageRichardsonLucyDeConvolve_Planar8';
        function vImageRichardsonLucyDeConvolve_PlanarF(src: Pointer;
          dest: Pointer; tempBuffer: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle; kernel2: PSingle;
          kernel_height: LongWord; kernel_width: LongWord;
          kernel_height2: LongWord; kernel_width2: LongWord;
          backgroundColor: Pixel_F; iterationCount: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageRichardsonLucyDeConvolve_PlanarF';
        function vImageRichardsonLucyDeConvolve_ARGB8888(src: Pointer;
          dest: Pointer; tempBuffer: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSmallInt;
          kernel2: PSmallInt; kernel_height: LongWord; kernel_width: LongWord;
          kernel_height2: LongWord; kernel_width2: LongWord; divisor: Int32;
          divisor2: Int32; backgroundColor: Byte; iterationCount: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageRichardsonLucyDeConvolve_ARGB8888';
        function vImageRichardsonLucyDeConvolve_ARGBFFFF(src: Pointer;
          dest: Pointer; tempBuffer: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle; kernel2: PSingle;
          kernel_height: LongWord; kernel_width: LongWord;
          kernel_height2: LongWord; kernel_width2: LongWord;
          backgroundColor: Single; iterationCount: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageRichardsonLucyDeConvolve_ARGBFFFF';
        function vImageBoxConvolve_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: LongWord;
          kernel_width: LongWord; backgroundColor: Pixel_8; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBoxConvolve_Planar8';
        function vImageBoxConvolve_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: LongWord;
          kernel_width: LongWord; backgroundColor: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBoxConvolve_ARGB8888';
        function vImageTentConvolve_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: LongWord;
          kernel_width: LongWord; backgroundColor: Pixel_8; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageTentConvolve_Planar8';
        function vImageTentConvolve_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: LongWord;
          kernel_width: LongWord; backgroundColor: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageTentConvolve_ARGB8888';
        function vImageClip_PlanarF(src: Pointer; dest: Pointer;
          maxFloat: Pixel_F; minFloat: Pixel_F; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageClip_PlanarF';
        function vImageConvert_Planar8toPlanarF(src: Pointer; dest: Pointer;
          maxFloat: Pixel_F; minFloat: Pixel_F; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toPlanarF';
        function vImageConvert_PlanarFtoPlanar8(src: Pointer; dest: Pointer;
          maxFloat: Pixel_F; minFloat: Pixel_F; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFtoPlanar8';
        function vImageConvert_PlanarFtoPlanar8_dithered(src: Pointer;
          dest: Pointer; maxFloat: Pixel_F; minFloat: Pixel_F; dither: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_PlanarFtoPlanar8_dithered';
        function vImageConvert_RGBFFFtoRGB888_dithered(src: Pointer;
          dest: Pointer; maxFloat: Pixel_F; minFloat: Pixel_F; dither: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_RGBFFFtoRGB888_dithered';
        function vImageConvert_ARGBFFFFtoARGB8888_dithered(src: Pointer;
          dest: Pointer; maxFloat: Single; minFloat: Single; dither: Integer;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGBFFFFtoARGB8888_dithered';
        function vImageConvert_Planar8toARGB8888(srcA: Pointer; srcR: Pointer;
          srcG: Pointer; srcB: Pointer; dest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toARGB8888';
        function vImageConvert_PlanarFtoARGBFFFF(srcA: Pointer; srcR: Pointer;
          srcG: Pointer; srcB: Pointer; dest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFtoARGBFFFF';
        function vImageConvert_ARGB8888toPlanar8(srcARGB: Pointer;
          destA: Pointer; destR: Pointer; destG: Pointer; destB: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB8888toPlanar8';
        function vImageConvert_ARGBFFFFtoPlanarF(srcARGB: Pointer;
          destA: Pointer; destR: Pointer; destG: Pointer; destB: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGBFFFFtoPlanarF';
        function vImageConvert_ChunkyToPlanar8(srcChannels: Pointer;
          destPlanarBuffers: Pointer; channelCount: Cardinal;
          srcStrideBytes: LongWord; srcWidth: vImagePixelCount;
          srcHeight: vImagePixelCount; srcRowBytes: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ChunkyToPlanar8';
        function vImageConvert_PlanarToChunky8(srcPlanarBuffers: Pointer;
          destChannels: Pointer; channelCount: Cardinal;
          destStrideBytes: LongWord; destWidth: vImagePixelCount;
          destHeight: vImagePixelCount; destRowBytes: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarToChunky8';
        function vImageConvert_ChunkyToPlanarF(srcChannels: Pointer;
          destPlanarBuffers: Pointer; channelCount: Cardinal;
          srcStrideBytes: LongWord; srcWidth: vImagePixelCount;
          srcHeight: vImagePixelCount; srcRowBytes: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ChunkyToPlanarF';
        function vImageConvert_PlanarToChunkyF(srcPlanarBuffers: Pointer;
          destChannels: Pointer; channelCount: Cardinal;
          destStrideBytes: LongWord; destWidth: vImagePixelCount;
          destHeight: vImagePixelCount; destRowBytes: LongWord;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarToChunkyF';
        function vImageConvert_16SToF(src: Pointer; dest: Pointer;
          offset: Single; scale: Single; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageConvert_16SToF';
        function vImageConvert_16UToF(src: Pointer; dest: Pointer;
          offset: Single; scale: Single; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageConvert_16UToF';
        function vImageConvert_FTo16S(src: Pointer; dest: Pointer;
          offset: Single; scale: Single; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageConvert_FTo16S';
        function vImageConvert_FTo16U(src: Pointer; dest: Pointer;
          offset: Single; scale: Single; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageConvert_FTo16U';
        function vImageConvert_16Uto16F(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_16Uto16F';
        function vImageConvert_16Fto16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_16Fto16U';
        function vImageTableLookUp_ARGB8888(src: Pointer; dest: Pointer;
          alphaTable: Pixel_8; redTable: Pixel_8; greenTable: Pixel_8;
          blueTable: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageTableLookUp_ARGB8888';
        function vImageTableLookUp_Planar8(src: Pointer; dest: Pointer;
          table: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageTableLookUp_Planar8';
        function vImageOverwriteChannels_ARGB8888(newSrc: Pointer;
          origSrc: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageOverwriteChannels_ARGB8888';
        function vImageOverwriteChannels_ARGBFFFF(newSrc: Pointer;
          origSrc: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageOverwriteChannels_ARGBFFFF';
        function vImageOverwriteChannelsWithScalar_Planar8(scalar: Pixel_8;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithScalar_Planar8';
        function vImageOverwriteChannelsWithScalar_PlanarF(scalar: Pixel_F;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithScalar_PlanarF';
        function vImageOverwriteChannelsWithScalar_Planar16S(scalar: Pixel_16S;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithScalar_Planar16S';
        function vImageOverwriteChannelsWithScalar_Planar16U(scalar: Pixel_16U;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithScalar_Planar16U';
        function vImageExtractChannel_ARGB8888(src: Pointer; dest: Pointer;
          channelIndex: LongInt; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageExtractChannel_ARGB8888';
        function vImageExtractChannel_ARGB16U(src: Pointer; dest: Pointer;
          channelIndex: LongInt; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageExtractChannel_ARGB16U';
        function vImageExtractChannel_ARGBFFFF(src: Pointer; dest: Pointer;
          channelIndex: LongInt; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageExtractChannel_ARGBFFFF';
        function vImageBufferFill_ARGB8888(dest: Pointer; color: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBufferFill_ARGB8888';
        function vImageBufferFill_ARGB16U(dest: Pointer; color: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBufferFill_ARGB16U';
        function vImageBufferFill_ARGB16S(dest: Pointer; color: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBufferFill_ARGB16S';
        function vImageBufferFill_ARGBFFFF(dest: Pointer; color: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBufferFill_ARGBFFFF';
        function vImageOverwriteChannelsWithScalar_ARGB8888(scalar: Pixel_8;
          src: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithScalar_ARGB8888';
        function vImageOverwriteChannelsWithScalar_ARGBFFFF(scalar: Pixel_F;
          src: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithScalar_ARGBFFFF';
        function vImagePermuteChannels_ARGB8888(src: Pointer; dest: Pointer;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePermuteChannels_ARGB8888';
        function vImagePermuteChannels_ARGB16U(src: Pointer; dest: Pointer;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePermuteChannels_ARGB16U';
        function vImagePermuteChannels_ARGBFFFF(src: Pointer; dest: Pointer;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePermuteChannels_ARGBFFFF';
        function vImagePermuteChannelsWithMaskedInsert_ARGB8888(src: Pointer;
          dest: Pointer; permuteMap: Byte; copyMask: Byte;
          backgroundColor: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePermuteChannelsWithMaskedInsert_ARGB8888';
        function vImagePermuteChannelsWithMaskedInsert_ARGBFFFF(src: Pointer;
          dest: Pointer; permuteMap: Byte; copyMask: Byte;
          backgroundColor: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePermuteChannelsWithMaskedInsert_ARGBFFFF';
        function vImageConvert_ARGB8888toPlanarF(src: Pointer; alpha: Pointer;
          red: Pointer; green: Pointer; blue: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB8888toPlanarF';
        function vImageConvert_ARGBFFFFtoPlanar8(src: Pointer; alpha: Pointer;
          red: Pointer; green: Pointer; blue: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGBFFFFtoPlanar8';
        function vImageConvert_ARGBFFFFtoRGBFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGBFFFFtoRGBFFF';
        function vImageConvert_RGBAFFFFtoRGBFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBAFFFFtoRGBFFF';
        function vImageConvert_BGRAFFFFtoRGBFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_BGRAFFFFtoRGBFFF';
        function vImageConvert_RGBFFFtoARGBFFFF(param1: Pointer;
          param2: Pointer; param3: Pixel_F; param4: Pointer; param5: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBFFFtoARGBFFFF';
        function vImageConvert_RGBFFFtoRGBAFFFF(param1: Pointer;
          param2: Pointer; param3: Pixel_F; param4: Pointer; param5: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBFFFtoRGBAFFFF';
        function vImageConvert_RGBFFFtoBGRAFFFF(param1: Pointer;
          param2: Pointer; param3: Pixel_F; param4: Pointer; param5: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBFFFtoBGRAFFFF';
        function vImageConvert_ARGB1555toPlanar8(src: Pointer; destA: Pointer;
          destR: Pointer; destG: Pointer; destB: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB1555toPlanar8';
        function vImageConvert_ARGB1555toARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB1555toARGB8888';
        function vImageConvert_Planar8toARGB1555(srcA: Pointer; srcR: Pointer;
          srcG: Pointer; srcB: Pointer; dest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toARGB1555';
        function vImageConvert_ARGB8888toARGB1555(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB8888toARGB1555';
        function vImageConvert_RGB565toARGB8888(alpha: Pixel_8; src: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB565toARGB8888';
        function vImageConvert_RGB565toRGBA8888(alpha: Pixel_8; src: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB565toRGBA8888';
        function vImageConvert_RGB565toBGRA8888(alpha: Pixel_8; src: Pointer;
          dest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB565toBGRA8888';
        function vImageConvert_RGB565toRGB888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB565toRGB888';
        function vImageConvert_ARGB8888toRGB565(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB8888toRGB565';
        function vImageConvert_RGBA8888toRGB565(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBA8888toRGB565';
        function vImageConvert_BGRA8888toRGB565(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_BGRA8888toRGB565';
        function vImageConvert_RGB565toPlanar8(src: Pointer; destR: Pointer;
          destG: Pointer; destB: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_RGB565toPlanar8';
        function vImageConvert_Planar8toRGB565(srcR: Pointer; srcG: Pointer;
          srcB: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_Planar8toRGB565';
        function vImageConvert_RGBA5551toRGB565(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBA5551toRGB565';
        function vImageConvert_ARGB1555toRGB565(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB1555toRGB565';
        function vImageConvert_RGB565toRGBA5551(src: Pointer; dest: Pointer;
          dither: Integer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB565toRGBA5551';
        function vImageConvert_RGB565toARGB1555(src: Pointer; dest: Pointer;
          dither: Integer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB565toARGB1555';
        function vImageConvert_Planar16FtoPlanarF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar16FtoPlanarF';
        function vImageConvert_PlanarFtoPlanar16F(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFtoPlanar16F';
        function vImageConvert_Planar8toPlanar16F(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toPlanar16F';
        function vImageConvert_Planar16FtoPlanar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar16FtoPlanar8';
        function vImageConvert_16UToPlanar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_16UToPlanar8';
        function vImageConvert_Planar8To16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8To16U';
        function vImageConvert_RGB888toARGB8888(param1: Pointer;
          param2: Pointer; param3: Pixel_8; param4: Pointer; param5: Integer;
          param6: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB888toARGB8888';
        function vImageConvert_RGB888toRGBA8888(param1: Pointer;
          param2: Pointer; param3: Pixel_8; param4: Pointer; param5: Integer;
          param6: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB888toRGBA8888';
        function vImageConvert_RGB888toBGRA8888(param1: Pointer;
          param2: Pointer; param3: Pixel_8; param4: Pointer; param5: Integer;
          param6: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB888toBGRA8888';
        function vImageConvert_ARGB8888toRGB888(param1: Pointer;
          param2: Pointer; param3: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB8888toRGB888';
        function vImageConvert_RGBA8888toRGB888(param1: Pointer;
          param2: Pointer; param3: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBA8888toRGB888';
        function vImageConvert_BGRA8888toRGB888(param1: Pointer;
          param2: Pointer; param3: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_BGRA8888toRGB888';
        function vImageFlatten_ARGB8888ToRGB888(param1: Pointer;
          param2: Pointer; param3: Byte; param4: Integer; param5: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_ARGB8888ToRGB888';
        function vImageFlatten_ARGBFFFFToRGBFFF(param1: Pointer;
          param2: Pointer; param3: Single; param4: Integer;
          param5: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_ARGBFFFFToRGBFFF';
        function vImageFlatten_RGBA8888ToRGB888(param1: Pointer;
          param2: Pointer; param3: Byte; param4: Integer; param5: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_RGBA8888ToRGB888';
        function vImageFlatten_RGBAFFFFToRGBFFF(param1: Pointer;
          param2: Pointer; param3: Single; param4: Integer;
          param5: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_RGBAFFFFToRGBFFF';
        function vImageFlatten_BGRA8888ToRGB888(param1: Pointer;
          param2: Pointer; param3: Byte; param4: Integer; param5: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_BGRA8888ToRGB888';
        function vImageFlatten_BGRAFFFFToRGBFFF(param1: Pointer;
          param2: Pointer; param3: Single; param4: Integer;
          param5: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_BGRAFFFFToRGBFFF';
        function vImageConvert_Planar8toRGB888(planarRed: Pointer;
          planarGreen: Pointer; planarBlue: Pointer; rgbDest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toRGB888';
        function vImageConvert_PlanarFtoRGBFFF(planarRed: Pointer;
          planarGreen: Pointer; planarBlue: Pointer; rgbDest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFtoRGBFFF';
        function vImageConvert_RGB888toPlanar8(rgbSrc: Pointer;
          redDest: Pointer; greenDest: Pointer; blueDest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB888toPlanar8';
        function vImageConvert_RGBFFFtoPlanarF(rgbSrc: Pointer;
          redDest: Pointer; greenDest: Pointer; blueDest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBFFFtoPlanarF';
        function vImageSelectChannels_ARGB8888(newSrc: Pointer;
          origSrc: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageSelectChannels_ARGB8888';
        function vImageSelectChannels_ARGBFFFF(newSrc: Pointer;
          origSrc: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageSelectChannels_ARGBFFFF';
        function vImageOverwriteChannelsWithPixel_ARGB8888(the_pixel: Byte;
          src: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithPixel_ARGB8888';
        function vImageOverwriteChannelsWithPixel_ARGB16U(the_pixel: Word;
          src: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithPixel_ARGB16U';
        function vImageOverwriteChannelsWithPixel_ARGBFFFF(the_pixel: Single;
          src: Pointer; dest: Pointer; copyMask: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageOverwriteChannelsWithPixel_ARGBFFFF';
        function vImageConvert_Planar8ToXRGB8888(alpha: Pixel_8; red: Pointer;
          green: Pointer; blue: Pointer; dest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8ToXRGB8888';
        function vImageConvert_Planar8ToBGRX8888(blue: Pointer; green: Pointer;
          red: Pointer; alpha: Pixel_8; dest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8ToBGRX8888';
        function vImageConvert_PlanarFToXRGBFFFF(alpha: Pixel_F; red: Pointer;
          green: Pointer; blue: Pointer; dest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFToXRGBFFFF';
        function vImageConvert_PlanarFToBGRXFFFF(blue: Pointer; green: Pointer;
          red: Pointer; alpha: Pixel_F; dest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFToBGRXFFFF';
        function vImageConvert_XRGB8888ToPlanar8(src: Pointer; red: Pointer;
          green: Pointer; blue: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_XRGB8888ToPlanar8';
        function vImageConvert_BGRX8888ToPlanar8(src: Pointer; blue: Pointer;
          green: Pointer; red: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_BGRX8888ToPlanar8';
        function vImageConvert_XRGBFFFFToPlanarF(src: Pointer; red: Pointer;
          green: Pointer; blue: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_XRGBFFFFToPlanarF';
        function vImageConvert_BGRXFFFFToPlanarF(src: Pointer; blue: Pointer;
          green: Pointer; red: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_BGRXFFFFToPlanarF';
        function vImageConvert_Planar8ToARGBFFFF(alpha: Pointer; red: Pointer;
          green: Pointer; blue: Pointer; dest: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8ToARGBFFFF';
        function vImageConvert_Planar8ToXRGBFFFF(alpha: Pixel_F; red: Pointer;
          green: Pointer; blue: Pointer; dest: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8ToXRGBFFFF';
        function vImageConvert_Planar8ToBGRXFFFF(blue: Pointer; green: Pointer;
          red: Pointer; alpha: Pixel_F; dest: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8ToBGRXFFFF';
        function vImageConvert_PlanarFToARGB8888(alpha: Pointer; red: Pointer;
          green: Pointer; blue: Pointer; dest: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFToARGB8888';
        function vImageConvert_PlanarFToXRGB8888(alpha: Pixel_8; red: Pointer;
          green: Pointer; blue: Pointer; dest: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFToXRGB8888';
        function vImageConvert_PlanarFToBGRX8888(blue: Pointer; green: Pointer;
          red: Pointer; alpha: Pixel_8; dest: Pointer; maxFloat: Single;
          minFloat: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_PlanarFToBGRX8888';
        function vImageConvert_RGB16UtoARGB16U(rgbSrc: Pointer; aSrc: Pointer;
          alpha: Pixel_16U; argbDest: Pointer; premultiply: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB16UtoARGB16U';
        function vImageConvert_RGB16UtoRGBA16U(rgbSrc: Pointer; aSrc: Pointer;
          alpha: Pixel_16U; rgbaDest: Pointer; premultiply: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB16UtoRGBA16U';
        function vImageConvert_RGB16UtoBGRA16U(rgbSrc: Pointer; aSrc: Pointer;
          alpha: Pixel_16U; bgraDest: Pointer; premultiply: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB16UtoBGRA16U';
        function vImageConvert_ARGB16UtoRGB16U(argbSrc: Pointer;
          rgbDest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB16UtoRGB16U';
        function vImageConvert_RGBA16UtoRGB16U(rgbaSrc: Pointer;
          rgbDest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGBA16UtoRGB16U';
        function vImageConvert_BGRA16UtoRGB16U(bgraSrc: Pointer;
          rgbDest: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_BGRA16UtoRGB16U';
        function vImageConvert_Planar16UtoARGB16U(aSrc: Pointer; rSrc: Pointer;
          gSrc: Pointer; bSrc: Pointer; argbDest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar16UtoARGB16U';
        function vImageConvert_ARGB16UtoPlanar16U(argbSrc: Pointer;
          aDest: Pointer; rDest: Pointer; gDest: Pointer; bDest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB16UtoPlanar16U';
        function vImageConvert_Planar16UtoRGB16U(rSrc: Pointer; gSrc: Pointer;
          bSrc: Pointer; rgbDest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_Planar16UtoRGB16U';
        function vImageConvert_RGB16UtoPlanar16U(rgbSrc: Pointer;
          rDest: Pointer; gDest: Pointer; bDest: Pointer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB16UtoPlanar16U';
        function vImageConvert_ARGB16UToARGB8888(src: Pointer; dest: Pointer;
          permuteMap: Byte; copyMask: Byte; backgroundColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB16UToARGB8888';
        function vImageConvert_ARGB8888ToARGB16U(src: Pointer; dest: Pointer;
          permuteMap: Byte; copyMask: Byte; backgroundColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB8888ToARGB16U';
        function vImageConvert_RGB16UToARGB8888(src: Pointer; dest: Pointer;
          permuteMap: Byte; copyMask: Byte; backgroundColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_RGB16UToARGB8888';
        function vImageConvert_ARGB8888ToRGB16U(src: Pointer; dest: Pointer;
          permuteMap: Byte; copyMask: Byte; backgroundColor: Pixel_16U;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_ARGB8888ToRGB16U';
        function vImageByteSwap_Planar16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageByteSwap_Planar16U';
        function vImageFlatten_ARGB8888(argbSrc: Pointer; argbDst: Pointer;
          argbBackgroundColorPtr: Byte; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_ARGB8888';
        function vImageFlatten_RGBA8888(rgbaSrc: Pointer; rgbaDst: Pointer;
          rgbaBackgroundColorPtr: Byte; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_RGBA8888';
        function vImageFlatten_ARGB16U(argbSrc: Pointer; argbDst: Pointer;
          argbBackgroundColorPtr: Word; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_ARGB16U';
        function vImageFlatten_RGBA16U(rgbaSrc: Pointer; rgbaDst: Pointer;
          rgbaBackgroundColorPtr: Word; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_RGBA16U';
        function vImageFlatten_ARGB16Q12(argbSrc: Pointer; argbDst: Pointer;
          argbBackgroundColorPtr: Int16; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_ARGB16Q12';
        function vImageFlatten_RGBA16Q12(argbSrc: Pointer; argbDst: Pointer;
          argbBackgroundColorPtr: Int16; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_RGBA16Q12';
        function vImageFlatten_ARGBFFFF(argbSrc: Pointer; argbDst: Pointer;
          argbBackgroundColorPtr: Single; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_ARGBFFFF';
        function vImageFlatten_RGBAFFFF(rgbaSrc: Pointer; rgbaDst: Pointer;
          rgbaBackgroundColorPtr: Single; isImagePremultiplied: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageFlatten_RGBAFFFF';
        function vImageConvert_Planar1toPlanar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar1toPlanar8';
        function vImageConvert_Planar2toPlanar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar2toPlanar8';
        function vImageConvert_Planar4toPlanar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar4toPlanar8';
        function vImageConvert_Indexed1toPlanar8(src: Pointer; dest: Pointer;
          colors: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Indexed1toPlanar8';
        function vImageConvert_Indexed2toPlanar8(src: Pointer; dest: Pointer;
          colors: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Indexed2toPlanar8';
        function vImageConvert_Indexed4toPlanar8(src: Pointer; dest: Pointer;
          colors: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Indexed4toPlanar8';
        function vImageConvert_Planar8toPlanar1(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; dither: Integer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toPlanar1';
        function vImageConvert_Planar8toPlanar2(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; dither: Integer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toPlanar2';
        function vImageConvert_Planar8toPlanar4(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; dither: Integer; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toPlanar4';
        function vImageConvert_Planar8toIndexed1(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; colors: Pixel_8; dither: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toIndexed1';
        function vImageConvert_Planar8toIndexed2(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; colors: Pixel_8; dither: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toIndexed2';
        function vImageConvert_Planar8toIndexed4(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; colors: Pixel_8; dither: Integer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Planar8toIndexed4';
        function vImageConvert_8to16Q12(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_8to16Q12';
        function vImageConvert_RGB888toPlanar16Q12(src: Pointer; red: Pointer;
          green: Pointer; blue: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_RGB888toPlanar16Q12';
        function vImageConvert_ARGB8888toPlanar16Q12(src: Pointer;
          alpha: Pointer; red: Pointer; green: Pointer; blue: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888toPlanar16Q12';
        function vImageConvert_16Q12to8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_16Q12to8';
        function vImageConvert_Planar16Q12toRGB888(red: Pointer; green: Pointer;
          blue: Pointer; dest: Pointer; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_Planar16Q12toRGB888';
        function vImageConvert_Planar16Q12toARGB8888(alpha: Pointer;
          red: Pointer; green: Pointer; blue: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_Planar16Q12toARGB8888';
        function vImageConvert_16Q12toF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_16Q12toF';
        function vImageConvert_Fto16Q12(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_Fto16Q12';
        function vImageConvert_16Q12to16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_16Q12to16U';
        function vImageConvert_16Uto16Q12(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_16Uto16Q12';
        function vImageConvert_YpCbCrToARGB_GenerateConversion(matrix: Pointer;
          pixelRange: Pointer; outInfo: Pointer; inYpCbCrType: vImageYpCbCrType;
          outARGBType: vImageARGBType; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_YpCbCrToARGB_GenerateConversion';
        function vImageConvert_ARGBToYpCbCr_GenerateConversion(matrix: Pointer;
          pixelRange: Pointer; outInfo: Pointer; inARGBType: vImageARGBType;
          outYpCbCrType: vImageYpCbCrType; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_ARGBToYpCbCr_GenerateConversion';
        function vImageConvert_422YpCbYpCr8ToARGB8888(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; alpha: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_422YpCbYpCr8ToARGB8888';
        function vImageConvert_ARGB8888To422YpCbYpCr8(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To422YpCbYpCr8';
        function vImageConvert_422CbYpCrYp8ToARGB8888(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; alpha: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_422CbYpCrYp8ToARGB8888';
        function vImageConvert_ARGB8888To422CbYpCrYp8(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To422CbYpCrYp8';
        function vImageConvert_422CbYpCrYp8_AA8ToARGB8888(src: Pointer;
          srcA: Pointer; dest: Pointer; info: Pointer; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_422CbYpCrYp8_AA8ToARGB8888';
        function vImageConvert_ARGB8888To422CbYpCrYp8_AA8(src: Pointer;
          dest: Pointer; destA: Pointer; info: Pointer; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To422CbYpCrYp8_AA8';
        function vImageConvert_444AYpCbCr8ToARGB8888(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_444AYpCbCr8ToARGB8888';
        function vImageConvert_ARGB8888To444AYpCbCr8(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To444AYpCbCr8';
        function vImageConvert_444CbYpCrA8ToARGB8888(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_444CbYpCrA8ToARGB8888';
        function vImageConvert_ARGB8888To444CbYpCrA8(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To444CbYpCrA8';
        function vImageConvert_444CrYpCb8ToARGB8888(src: Pointer; dest: Pointer;
          info: Pointer; permuteMap: Byte; alpha: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_444CrYpCb8ToARGB8888';
        function vImageConvert_ARGB8888To444CrYpCb8(src: Pointer; dest: Pointer;
          info: Pointer; permuteMap: Byte; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_ARGB8888To444CrYpCb8';
        function vImageConvert_420Yp8_Cb8_Cr8ToARGB8888(srcYp: Pointer;
          srcCb: Pointer; srcCr: Pointer; dest: Pointer; info: Pointer;
          permuteMap: Byte; alpha: Byte; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageConvert_420Yp8_Cb8_Cr8ToARGB8888';
        function vImageConvert_ARGB8888To420Yp8_Cb8_Cr8(src: Pointer;
          destYp: Pointer; destCb: Pointer; destCr: Pointer; info: Pointer;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To420Yp8_Cb8_Cr8';
        function vImageConvert_420Yp8_CbCr8ToARGB8888(srcYp: Pointer;
          srcCbCr: Pointer; dest: Pointer; info: Pointer; permuteMap: Byte;
          alpha: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_420Yp8_CbCr8ToARGB8888';
        function vImageConvert_ARGB8888To420Yp8_CbCr8(src: Pointer;
          destYp: Pointer; destCbCr: Pointer; info: Pointer; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To420Yp8_CbCr8';
        function vImageConvert_444AYpCbCr16ToARGB8888(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_444AYpCbCr16ToARGB8888';
        function vImageConvert_ARGB8888To444AYpCbCr16(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To444AYpCbCr16';
        function vImageConvert_444AYpCbCr16ToARGB16U(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_444AYpCbCr16ToARGB16U';
        function vImageConvert_ARGB16UTo444AYpCbCr16(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB16UTo444AYpCbCr16';
        function vImageConvert_444CrYpCb10ToARGB8888(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; alpha: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_444CrYpCb10ToARGB8888';
        function vImageConvert_ARGB8888To444CrYpCb10(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To444CrYpCb10';
        function vImageConvert_444CrYpCb10ToARGB16Q12(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; alpha: Pixel_16Q12;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_444CrYpCb10ToARGB16Q12';
        function vImageConvert_ARGB16Q12To444CrYpCb10(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB16Q12To444CrYpCb10';
        function vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB8888
          (src: Pointer; dest: Pointer; info: Pointer; permuteMap: Byte;
          alpha: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB8888';
        function vImageConvert_ARGB8888To422CrYpCbYpCbYpCbYpCrYpCrYp10
          (src: Pointer; dest: Pointer; info: Pointer; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To422CrYpCbYpCbYpCbYpCrYpCrYp10';
        function vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB16Q12
          (src: Pointer; dest: Pointer; info: Pointer; permuteMap: Byte;
          alpha: Pixel_16Q12; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB16Q12';
        function vImageConvert_ARGB16Q12To422CrYpCbYpCbYpCbYpCrYpCrYp10
          (src: Pointer; dest: Pointer; info: Pointer; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB16Q12To422CrYpCbYpCbYpCbYpCrYpCrYp10';
        function vImageConvert_422CbYpCrYp16ToARGB8888(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; alpha: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_422CbYpCrYp16ToARGB8888';
        function vImageConvert_ARGB8888To422CbYpCrYp16(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888To422CbYpCrYp16';
        function vImageConvert_422CbYpCrYp16ToARGB16U(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; alpha: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_422CbYpCrYp16ToARGB16U';
        function vImageConvert_ARGB16UTo422CbYpCrYp16(src: Pointer;
          dest: Pointer; info: Pointer; permuteMap: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB16UTo422CbYpCrYp16';
        function vImageConvert_RGBA1010102ToARGB8888(src: Pointer;
          dest: Pointer; RGB101010RangeMin: Int32; RGB101010RangeMax: Int32;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_RGBA1010102ToARGB8888';
        function vImageConvert_ARGB8888ToRGBA1010102(src: Pointer;
          dest: Pointer; RGB101010RangeMin: Int32; RGB101010RangeMax: Int32;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB8888ToRGBA1010102';
        function vImageConvert_RGBA1010102ToARGB16Q12(src: Pointer;
          dest: Pointer; RGB101010RangeMin: Int32; RGB101010RangeMax: Int32;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_RGBA1010102ToARGB16Q12';
        function vImageConvert_ARGB16Q12ToRGBA1010102(src: Pointer;
          dest: Pointer; RGB101010RangeMin: Int32; RGB101010RangeMax: Int32;
          RGB101010Min: Int32; RGB101010Max: Int32; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB16Q12ToRGBA1010102';
        function vImageConvert_RGBA1010102ToARGB16U(src: Pointer; dest: Pointer;
          RGB101010RangeMin: Int32; RGB101010RangeMax: Int32; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_RGBA1010102ToARGB16U';
        function vImageConvert_ARGB16UToRGBA1010102(src: Pointer; dest: Pointer;
          RGB101010RangeMin: Int32; RGB101010RangeMax: Int32; permuteMap: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConvert_ARGB16UToRGBA1010102';
        function vImagePermuteChannels_RGB888(src: Pointer; dest: Pointer;
          permuteMap: Byte; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePermuteChannels_RGB888';
        function vImageCopyBuffer(src: Pointer; dest: Pointer;
          pixelSize: LongWord; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageCopyBuffer';
        function vImageRotate_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; angleInRadians: Single; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate_Planar8';
        function vImageRotate_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; angleInRadians: Single; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate_PlanarF';
        function vImageRotate_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; angleInRadians: Single; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate_ARGB8888';
        function vImageRotate_ARGB16U(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; angleInRadians: Single; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate_ARGB16U';
        function vImageRotate_ARGB16S(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; angleInRadians: Single; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate_ARGB16S';
        function vImageRotate_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; angleInRadians: Single; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate_ARGBFFFF';
        function vImageScale_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_Planar8';
        function vImageScale_Planar16S(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_Planar16S';
        function vImageScale_Planar16U(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_Planar16U';
        function vImageScale_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_PlanarF';
        function vImageScale_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_ARGB8888';
        function vImageScale_ARGB16U(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_ARGB16U';
        function vImageScale_ARGB16S(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_ARGB16S';
        function vImageScale_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageScale_ARGBFFFF';
        function vImageAffineWarp_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarp_Planar8';
        function vImageAffineWarp_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarp_PlanarF';
        function vImageAffineWarp_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarp_ARGB8888';
        function vImageAffineWarp_ARGB16U(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarp_ARGB16U';
        function vImageAffineWarp_ARGB16S(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarp_ARGB16S';
        function vImageAffineWarp_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarp_ARGBFFFF';
        function vImageAffineWarpD_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpD_Planar8';
        function vImageAffineWarpD_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpD_PlanarF';
        function vImageAffineWarpD_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpD_ARGB8888';
        function vImageAffineWarpD_ARGB16U(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpD_ARGB16U';
        function vImageAffineWarpD_ARGB16S(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpD_ARGB16S';
        function vImageAffineWarpD_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpD_ARGBFFFF';
        function vImageAffineWarpCG_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpCG_Planar8';
        function vImageAffineWarpCG_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpCG_PlanarF';
        function vImageAffineWarpCG_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpCG_ARGB8888';
        function vImageAffineWarpCG_ARGB16U(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpCG_ARGB16U';
        function vImageAffineWarpCG_ARGB16S(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpCG_ARGB16S';
        function vImageAffineWarpCG_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; transform: Pointer; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageAffineWarpCG_ARGBFFFF';
        function vImageHorizontalReflect_Planar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalReflect_Planar8';
        function vImageHorizontalReflect_Planar16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalReflect_Planar16U';
        function vImageHorizontalReflect_PlanarF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalReflect_PlanarF';
        function vImageHorizontalReflect_ARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalReflect_ARGB8888';
        function vImageHorizontalReflect_ARGB16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalReflect_ARGB16U';
        function vImageHorizontalReflect_ARGB16S(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalReflect_ARGB16S';
        function vImageHorizontalReflect_ARGBFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalReflect_ARGBFFFF';
        function vImageVerticalReflect_Planar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalReflect_Planar8';
        function vImageVerticalReflect_Planar16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalReflect_Planar16U';
        function vImageVerticalReflect_PlanarF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalReflect_PlanarF';
        function vImageVerticalReflect_ARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalReflect_ARGB8888';
        function vImageVerticalReflect_ARGB16U(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalReflect_ARGB16U';
        function vImageVerticalReflect_ARGB16S(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalReflect_ARGB16S';
        function vImageVerticalReflect_ARGBFFFF(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalReflect_ARGBFFFF';
        function vImageRotate90_Planar8(src: Pointer; dest: Pointer;
          rotationConstant: Byte; backColor: Pixel_8; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate90_Planar8';
        function vImageRotate90_Planar16U(src: Pointer; dest: Pointer;
          rotationConstant: Byte; backColor: Pixel_16U; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate90_Planar16U';
        function vImageRotate90_PlanarF(src: Pointer; dest: Pointer;
          rotationConstant: Byte; backColor: Pixel_F; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate90_PlanarF';
        function vImageRotate90_ARGB8888(src: Pointer; dest: Pointer;
          rotationConstant: Byte; backColor: Byte; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate90_ARGB8888';
        function vImageRotate90_ARGB16U(src: Pointer; dest: Pointer;
          rotationConstant: Byte; backColor: Word; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate90_ARGB16U';
        function vImageRotate90_ARGB16S(src: Pointer; dest: Pointer;
          rotationConstant: Byte; backColor: Int16; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate90_ARGB16S';
        function vImageRotate90_ARGBFFFF(src: Pointer; dest: Pointer;
          rotationConstant: Byte; backColor: Single; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageRotate90_ARGBFFFF';
        function vImageHorizontalShear_Planar8(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_Planar8';
        function vImageHorizontalShear_Planar16S(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_16S;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_Planar16S';
        function vImageHorizontalShear_Planar16U(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_16U;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_Planar16U';
        function vImageHorizontalShear_PlanarF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_PlanarF';
        function vImageHorizontalShear_ARGB8888(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_ARGB8888';
        function vImageHorizontalShear_ARGB16U(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_ARGB16U';
        function vImageHorizontalShear_ARGB16S(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_ARGB16S';
        function vImageHorizontalShear_ARGBFFFF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShear_ARGBFFFF';
        function vImageVerticalShear_Planar8(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_Planar8';
        function vImageVerticalShear_Planar16S(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_16S;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_Planar16S';
        function vImageVerticalShear_Planar16U(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_16U;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_Planar16U';
        function vImageVerticalShear_PlanarF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_PlanarF';
        function vImageVerticalShear_ARGB8888(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_ARGB8888';
        function vImageVerticalShear_ARGB16U(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_ARGB16U';
        function vImageVerticalShear_ARGB16S(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_ARGB16S';
        function vImageVerticalShear_ARGBFFFF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Single;
          shearSlope: Single; filter: ResamplingFilter; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShear_ARGBFFFF';
        function vImageHorizontalShearD_Planar8(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShearD_Planar8';
        function vImageHorizontalShearD_PlanarF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShearD_PlanarF';
        function vImageHorizontalShearD_ARGB8888(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShearD_ARGB8888';
        function vImageHorizontalShearD_ARGB16U(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShearD_ARGB16U';
        function vImageHorizontalShearD_ARGB16S(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShearD_ARGB16S';
        function vImageHorizontalShearD_ARGBFFFF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; xTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageHorizontalShearD_ARGBFFFF';
        function vImageVerticalShearD_Planar8(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Pixel_8;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShearD_Planar8';
        function vImageVerticalShearD_PlanarF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShearD_PlanarF';
        function vImageVerticalShearD_ARGB8888(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Byte;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShearD_ARGB8888';
        function vImageVerticalShearD_ARGB16U(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Word;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShearD_ARGB16U';
        function vImageVerticalShearD_ARGB16S(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Int16;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShearD_ARGB16S';
        function vImageVerticalShearD_ARGBFFFF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; yTranslate: Double;
          shearSlope: Double; filter: ResamplingFilter; backColor: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageVerticalShearD_ARGBFFFF';
        function vImageNewResamplingFilter(scale: Single; flags: vImage_Flags)
          : ResamplingFilter; cdecl;
          external libAccelerate name _PU + 'vImageNewResamplingFilter';
        procedure vImageDestroyResamplingFilter(filter: ResamplingFilter);
          cdecl; external libAccelerate name _PU +
          'vImageDestroyResamplingFilter';
        function vImageNewResamplingFilterForFunctionUsingBuffer
          (filter: ResamplingFilter; scale: Single;
          kernelFunc: TAccelerateKernelFunc; kernelWidth: Single;
          userData: Pointer; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageNewResamplingFilterForFunctionUsingBuffer';
        function vImageGetResamplingFilterSize(scale: Single;
          kernelFunc: TAccelerateKernelFunc; kernelWidth: Single;
          flags: vImage_Flags): LongWord; cdecl;
          external libAccelerate name _PU + 'vImageGetResamplingFilterSize';
        function vImageGetResamplingFilterExtent(filter: ResamplingFilter;
          flags: vImage_Flags): vImagePixelCount; cdecl;
          external libAccelerate name _PU + 'vImageGetResamplingFilterExtent';
        function vImageHistogramCalculation_Planar8(src: Pointer;
          histogram: PLongWord; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramCalculation_Planar8';
        function vImageHistogramCalculation_PlanarF(src: Pointer;
          histogram: PLongWord; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramCalculation_PlanarF';
        function vImageHistogramCalculation_ARGB8888(src: Pointer;
          histogram: PLongWord; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramCalculation_ARGB8888';
        function vImageHistogramCalculation_ARGBFFFF(src: Pointer;
          histogram: PLongWord; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramCalculation_ARGBFFFF';
        function vImageEqualization_Planar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageEqualization_Planar8';
        function vImageEqualization_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageEqualization_PlanarF';
        function vImageEqualization_ARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageEqualization_ARGB8888';
        function vImageEqualization_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageEqualization_ARGBFFFF';
        function vImageHistogramSpecification_Planar8(src: Pointer;
          dest: Pointer; desired_histogram: PLongWord; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramSpecification_Planar8';
        function vImageHistogramSpecification_PlanarF(src: Pointer;
          dest: Pointer; tempBuffer: Pointer; desired_histogram: PLongWord;
          histogram_entries: Cardinal; minVal: Pixel_F; maxVal: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramSpecification_PlanarF';
        function vImageHistogramSpecification_ARGB8888(src: Pointer;
          dest: Pointer; desired_histogram: PLongWord; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramSpecification_ARGB8888';
        function vImageHistogramSpecification_ARGBFFFF(src: Pointer;
          dest: Pointer; tempBuffer: Pointer; desired_histogram: PLongWord;
          histogram_entries: Cardinal; minVal: Pixel_F; maxVal: Pixel_F;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageHistogramSpecification_ARGBFFFF';
        function vImageContrastStretch_Planar8(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageContrastStretch_Planar8';
        function vImageContrastStretch_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageContrastStretch_PlanarF';
        function vImageContrastStretch_ARGB8888(src: Pointer; dest: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageContrastStretch_ARGB8888';
        function vImageContrastStretch_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageContrastStretch_ARGBFFFF';
        function vImageEndsInContrastStretch_Planar8(src: Pointer;
          dest: Pointer; percent_low: Cardinal; percent_high: Cardinal;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageEndsInContrastStretch_Planar8';
        function vImageEndsInContrastStretch_PlanarF(src: Pointer;
          dest: Pointer; tempBuffer: Pointer; percent_low: Cardinal;
          percent_high: Cardinal; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageEndsInContrastStretch_PlanarF';
        function vImageEndsInContrastStretch_ARGB8888(src: Pointer;
          dest: Pointer; percent_low: Cardinal; percent_high: Cardinal;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageEndsInContrastStretch_ARGB8888';
        function vImageEndsInContrastStretch_ARGBFFFF(src: Pointer;
          dest: Pointer; tempBuffer: Pointer; percent_low: Cardinal;
          percent_high: Cardinal; histogram_entries: Cardinal; minVal: Pixel_F;
          maxVal: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageEndsInContrastStretch_ARGBFFFF';
        function vImageDilate_Planar8(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PByte;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageDilate_Planar8';
        function vImageDilate_PlanarF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageDilate_PlanarF';
        function vImageDilate_ARGB8888(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PByte;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageDilate_ARGB8888';
        function vImageDilate_ARGBFFFF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageDilate_ARGBFFFF';
        function vImageErode_Planar8(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PByte;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageErode_Planar8';
        function vImageErode_PlanarF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageErode_PlanarF';
        function vImageErode_ARGB8888(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PByte;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageErode_ARGB8888';
        function vImageErode_ARGBFFFF(src: Pointer; dest: Pointer;
          srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel: PSingle;
          kernel_height: vImagePixelCount; kernel_width: vImagePixelCount;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageErode_ARGBFFFF';
        function vImageMax_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMax_Planar8';
        function vImageMax_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMax_PlanarF';
        function vImageMax_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMax_ARGB8888';
        function vImageMax_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMax_ARGBFFFF';
        function vImageMin_Planar8(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMin_Planar8';
        function vImageMin_PlanarF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMin_PlanarF';
        function vImageMin_ARGB8888(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMin_ARGB8888';
        function vImageMin_ARGBFFFF(src: Pointer; dest: Pointer;
          tempBuffer: Pointer; srcOffsetToROI_X: vImagePixelCount;
          srcOffsetToROI_Y: vImagePixelCount; kernel_height: vImagePixelCount;
          kernel_width: vImagePixelCount; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU + 'vImageMin_ARGBFFFF';
        function vImagePNGDecompressionFilter(buffer: Pointer;
          startScanline: vImagePixelCount; scanlineCount: vImagePixelCount;
          bitsPerPixel: LongWord; filterMethodNumber: LongWord;
          filterType: LongWord; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePNGDecompressionFilter';
        function vImageMatrixMultiply_Planar16S(srcs: Pointer; dests: Pointer;
          src_planes: LongWord; dest_planes: LongWord; matrix: Int16;
          divisor: Int32; pre_bias: PSmallInt; post_bias: PInt32;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageMatrixMultiply_Planar16S';
        function vImageMatrixMultiply_Planar8(srcs: Pointer; dests: Pointer;
          src_planes: LongWord; dest_planes: LongWord; matrix: Int16;
          divisor: Int32; pre_bias: PSmallInt; post_bias: PInt32;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageMatrixMultiply_Planar8';
        function vImageMatrixMultiply_PlanarF(srcs: Pointer; dests: Pointer;
          src_planes: LongWord; dest_planes: LongWord; matrix: Single;
          pre_bias: PSingle; post_bias: PSingle; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageMatrixMultiply_PlanarF';
        function vImageMatrixMultiply_ARGB8888(src: Pointer; dest: Pointer;
          matrix: Int16; divisor: Int32; pre_bias: PSmallInt; post_bias: PInt32;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageMatrixMultiply_ARGB8888';
        function vImageMatrixMultiply_ARGBFFFF(src: Pointer; dest: Pointer;
          matrix: Single; pre_bias: PSingle; post_bias: PSingle;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageMatrixMultiply_ARGBFFFF';
        function vImageMatrixMultiply_ARGB8888ToPlanar8(src: Pointer;
          dest: Pointer; matrix: Int16; divisor: Int32; pre_bias: Int16;
          post_bias: Int32; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageMatrixMultiply_ARGB8888ToPlanar8';
        function vImageMatrixMultiply_ARGBFFFFToPlanarF(src: Pointer;
          dest: Pointer; matrix: Single; pre_bias: Single; post_bias: Single;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageMatrixMultiply_ARGBFFFFToPlanarF';
        function vImageCreateGammaFunction(gamma: Single; gamma_type: Integer;
          flags: vImage_Flags): GammaFunction; cdecl;
          external libAccelerate name _PU + 'vImageCreateGammaFunction';
        procedure vImageDestroyGammaFunction(f: GammaFunction); cdecl;
          external libAccelerate name _PU + 'vImageDestroyGammaFunction';
        function vImageGamma_Planar8toPlanarF(src: Pointer; dest: Pointer;
          gamma: GammaFunction; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageGamma_Planar8toPlanarF';
        function vImageGamma_PlanarFtoPlanar8(src: Pointer; dest: Pointer;
          gamma: GammaFunction; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageGamma_PlanarFtoPlanar8';
        function vImageGamma_PlanarF(src: Pointer; dest: Pointer;
          gamma: GammaFunction; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageGamma_PlanarF';
        function vImagePiecewiseGamma_Planar8(src: Pointer; dest: Pointer;
          exponentialCoeffs: Single; gamma: Single; linearCoeffs: Single;
          boundary: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePiecewiseGamma_Planar8';
        function vImagePiecewiseGamma_Planar8toPlanar16Q12(src: Pointer;
          dest: Pointer; exponentialCoeffs: Single; gamma: Single;
          linearCoeffs: Single; boundary: Pixel_8; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePiecewiseGamma_Planar8toPlanar16Q12';
        function vImagePiecewiseGamma_Planar16Q12(src: Pointer; dest: Pointer;
          exponentialCoeffs: Single; gamma: Single; linearCoeffs: Single;
          boundary: Pixel_16S; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePiecewiseGamma_Planar16Q12';
        function vImagePiecewiseGamma_Planar16Q12toPlanar8(src: Pointer;
          dest: Pointer; exponentialCoeffs: Single; gamma: Single;
          linearCoeffs: Single; boundary: Pixel_16S; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePiecewiseGamma_Planar16Q12toPlanar8';
        function vImagePiecewiseGamma_Planar8toPlanarF(src: Pointer;
          dest: Pointer; exponentialCoeffs: Single; gamma: Single;
          linearCoeffs: Single; boundary: Pixel_8; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePiecewiseGamma_Planar8toPlanarF';
        function vImagePiecewiseGamma_PlanarF(src: Pointer; dest: Pointer;
          exponentialCoeffs: Single; gamma: Single; linearCoeffs: Single;
          boundary: Single; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePiecewiseGamma_PlanarF';
        function vImagePiecewiseGamma_PlanarFtoPlanar8(src: Pointer;
          dest: Pointer; exponentialCoeffs: Single; gamma: Single;
          linearCoeffs: Single; boundary: Single; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePiecewiseGamma_PlanarFtoPlanar8';
        function vImagePiecewisePolynomial_PlanarF(src: Pointer; dest: Pointer;
          coefficients: PSingle; boundaries: PSingle; order: LongWord;
          log2segments: LongWord; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePiecewisePolynomial_PlanarF';
        function vImagePiecewisePolynomial_Planar8toPlanarF(src: Pointer;
          dest: Pointer; coefficients: PSingle; boundaries: PSingle;
          order: LongWord; log2segments: LongWord; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePiecewisePolynomial_Planar8toPlanarF';
        function vImagePiecewisePolynomial_PlanarFtoPlanar8(src: Pointer;
          dest: Pointer; coefficients: PSingle; boundaries: PSingle;
          order: LongWord; log2segments: LongWord; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImagePiecewisePolynomial_PlanarFtoPlanar8';
        function vImageSymmetricPiecewisePolynomial_PlanarF(src: Pointer;
          dest: Pointer; coefficients: PSingle; boundaries: PSingle;
          order: LongWord; log2segments: LongWord; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageSymmetricPiecewisePolynomial_PlanarF';
        function vImagePiecewiseRational_PlanarF(src: Pointer; dest: Pointer;
          topCoefficients: PSingle; bottomCoefficients: PSingle;
          boundaries: PSingle; topOrder: LongWord; bottomOrder: LongWord;
          log2segments: LongWord; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImagePiecewiseRational_PlanarF';
        function vImageLookupTable_Planar8toPlanar16(src: Pointer;
          dest: Pointer; table: Pixel_16U; flags: vImage_Flags): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageLookupTable_Planar8toPlanar16';
        function vImageLookupTable_Planar8toPlanarF(src: Pointer; dest: Pointer;
          table: Pixel_F; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageLookupTable_Planar8toPlanarF';
        function vImageLookupTable_PlanarFtoPlanar8(src: Pointer; dest: Pointer;
          table: Pixel_8; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageLookupTable_PlanarFtoPlanar8';
        function vImageLookupTable_8to64U(src: Pointer; dest: Pointer;
          LUT: UInt64; flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageLookupTable_8to64U';
        function vImageInterpolatedLookupTable_PlanarF(src: Pointer;
          dest: Pointer; table: PSingle; tableEntries: vImagePixelCount;
          maxFloat: Single; minFloat: Single; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageInterpolatedLookupTable_PlanarF';
        function vImageMultidimensionalTable_Create(tableData: PWord;
          numSrcChannels: LongWord; numDestChannels: LongWord;
          table_entries_per_dimension: Byte; hint: vImageMDTableUsageHint;
          flags: vImage_Flags; err: PLongInt): vImage_MultidimensionalTable;
          cdecl; external libAccelerate name _PU +
          'vImageMultidimensionalTable_Create';
        function vImageMultidimensionalTable_Retain
          (table: vImage_MultidimensionalTable): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageMultidimensionalTable_Retain';
        function vImageMultidimensionalTable_Release
          (table: vImage_MultidimensionalTable): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageMultidimensionalTable_Release';
        function vImageMultiDimensionalInterpolatedLookupTable_PlanarF
          (srcs: vImage_Buffer; dests: vImage_Buffer; tempBuffer: Pointer;
          table: vImage_MultidimensionalTable;
          method: vImage_InterpolationMethod; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageMultiDimensionalInterpolatedLookupTable_PlanarF';
        function vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12
          (srcs: vImage_Buffer; dests: vImage_Buffer; tempBuffer: Pointer;
          table: vImage_MultidimensionalTable;
          method: vImage_InterpolationMethod; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12';
        function vImageBuffer_Init(buf: Pointer; height: vImagePixelCount;
          width: vImagePixelCount; pixelBits: LongWord; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBuffer_Init';
        function vImageBuffer_GetSize(buf: Pointer): CGSize; cdecl;
          external libAccelerate name _PU + 'vImageBuffer_GetSize';
        function vImageCGImageFormat_GetComponentCount(format: Pointer)
          : LongWord; cdecl;
          external libAccelerate name _PU +
          'vImageCGImageFormat_GetComponentCount';
        function vImageCGImageFormat_IsEqual(f1: Pointer; f2: Pointer): Boolean;
          cdecl; external libAccelerate name _PU +
          'vImageCGImageFormat_IsEqual';
        function vImageBuffer_InitWithCGImage(buf: Pointer; format: Pointer;
          backgroundColor: PCGFloat; image: CGImageRef; flags: vImage_Flags)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBuffer_InitWithCGImage';
        function vImageCreateCGImageFromBuffer(buf: Pointer; format: Pointer;
          callback: TAccelerateCallback; userData: Pointer; flags: vImage_Flags;
          error: PLongInt): CGImageRef; cdecl;
          external libAccelerate name _PU + 'vImageCreateCGImageFromBuffer';
        procedure vImageConverter_Retain(converter: vImageConverterRef); cdecl;
          external libAccelerate name _PU + 'vImageConverter_Retain';
        procedure vImageConverter_Release(converter: vImageConverterRef); cdecl;
          external libAccelerate name _PU + 'vImageConverter_Release';
        function vImageConverter_CreateWithCGImageFormat(srcFormat: Pointer;
          destFormat: Pointer; backgroundColor: PCGFloat; flags: vImage_Flags;
          error: PLongInt): vImageConverterRef; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_CreateWithCGImageFormat';
        function vImageConverter_CreateWithColorSyncCodeFragment
          (codeFragment: CFTypeRef; srcFormat: Pointer; destFormat: Pointer;
          backgroundColor: PCGFloat; flags: vImage_Flags; error: PLongInt)
          : vImageConverterRef; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_CreateWithColorSyncCodeFragment';
        function vImageConverter_MustOperateOutOfPlace
          (converter: vImageConverterRef; srcs: Pointer; dests: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_MustOperateOutOfPlace';
        function vImageConverter_GetNumberOfSourceBuffers
          (converter: vImageConverterRef): LongWord; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_GetNumberOfSourceBuffers';
        function vImageConverter_GetNumberOfDestinationBuffers
          (converter: vImageConverterRef): LongWord; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_GetNumberOfDestinationBuffers';
        function vImageConverter_GetSourceBufferOrder
          (converter: vImageConverterRef): PLongWord; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_GetSourceBufferOrder';
        function vImageConverter_GetDestinationBufferOrder
          (converter: vImageConverterRef): PLongWord; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_GetDestinationBufferOrder';
        function vImageConvert_AnyToAny(converter: vImageConverterRef;
          srcs: Pointer; dests: Pointer; tempBuffer: Pointer;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageConvert_AnyToAny';
        function vImageBuffer_InitWithCVPixelBuffer(buffer: Pointer;
          desiredFormat: Pointer; cvPixelBuffer: CVPixelBufferRef;
          cvImageFormat: vImageCVImageFormatRef; backgroundColor: PCGFloat;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageBuffer_InitWithCVPixelBuffer';
        function vImageBuffer_CopyToCVPixelBuffer(buffer: Pointer;
          bufferFormat: Pointer; cvPixelBuffer: CVPixelBufferRef;
          cvImageFormat: vImageCVImageFormatRef; backgroundColor: PCGFloat;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageBuffer_CopyToCVPixelBuffer';
        function vImageCVImageFormat_CreateWithCVPixelBuffer
          (buffer: CVPixelBufferRef): vImageCVImageFormatRef; cdecl;
          external libAccelerate name _PU +
          'vImageCVImageFormat_CreateWithCVPixelBuffer';
        function vImageCVImageFormat_Create(imageFormatType: LongWord;
          matrix: Pointer; cvImageBufferChromaLocation: CFStringRef;
          baseColorspace: CGColorSpaceRef; alphaIsOneHint: Integer)
          : vImageCVImageFormatRef; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_Create';
        function vImageCVImageFormat_Copy(format: vImageConstCVImageFormatRef)
          : vImageCVImageFormatRef; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_Copy';
        procedure vImageCVImageFormat_Retain(fmt: vImageCVImageFormatRef);
          cdecl; external libAccelerate name _PU + 'vImageCVImageFormat_Retain';
        procedure vImageCVImageFormat_Release(fmt: vImageCVImageFormatRef);
          cdecl; external libAccelerate name _PU +
          'vImageCVImageFormat_Release';
        function vImageCVImageFormat_GetFormatCode
          (format: vImageConstCVImageFormatRef): LongWord; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_GetFormatCode';
        function vImageCVImageFormat_GetChannelCount
          (format: vImageConstCVImageFormatRef): LongWord; cdecl;
          external libAccelerate name _PU +
          'vImageCVImageFormat_GetChannelCount';
        function vImageCVImageFormat_GetChannelNames
          (format: vImageConstCVImageFormatRef): PLongWord; cdecl;
          external libAccelerate name _PU +
          'vImageCVImageFormat_GetChannelNames';
        function vImageCVImageFormat_GetColorSpace
          (format: vImageConstCVImageFormatRef): CGColorSpaceRef; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_GetColorSpace';
        function vImageCVImageFormat_SetColorSpace
          (format: vImageCVImageFormatRef; colorSpace: CGColorSpaceRef)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_SetColorSpace';
        function vImageCVImageFormat_GetChromaSiting
          (format: vImageConstCVImageFormatRef): CFStringRef; cdecl;
          external libAccelerate name _PU +
          'vImageCVImageFormat_GetChromaSiting';
        function vImageCVImageFormat_SetChromaSiting
          (format: vImageCVImageFormatRef; siting: CFStringRef): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageCVImageFormat_SetChromaSiting';
        function vImageCVImageFormat_GetConversionMatrix
          (format: vImageConstCVImageFormatRef; outType: PLongWord): Pointer;
          cdecl; external libAccelerate name _PU +
          'vImageCVImageFormat_GetConversionMatrix';
        function vImageCVImageFormat_CopyConversionMatrix
          (format: vImageCVImageFormatRef; matrix: Pointer;
          inType: vImageMatrixType): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageCVImageFormat_CopyConversionMatrix';
        function vImageCVImageFormat_GetAlphaHint
          (format: vImageConstCVImageFormatRef): Integer; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_GetAlphaHint';
        function vImageCVImageFormat_SetAlphaHint
          (format: vImageCVImageFormatRef; alphaIsOne: Integer): vImage_Error;
          cdecl; external libAccelerate name _PU +
          'vImageCVImageFormat_SetAlphaHint';
        function vImageCVImageFormat_GetChannelDescription
          (format: vImageConstCVImageFormatRef; &type: vImageBufferTypeCode)
          : Pointer; cdecl;
          external libAccelerate name _PU +
          'vImageCVImageFormat_GetChannelDescription';
        function vImageCVImageFormat_CopyChannelDescription
          (format: vImageCVImageFormatRef; desc: Pointer;
          &type: vImageBufferTypeCode): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageCVImageFormat_CopyChannelDescription';
        function vImageCVImageFormat_GetUserData
          (format: vImageConstCVImageFormatRef): Pointer; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_GetUserData';
        function vImageCVImageFormat_SetUserData(format: vImageCVImageFormatRef;
          userData: Pointer;
          userDataReleaseCallback: TAccelerateUserDataReleaseCallback)
          : vImage_Error; cdecl;
          external libAccelerate name _PU + 'vImageCVImageFormat_SetUserData';
        function vImageCreateRGBColorSpaceWithPrimariesAndTransferFunction
          (primaries: Pointer; tf: Pointer; intent: CGColorRenderingIntent;
          flags: vImage_Flags; error: PLongInt): CGColorSpaceRef; cdecl;
          external libAccelerate name _PU +
          'vImageCreateRGBColorSpaceWithPrimariesAndTransferFunction';
        function vImageCreateMonochromeColorSpaceWithWhitePointAndTransferFunction
          (whitePoint: Pointer; tf: Pointer; intent: CGColorRenderingIntent;
          flags: vImage_Flags; error: PLongInt): CGColorSpaceRef; cdecl;
          external libAccelerate name _PU +
          'vImageCreateMonochromeColorSpaceWithWhitePointAndTransferFunction';
        function vImageConverter_CreateForCGToCVImageFormat(srcFormat: Pointer;
          destFormat: vImageCVImageFormatRef; backgroundColor: PCGFloat;
          flags: vImage_Flags; error: PLongInt): vImageConverterRef; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_CreateForCGToCVImageFormat';
        function vImageConverter_CreateForCVToCGImageFormat
          (srcFormat: vImageCVImageFormatRef; destFormat: Pointer;
          backgroundColor: PCGFloat; flags: vImage_Flags; error: PLongInt)
          : vImageConverterRef; cdecl;
          external libAccelerate name _PU +
          'vImageConverter_CreateForCVToCGImageFormat';
        function vImageBuffer_InitForCopyToCVPixelBuffer(buffers: Pointer;
          converter: vImageConverterRef; pixelBuffer: CVPixelBufferRef;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageBuffer_InitForCopyToCVPixelBuffer';
        function vImageBuffer_InitForCopyFromCVPixelBuffer(buffers: Pointer;
          converter: vImageConverterRef; pixelBuffer: CVPixelBufferRef;
          flags: vImage_Flags): vImage_Error; cdecl;
          external libAccelerate name _PU +
          'vImageBuffer_InitForCopyFromCVPixelBuffer';

implementation

{$IF defined(IOS) and NOT defined(CPUARM)}

uses
  Posix.Dlfcn;

var
  AccelerateModule: THandle;

{$ENDIF IOS}

function kvImage_YpCbCrToARGBMatrix_ITU_R_601_4: Pointer;
begin
  Result := CocoaPointerConst(libAccelerate,
    'kvImage_YpCbCrToARGBMatrix_ITU_R_601_4');
end;

function kvImage_YpCbCrToARGBMatrix_ITU_R_709_2: Pointer;
begin
  Result := CocoaPointerConst(libAccelerate,
    'kvImage_YpCbCrToARGBMatrix_ITU_R_709_2');
end;

function kvImage_ARGBToYpCbCrMatrix_ITU_R_601_4: Pointer;
begin
  Result := CocoaPointerConst(libAccelerate,
    'kvImage_ARGBToYpCbCrMatrix_ITU_R_601_4');
end;

function kvImage_ARGBToYpCbCrMatrix_ITU_R_709_2: Pointer;
begin
  Result := CocoaPointerConst(libAccelerate,
    'kvImage_ARGBToYpCbCrMatrix_ITU_R_709_2');
end;

function kvImageDecodeArray_16Q12Format: Pointer;
begin
  Result := CocoaPointerConst(libAccelerate, 'kvImageDecodeArray_16Q12Format');
end;

{$IF defined(IOS) and NOT defined(CPUARM)}

initialization

AccelerateModule := dlopen(MarshaledAString(libAccelerate), RTLD_LAZY);

finalization

dlclose(AccelerateModule);
{$ENDIF IOS}

end.
