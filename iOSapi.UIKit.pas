{ *********************************************************** }
{ }
{ CodeGear Delphi Runtime Library }
{ }
{ Copyright(c) 2012-2014 Embarcadero Technologies, Inc. }
{ }
{ *********************************************************** }

//
// Delphi-Objective-C Bridge
// Interfaces for Cocoa framework UIKit
//

unit iOSapi.UIKit;

interface

uses
  Macapi.CoreFoundation,
  Macapi.CoreServices,
  Macapi.Dispatch,
  Macapi.Foundation,
  Macapi.Mach,
  Macapi.ObjCRuntime,
  Macapi.ObjectiveC,
  Macapi.QuartzCore,
  iOSapi.CocoaTypes,
  iOSapi.CoreData,
  iOSapi.CoreGraphics,
  iOSapi.CoreImage,
  iOSapi.CoreText,
  iOSapi.Foundation,
  iOSapi.QuartzCore;

const
  NSUnderlineStyleNone = 0;
  NSUnderlineStyleSingle = 1;
  NSUnderlineStyleThick = 2;
  NSUnderlineStyleDouble = 9;
  NSUnderlinePatternSolid = 0;
  NSUnderlinePatternDot = 256;
  NSUnderlinePatternDash = 512;
  NSUnderlinePatternDashDot = 768;
  NSUnderlinePatternDashDotDot = 1024;
  NSUnderlineByWord = 32768;
  NSWritingDirectionEmbedding = (0 shl 1);
  NSWritingDirectionOverride = (1 shl 1);
  NSTextWritingDirectionEmbedding = (0 shl 1);
  NSTextWritingDirectionOverride = (1 shl 1);
  UIRectEdgeNone = 0;
  UIRectEdgeTop = 1 shl 0;
  UIRectEdgeLeft = 1 shl 1;
  UIRectEdgeBottom = 1 shl 2;
  UIRectEdgeRight = 1 shl 3;
  UIRectEdgeAll = UIRectEdgeTop or UIRectEdgeLeft or UIRectEdgeBottom or
    UIRectEdgeRight;
  NSLayoutRelationLessThanOrEqual = -1;
  NSLayoutRelationEqual = 0;
  NSLayoutRelationGreaterThanOrEqual = 1;
  NSLayoutAttributeLeft = 1;
  NSLayoutAttributeRight = 2;
  NSLayoutAttributeTop = 3;
  NSLayoutAttributeBottom = 4;
  NSLayoutAttributeLeading = 5;
  NSLayoutAttributeTrailing = 6;
  NSLayoutAttributeWidth = 7;
  NSLayoutAttributeHeight = 8;
  NSLayoutAttributeCenterX = 9;
  NSLayoutAttributeCenterY = 10;
  NSLayoutAttributeBaseline = 11;
  NSLayoutAttributeLastBaseline = NSLayoutAttributeBaseline;
  NSLayoutAttributeFirstBaseline = 12;
  NSLayoutAttributeLeftMargin = 13;
  NSLayoutAttributeRightMargin = 14;
  NSLayoutAttributeTopMargin = 15;
  NSLayoutAttributeBottomMargin = 16;
  NSLayoutAttributeLeadingMargin = 17;
  NSLayoutAttributeTrailingMargin = 18;
  NSLayoutAttributeCenterXWithinMargins = 19;
  NSLayoutAttributeCenterYWithinMargins = 20;
  NSLayoutAttributeNotAnAttribute = 0;
  NSLayoutFormatAlignAllLeft = (1 shl NSLayoutAttributeLeft);
  NSLayoutFormatAlignAllRight = (1 shl NSLayoutAttributeRight);
  NSLayoutFormatAlignAllTop = (1 shl NSLayoutAttributeTop);
  NSLayoutFormatAlignAllBottom = (1 shl NSLayoutAttributeBottom);
  NSLayoutFormatAlignAllLeading = (1 shl NSLayoutAttributeLeading);
  NSLayoutFormatAlignAllTrailing = (1 shl NSLayoutAttributeTrailing);
  NSLayoutFormatAlignAllCenterX = (1 shl NSLayoutAttributeCenterX);
  NSLayoutFormatAlignAllCenterY = (1 shl NSLayoutAttributeCenterY);
  NSLayoutFormatAlignAllBaseline = (1 shl NSLayoutAttributeBaseline);
  NSLayoutFormatAlignAllLastBaseline = NSLayoutFormatAlignAllBaseline;
  NSLayoutFormatAlignAllFirstBaseline = (1 shl NSLayoutAttributeFirstBaseline);
  NSLayoutFormatAlignmentMask = 65535;
  NSLayoutFormatDirectionLeadingToTrailing = 0 shl 16;
  NSLayoutFormatDirectionLeftToRight = 1 shl 16;
  NSLayoutFormatDirectionRightToLeft = 2 shl 16;
  NSLayoutFormatDirectionMask = 3 shl 16;
  NSTextStorageEditedAttributes = (1 shl 0);
  NSTextStorageEditedCharacters = (1 shl 1);
  UIFontDescriptorTraitItalic = 1 shl 0;
  UIFontDescriptorTraitBold = 1 shl 1;
  UIFontDescriptorTraitExpanded = 1 shl 5;
  UIFontDescriptorTraitCondensed = 1 shl 6;
  UIFontDescriptorTraitMonoSpace = 1 shl 10;
  UIFontDescriptorTraitVertical = 1 shl 11;
  UIFontDescriptorTraitUIOptimized = 1 shl 12;
  UIFontDescriptorTraitTightLeading = 1 shl 15;
  UIFontDescriptorTraitLooseLeading = 1 shl 16;
  UIFontDescriptorClassMask = 4026531840;
  UIFontDescriptorClassUnknown = 0 shl 28;
  UIFontDescriptorClassOldStyleSerifs = 1 shl 28;
  UIFontDescriptorClassTransitionalSerifs = 2 shl 28;
  UIFontDescriptorClassModernSerifs = 3 shl 28;
  UIFontDescriptorClassClarendonSerifs = 4 shl 28;
  UIFontDescriptorClassSlabSerifs = 5 shl 28;
  UIFontDescriptorClassFreeformSerifs = 7 shl 28;
  UIFontDescriptorClassSansSerif = 8 shl 28;
  UIFontDescriptorClassOrnamentals = 9 shl 28;
  UIFontDescriptorClassScripts = 10 shl 28;
  UIFontDescriptorClassSymbolic = 12 shl 28;
  NSTextLayoutOrientationHorizontal = 0;
  NSTextLayoutOrientationVertical = 1;
  NSGlyphPropertyNull = (1 shl 0);
  NSGlyphPropertyControlCharacter = (1 shl 1);
  NSGlyphPropertyElastic = (1 shl 2);
  NSGlyphPropertyNonBaseCharacter = (1 shl 3);
  NSControlCharacterActionZeroAdvancement = (1 shl 0);
  NSControlCharacterActionWhitespace = (1 shl 1);
  NSControlCharacterActionHorizontalTab = (1 shl 2);
  NSControlCharacterActionLineBreak = (1 shl 3);
  NSControlCharacterActionParagraphBreak = (1 shl 4);
  NSControlCharacterActionContainerBreak = (1 shl 5);
  NSControlCharacterZeroAdvancementAction =
    NSControlCharacterActionZeroAdvancement;
  NSControlCharacterWhitespaceAction = NSControlCharacterActionWhitespace;
  NSControlCharacterHorizontalTabAction = NSControlCharacterActionHorizontalTab;
  NSControlCharacterLineBreakAction = NSControlCharacterActionLineBreak;
  NSControlCharacterParagraphBreakAction =
    NSControlCharacterActionParagraphBreak;
  NSControlCharacterContainerBreakAction =
    NSControlCharacterActionContainerBreak;
  NSTextAlignmentLeft = 0;
  NSTextAlignmentCenter = 1;
  NSTextAlignmentRight = 2;
  NSTextAlignmentJustified = 3;
  NSTextAlignmentNatural = 4;
  NSWritingDirectionNatural = -1;
  NSWritingDirectionLeftToRight = 0;
  NSWritingDirectionRightToLeft = 1;
  NSLineBreakByWordWrapping = 0;
  NSLineBreakByCharWrapping = 1;
  NSLineBreakByClipping = 2;
  NSLineBreakByTruncatingHead = 3;
  NSLineBreakByTruncatingTail = 4;
  NSLineBreakByTruncatingMiddle = 5;
  NSStringDrawingUsesLineFragmentOrigin = 1 shl 0;
  NSStringDrawingUsesFontLeading = 1 shl 1;
  NSStringDrawingUsesDeviceMetrics = 1 shl 3;
  NSStringDrawingTruncatesLastVisibleLine = 1 shl 5;
  NSAttachmentCharacter = 65532;
  UIRectCornerTopLeft = 1 shl 0;
  UIRectCornerTopRight = 1 shl 1;
  UIRectCornerBottomLeft = 1 shl 2;
  UIRectCornerBottomRight = 1 shl 3;
  UIRectCornerAllCorners = not 0;
  UIEventTypeTouches = 0;
  UIEventTypeMotion = 1;
  UIEventTypeRemoteControl = 2;
  UIEventTypePresses = 3;
  UIEventSubtypeNone = 0;
  UIEventSubtypeMotionShake = 1;
  UIEventSubtypeRemoteControlPlay = 100;
  UIEventSubtypeRemoteControlPause = 101;
  UIEventSubtypeRemoteControlStop = 102;
  UIEventSubtypeRemoteControlTogglePlayPause = 103;
  UIEventSubtypeRemoteControlNextTrack = 104;
  UIEventSubtypeRemoteControlPreviousTrack = 105;
  UIEventSubtypeRemoteControlBeginSeekingBackward = 106;
  UIEventSubtypeRemoteControlEndSeekingBackward = 107;
  UIEventSubtypeRemoteControlBeginSeekingForward = 108;
  UIEventSubtypeRemoteControlEndSeekingForward = 109;
  UIKeyModifierAlphaShift = 1 shl 16;
  UIKeyModifierShift = 1 shl 17;
  UIKeyModifierControl = 1 shl 18;
  UIKeyModifierAlternate = 1 shl 19;
  UIKeyModifierCommand = 1 shl 20;
  UIKeyModifierNumericPad = 1 shl 21;
  UIBarStyleDefault = 0;
  UIBarStyleBlack = 1;
  UIBarStyleBlackOpaque = 1;
  UIBarStyleBlackTranslucent = 2;
  UIUserInterfaceSizeClassUnspecified = 0;
  UIUserInterfaceSizeClassCompact = 1;
  UIUserInterfaceSizeClassRegular = 2;
  UIDynamicItemCollisionBoundsTypeRectangle = 0;
  UIDynamicItemCollisionBoundsTypeEllipse = 1;
  UIDynamicItemCollisionBoundsTypePath = 2;
  UIDeviceOrientationUnknown = 0;
  UIDeviceOrientationPortrait = 1;
  UIDeviceOrientationPortraitUpsideDown = 2;
  UIDeviceOrientationLandscapeLeft = 3;
  UIDeviceOrientationLandscapeRight = 4;
  UIDeviceOrientationFaceUp = 5;
  UIDeviceOrientationFaceDown = 6;
  UIDeviceBatteryStateUnknown = 0;
  UIDeviceBatteryStateUnplugged = 1;
  UIDeviceBatteryStateCharging = 2;
  UIDeviceBatteryStateFull = 3;
  UIUserInterfaceIdiomUnspecified = -1;
  UIUserInterfaceIdiomPhone = 0;
  UIUserInterfaceIdiomPad = 1;
  UIUserInterfaceIdiomTV = 2;
  UIUserInterfaceIdiomCarPlay = 3;
  UITouchPhaseBegan = 0;
  UITouchPhaseMoved = 1;
  UITouchPhaseStationary = 2;
  UITouchPhaseEnded = 3;
  UITouchPhaseCancelled = 4;
  UIForceTouchCapabilityUnknown = 0;
  UIForceTouchCapabilityUnavailable = 1;
  UIForceTouchCapabilityAvailable = 2;
  UITouchTypeDirect = 0;
  UITouchTypeIndirect = 1;
  UITouchTypeStylus = 2;
  UITouchPropertyForce = (1 shl 0);
  UITouchPropertyAzimuth = (1 shl 1);
  UITouchPropertyAltitude = (1 shl 2);
  UITouchPropertyLocation = (1 shl 3);
  UIFocusHeadingUp = 1 shl 0;
  UIFocusHeadingDown = 1 shl 1;
  UIFocusHeadingLeft = 1 shl 2;
  UIFocusHeadingRight = 1 shl 3;
  UIFocusHeadingNext = 1 shl 4;
  UIFocusHeadingPrevious = 1 shl 5;
  UIViewAnimationCurveEaseInOut = 0;
  UIViewAnimationCurveEaseIn = 1;
  UIViewAnimationCurveEaseOut = 2;
  UIViewAnimationCurveLinear = 3;
  UIViewContentModeScaleToFill = 0;
  UIViewContentModeScaleAspectFit = 1;
  UIViewContentModeScaleAspectFill = 2;
  UIViewContentModeRedraw = 3;
  UIViewContentModeCenter = 4;
  UIViewContentModeTop = 5;
  UIViewContentModeBottom = 6;
  UIViewContentModeLeft = 7;
  UIViewContentModeRight = 8;
  UIViewContentModeTopLeft = 9;
  UIViewContentModeTopRight = 10;
  UIViewContentModeBottomLeft = 11;
  UIViewContentModeBottomRight = 12;
  UIViewAnimationTransitionNone = 0;
  UIViewAnimationTransitionFlipFromLeft = 1;
  UIViewAnimationTransitionFlipFromRight = 2;
  UIViewAnimationTransitionCurlUp = 3;
  UIViewAnimationTransitionCurlDown = 4;
  UIViewAutoresizingNone = 0;
  UIViewAutoresizingFlexibleLeftMargin = 1 shl 0;
  UIViewAutoresizingFlexibleWidth = 1 shl 1;
  UIViewAutoresizingFlexibleRightMargin = 1 shl 2;
  UIViewAutoresizingFlexibleTopMargin = 1 shl 3;
  UIViewAutoresizingFlexibleHeight = 1 shl 4;
  UIViewAutoresizingFlexibleBottomMargin = 1 shl 5;
  UIViewAnimationOptionLayoutSubviews = 1 shl 0;
  UIViewAnimationOptionAllowUserInteraction = 1 shl 1;
  UIViewAnimationOptionBeginFromCurrentState = 1 shl 2;
  UIViewAnimationOptionRepeat = 1 shl 3;
  UIViewAnimationOptionAutoreverse = 1 shl 4;
  UIViewAnimationOptionOverrideInheritedDuration = 1 shl 5;
  UIViewAnimationOptionOverrideInheritedCurve = 1 shl 6;
  UIViewAnimationOptionAllowAnimatedContent = 1 shl 7;
  UIViewAnimationOptionShowHideTransitionViews = 1 shl 8;
  UIViewAnimationOptionOverrideInheritedOptions = 1 shl 9;
  UIViewAnimationOptionCurveEaseInOut = 0 shl 16;
  UIViewAnimationOptionCurveEaseIn = 1 shl 16;
  UIViewAnimationOptionCurveEaseOut = 2 shl 16;
  UIViewAnimationOptionCurveLinear = 3 shl 16;
  UIViewAnimationOptionTransitionNone = 0 shl 20;
  UIViewAnimationOptionTransitionFlipFromLeft = 1 shl 20;
  UIViewAnimationOptionTransitionFlipFromRight = 2 shl 20;
  UIViewAnimationOptionTransitionCurlUp = 3 shl 20;
  UIViewAnimationOptionTransitionCurlDown = 4 shl 20;
  UIViewAnimationOptionTransitionCrossDissolve = 5 shl 20;
  UIViewAnimationOptionTransitionFlipFromTop = 6 shl 20;
  UIViewAnimationOptionTransitionFlipFromBottom = 7 shl 20;
  UIViewKeyframeAnimationOptionLayoutSubviews =
    UIViewAnimationOptionLayoutSubviews;
  UIViewKeyframeAnimationOptionAllowUserInteraction =
    UIViewAnimationOptionAllowUserInteraction;
  UIViewKeyframeAnimationOptionBeginFromCurrentState =
    UIViewAnimationOptionBeginFromCurrentState;
  UIViewKeyframeAnimationOptionRepeat = UIViewAnimationOptionRepeat;
  UIViewKeyframeAnimationOptionAutoreverse = UIViewAnimationOptionAutoreverse;
  UIViewKeyframeAnimationOptionOverrideInheritedDuration =
    UIViewAnimationOptionOverrideInheritedDuration;
  UIViewKeyframeAnimationOptionOverrideInheritedOptions =
    UIViewAnimationOptionOverrideInheritedOptions;
  UIViewKeyframeAnimationOptionCalculationModeLinear = 0 shl 10;
  UIViewKeyframeAnimationOptionCalculationModeDiscrete = 1 shl 10;
  UIViewKeyframeAnimationOptionCalculationModePaced = 2 shl 10;
  UIViewKeyframeAnimationOptionCalculationModeCubic = 3 shl 10;
  UIViewKeyframeAnimationOptionCalculationModeCubicPaced = 4 shl 10;
  UISystemAnimationDelete = 0;
  UIViewTintAdjustmentModeAutomatic = 0;
  UIViewTintAdjustmentModeNormal = 1;
  UIViewTintAdjustmentModeDimmed = 2;
  UISemanticContentAttributeUnspecified = 0;
  UISemanticContentAttributePlayback = 1;
  UISemanticContentAttributeSpatial = 2;
  UISemanticContentAttributeForceLeftToRight = 3;
  UISemanticContentAttributeForceRightToLeft = 4;
  UIUserInterfaceLayoutDirectionLeftToRight = 0;
  UIUserInterfaceLayoutDirectionRightToLeft = 1;
  UILayoutConstraintAxisHorizontal = 0;
  UILayoutConstraintAxisVertical = 1;
  UIScrollViewIndicatorStyleDefault = 0;
  UIScrollViewIndicatorStyleBlack = 1;
  UIScrollViewIndicatorStyleWhite = 2;
  UIScrollViewKeyboardDismissModeNone = 0;
  UIScrollViewKeyboardDismissModeOnDrag = 1;
  UIScrollViewKeyboardDismissModeInteractive = 2;
  UIGestureRecognizerStatePossible = 0;
  UIGestureRecognizerStateBegan = 1;
  UIGestureRecognizerStateChanged = 2;
  UIGestureRecognizerStateEnded = 3;
  UIGestureRecognizerStateCancelled = 4;
  UIGestureRecognizerStateFailed = 5;
  UIGestureRecognizerStateRecognized = UIGestureRecognizerStateEnded;
  UISwipeGestureRecognizerDirectionRight = 1 shl 0;
  UISwipeGestureRecognizerDirectionLeft = 1 shl 1;
  UISwipeGestureRecognizerDirectionUp = 1 shl 2;
  UISwipeGestureRecognizerDirectionDown = 1 shl 3;
  UILineBreakModeWordWrap = 0;
  UILineBreakModeCharacterWrap = 1;
  UILineBreakModeClip = 2;
  UILineBreakModeHeadTruncation = 3;
  UILineBreakModeTailTruncation = 4;
  UILineBreakModeMiddleTruncation = 5;
  UITextAlignmentLeft = 0;
  UITextAlignmentCenter = 1;
  UITextAlignmentRight = 2;
  UIBaselineAdjustmentAlignBaselines = 0;
  UIBaselineAdjustmentAlignCenters = 1;
  UIBaselineAdjustmentNone = 2;
  UITableViewCellStyleDefault = 0;
  UITableViewCellStyleValue1 = 1;
  UITableViewCellStyleValue2 = 2;
  UITableViewCellStyleSubtitle = 3;
  UITableViewCellSeparatorStyleNone = 0;
  UITableViewCellSeparatorStyleSingleLine = 1;
  UITableViewCellSeparatorStyleSingleLineEtched = 2;
  UITableViewCellSelectionStyleNone = 0;
  UITableViewCellSelectionStyleBlue = 1;
  UITableViewCellSelectionStyleGray = 2;
  UITableViewCellSelectionStyleDefault = 3;
  UITableViewCellFocusStyleDefault = 0;
  UITableViewCellFocusStyleCustom = 1;
  UITableViewCellEditingStyleNone = 0;
  UITableViewCellEditingStyleDelete = 1;
  UITableViewCellEditingStyleInsert = 2;
  UITableViewCellAccessoryNone = 0;
  UITableViewCellAccessoryDisclosureIndicator = 1;
  UITableViewCellAccessoryDetailDisclosureButton = 2;
  UITableViewCellAccessoryCheckmark = 3;
  UITableViewCellAccessoryDetailButton = 4;
  UITableViewCellStateDefaultMask = 0;
  UITableViewCellStateShowingEditControlMask = 1 shl 0;
  UITableViewCellStateShowingDeleteConfirmationMask = 1 shl 1;
  UITableViewStylePlain = 0;
  UITableViewStyleGrouped = 1;
  UITableViewScrollPositionNone = 0;
  UITableViewScrollPositionTop = 1;
  UITableViewScrollPositionMiddle = 2;
  UITableViewScrollPositionBottom = 3;
  UITableViewRowAnimationFade = 0;
  UITableViewRowAnimationRight = 1;
  UITableViewRowAnimationLeft = 2;
  UITableViewRowAnimationTop = 3;
  UITableViewRowAnimationBottom = 4;
  UITableViewRowAnimationNone = 5;
  UITableViewRowAnimationMiddle = 6;
  UITableViewRowAnimationAutomatic = 100;
  UITableViewRowActionStyleDefault = 0;
  UITableViewRowActionStyleDestructive = UITableViewRowActionStyleDefault;
  UITableViewRowActionStyleNormal = 1;
  UIAccessibilityNavigationStyleAutomatic = 0;
  UIAccessibilityNavigationStyleSeparate = 1;
  UIAccessibilityNavigationStyleCombined = 2;
  UIImageOrientationUp = 0;
  UIImageOrientationDown = 1;
  UIImageOrientationLeft = 2;
  UIImageOrientationRight = 3;
  UIImageOrientationUpMirrored = 4;
  UIImageOrientationDownMirrored = 5;
  UIImageOrientationLeftMirrored = 6;
  UIImageOrientationRightMirrored = 7;
  UIImageResizingModeTile = 0;
  UIImageResizingModeStretch = 1;
  UIImageRenderingModeAutomatic = 0;
  UIImageRenderingModeAlwaysOriginal = 1;
  UIImageRenderingModeAlwaysTemplate = 2;
  UIControlEventTouchDown = 1 shl 0;
  UIControlEventTouchDownRepeat = 1 shl 1;
  UIControlEventTouchDragInside = 1 shl 2;
  UIControlEventTouchDragOutside = 1 shl 3;
  UIControlEventTouchDragEnter = 1 shl 4;
  UIControlEventTouchDragExit = 1 shl 5;
  UIControlEventTouchUpInside = 1 shl 6;
  UIControlEventTouchUpOutside = 1 shl 7;
  UIControlEventTouchCancel = 1 shl 8;
  UIControlEventValueChanged = 1 shl 12;
  UIControlEventPrimaryActionTriggered = 1 shl 13;
  UIControlEventEditingDidBegin = 1 shl 16;
  UIControlEventEditingChanged = 1 shl 17;
  UIControlEventEditingDidEnd = 1 shl 18;
  UIControlEventEditingDidEndOnExit = 1 shl 19;
  UIControlEventAllTouchEvents = 4095;
  UIControlEventAllEditingEvents = 983040;
  UIControlEventApplicationReserved = 251658240;
  UIControlEventSystemReserved = 4026531840;
  UIControlEventAllEvents = 4294967295;
  UIControlContentVerticalAlignmentCenter = 0;
  UIControlContentVerticalAlignmentTop = 1;
  UIControlContentVerticalAlignmentBottom = 2;
  UIControlContentVerticalAlignmentFill = 3;
  UIControlContentHorizontalAlignmentCenter = 0;
  UIControlContentHorizontalAlignmentLeft = 1;
  UIControlContentHorizontalAlignmentRight = 2;
  UIControlContentHorizontalAlignmentFill = 3;
  UIControlStateNormal = 0;
  UIControlStateHighlighted = 1 shl 0;
  UIControlStateDisabled = 1 shl 1;
  UIControlStateSelected = 1 shl 2;
  UIControlStateFocused = 1 shl 3;
  UIControlStateApplication = 16711680;
  UIControlStateReserved = 4278190080;
  UIAccessibilityZoomTypeInsertionPoint = 0;
  UIGuidedAccessRestrictionStateAllow = 0;
  UIGuidedAccessRestrictionStateDeny = 1;
  UIAccessibilityScrollDirectionRight = 1;
  UIAccessibilityScrollDirectionLeft = 2;
  UIAccessibilityScrollDirectionUp = 3;
  UIAccessibilityScrollDirectionDown = 4;
  UIAccessibilityScrollDirectionNext = 5;
  UIAccessibilityScrollDirectionPrevious = 6;
  UITextAutocapitalizationTypeNone = 0;
  UITextAutocapitalizationTypeWords = 1;
  UITextAutocapitalizationTypeSentences = 2;
  UITextAutocapitalizationTypeAllCharacters = 3;
  UITextAutocorrectionTypeDefault = 0;
  UITextAutocorrectionTypeNo = 1;
  UITextAutocorrectionTypeYes = 2;
  UITextSpellCheckingTypeDefault = 0;
  UITextSpellCheckingTypeNo = 1;
  UITextSpellCheckingTypeYes = 2;
  UIKeyboardTypeDefault = 0;
  UIKeyboardTypeASCIICapable = 1;
  UIKeyboardTypeNumbersAndPunctuation = 2;
  UIKeyboardTypeURL = 3;
  UIKeyboardTypeNumberPad = 4;
  UIKeyboardTypePhonePad = 5;
  UIKeyboardTypeNamePhonePad = 6;
  UIKeyboardTypeEmailAddress = 7;
  UIKeyboardTypeDecimalPad = 8;
  UIKeyboardTypeTwitter = 9;
  UIKeyboardTypeWebSearch = 10;
  UIKeyboardTypeAlphabet = UIKeyboardTypeASCIICapable;
  UIKeyboardAppearanceDefault = 0;
  UIKeyboardAppearanceDark = 1;
  UIKeyboardAppearanceLight = 2;
  UIKeyboardAppearanceAlert = UIKeyboardAppearanceDark;
  UIReturnKeyDefault = 0;
  UIReturnKeyGo = 1;
  UIReturnKeyGoogle = 2;
  UIReturnKeyJoin = 3;
  UIReturnKeyNext = 4;
  UIReturnKeyRoute = 5;
  UIReturnKeySearch = 6;
  UIReturnKeySend = 7;
  UIReturnKeyYahoo = 8;
  UIReturnKeyDone = 9;
  UIReturnKeyEmergencyCall = 10;
  UIReturnKeyContinue = 11;
  UITextStorageDirectionForward = 0;
  UITextStorageDirectionBackward = 1;
  UITextLayoutDirectionRight = 2;
  UITextLayoutDirectionLeft = 3;
  UITextLayoutDirectionUp = 4;
  UITextLayoutDirectionDown = 5;
  UITextWritingDirectionNatural = -1;
  UITextWritingDirectionLeftToRight = 0;
  UITextWritingDirectionRightToLeft = 1;
  UITextGranularityCharacter = 0;
  UITextGranularityWord = 1;
  UITextGranularitySentence = 2;
  UITextGranularityParagraph = 3;
  UITextGranularityLine = 4;
  UITextGranularityDocument = 5;
  UITextBorderStyleNone = 0;
  UITextBorderStyleLine = 1;
  UITextBorderStyleBezel = 2;
  UITextBorderStyleRoundedRect = 3;
  UITextFieldViewModeNever = 0;
  UITextFieldViewModeWhileEditing = 1;
  UITextFieldViewModeUnlessEditing = 2;
  UITextFieldViewModeAlways = 3;
  UIActionSheetStyleAutomatic = -1;
  UIActionSheetStyleDefault = UIBarStyleDefault;
  UIActionSheetStyleBlackTranslucent = UIBarStyleBlackTranslucent;
  UIActionSheetStyleBlackOpaque = UIBarStyleBlackOpaque;
  UIActivityCategoryAction = 0;
  UIActivityCategoryShare = 1;
  UIActivityIndicatorViewStyleWhiteLarge = 0;
  UIActivityIndicatorViewStyleWhite = 1;
  UIActivityIndicatorViewStyleGray = 2;
  UIAlertViewStyleDefault = 0;
  UIAlertViewStyleSecureTextInput = 1;
  UIAlertViewStylePlainTextInput = 2;
  UIAlertViewStyleLoginAndPasswordInput = 3;
  UIStatusBarStyleDefault = 0;
  UIStatusBarStyleLightContent = 1;
  UIStatusBarStyleBlackTranslucent = 1;
  UIStatusBarStyleBlackOpaque = 2;
  UIStatusBarAnimationNone = 0;
  UIStatusBarAnimationFade = 1;
  UIStatusBarAnimationSlide = 2;
  UIInterfaceOrientationUnknown = UIDeviceOrientationUnknown;
  UIInterfaceOrientationPortrait = UIDeviceOrientationPortrait;
  UIInterfaceOrientationPortraitUpsideDown =
    UIDeviceOrientationPortraitUpsideDown;
  UIInterfaceOrientationLandscapeLeft = UIDeviceOrientationLandscapeRight;
  UIInterfaceOrientationLandscapeRight = UIDeviceOrientationLandscapeLeft;
  UIInterfaceOrientationMaskPortrait = (1 shl UIInterfaceOrientationPortrait);
  UIInterfaceOrientationMaskLandscapeLeft =
    (1 shl UIInterfaceOrientationLandscapeLeft);
  UIInterfaceOrientationMaskLandscapeRight =
    (1 shl UIInterfaceOrientationLandscapeRight);
  UIInterfaceOrientationMaskPortraitUpsideDown =
    (1 shl UIInterfaceOrientationPortraitUpsideDown);
  UIInterfaceOrientationMaskLandscape =
    (UIInterfaceOrientationMaskLandscapeLeft or
    UIInterfaceOrientationMaskLandscapeRight);
  UIInterfaceOrientationMaskAll = (UIInterfaceOrientationMaskPortrait or
    UIInterfaceOrientationMaskLandscapeLeft or
    UIInterfaceOrientationMaskLandscapeRight or
    UIInterfaceOrientationMaskPortraitUpsideDown);
  UIInterfaceOrientationMaskAllButUpsideDown =
    (UIInterfaceOrientationMaskPortrait or
    UIInterfaceOrientationMaskLandscapeLeft or
    UIInterfaceOrientationMaskLandscapeRight);
  UIRemoteNotificationTypeNone = 0;
  UIRemoteNotificationTypeBadge = 1 shl 0;
  UIRemoteNotificationTypeSound = 1 shl 1;
  UIRemoteNotificationTypeAlert = 1 shl 2;
  UIRemoteNotificationTypeNewsstandContentAvailability = 1 shl 3;
  UIBackgroundFetchResultNewData = 0;
  UIBackgroundFetchResultNoData = 1;
  UIBackgroundFetchResultFailed = 2;
  UIBackgroundRefreshStatusRestricted = 0;
  UIBackgroundRefreshStatusDenied = 1;
  UIBackgroundRefreshStatusAvailable = 2;
  UIApplicationStateActive = 0;
  UIApplicationStateInactive = 1;
  UIApplicationStateBackground = 2;
  UIModalTransitionStyleCoverVertical = 0;
  UIModalTransitionStyleFlipHorizontal = 1;
  UIModalTransitionStyleCrossDissolve = 2;
  UIModalTransitionStylePartialCurl = 3;
  UIModalPresentationFullScreen = 0;
  UIModalPresentationPageSheet = 1;
  UIModalPresentationFormSheet = 2;
  UIModalPresentationCurrentContext = 3;
  UIModalPresentationCustom = 4;
  UIModalPresentationOverFullScreen = 5;
  UIModalPresentationOverCurrentContext = 6;
  UIModalPresentationPopover = 7;
  UIModalPresentationNone = -1;
  UIPreviewActionStyleDefault = 0;
  UIPreviewActionStyleSelected = 1;
  UIPreviewActionStyleDestructive = 2;
  UIAlertActionStyleDefault = 0;
  UIAlertActionStyleCancel = 1;
  UIAlertActionStyleDestructive = 2;
  UIAlertControllerStyleActionSheet = 0;
  UIAlertControllerStyleAlert = 1;
  UIApplicationShortcutIconTypeCompose = 0;
  UIApplicationShortcutIconTypePlay = 1;
  UIApplicationShortcutIconTypePause = 2;
  UIApplicationShortcutIconTypeAdd = 3;
  UIApplicationShortcutIconTypeLocation = 4;
  UIApplicationShortcutIconTypeSearch = 5;
  UIApplicationShortcutIconTypeShare = 6;
  UIApplicationShortcutIconTypeProhibit = 7;
  UIApplicationShortcutIconTypeContact = 8;
  UIApplicationShortcutIconTypeHome = 9;
  UIApplicationShortcutIconTypeMarkLocation = 10;
  UIApplicationShortcutIconTypeFavorite = 11;
  UIApplicationShortcutIconTypeLove = 12;
  UIApplicationShortcutIconTypeCloud = 13;
  UIApplicationShortcutIconTypeInvitation = 14;
  UIApplicationShortcutIconTypeConfirmation = 15;
  UIApplicationShortcutIconTypeMail = 16;
  UIApplicationShortcutIconTypeMessage = 17;
  UIApplicationShortcutIconTypeDate = 18;
  UIApplicationShortcutIconTypeTime = 19;
  UIApplicationShortcutIconTypeCapturePhoto = 20;
  UIApplicationShortcutIconTypeCaptureVideo = 21;
  UIApplicationShortcutIconTypeTask = 22;
  UIApplicationShortcutIconTypeTaskCompleted = 23;
  UIApplicationShortcutIconTypeAlarm = 24;
  UIApplicationShortcutIconTypeBookmark = 25;
  UIApplicationShortcutIconTypeShuffle = 26;
  UIApplicationShortcutIconTypeAudio = 27;
  UIApplicationShortcutIconTypeUpdate = 28;
  UIAttachmentBehaviorTypeItems = 0;
  UIAttachmentBehaviorTypeAnchor = 1;
  UIBarMetricsDefault = 0;
  UIBarMetricsCompact = 1;
  UIBarMetricsDefaultPrompt = 101;
  UIBarMetricsCompactPrompt = 102;
  UIBarMetricsLandscapePhone = UIBarMetricsCompact;
  UIBarMetricsLandscapePhonePrompt = UIBarMetricsCompactPrompt;
  UIBarPositionAny = 0;
  UIBarPositionBottom = 1;
  UIBarPositionTop = 2;
  UIBarPositionTopAttached = 3;
  UIBarButtonItemStylePlain = 0;
  UIBarButtonItemStyleBordered = 1;
  UIBarButtonItemStyleDone = 2;
  UIBarButtonSystemItemDone = 0;
  UIBarButtonSystemItemCancel = 1;
  UIBarButtonSystemItemEdit = 2;
  UIBarButtonSystemItemSave = 3;
  UIBarButtonSystemItemAdd = 4;
  UIBarButtonSystemItemFlexibleSpace = 5;
  UIBarButtonSystemItemFixedSpace = 6;
  UIBarButtonSystemItemCompose = 7;
  UIBarButtonSystemItemReply = 8;
  UIBarButtonSystemItemAction = 9;
  UIBarButtonSystemItemOrganize = 10;
  UIBarButtonSystemItemBookmarks = 11;
  UIBarButtonSystemItemSearch = 12;
  UIBarButtonSystemItemRefresh = 13;
  UIBarButtonSystemItemStop = 14;
  UIBarButtonSystemItemCamera = 15;
  UIBarButtonSystemItemTrash = 16;
  UIBarButtonSystemItemPlay = 17;
  UIBarButtonSystemItemPause = 18;
  UIBarButtonSystemItemRewind = 19;
  UIBarButtonSystemItemFastForward = 20;
  UIBarButtonSystemItemUndo = 21;
  UIBarButtonSystemItemRedo = 22;
  UIBarButtonSystemItemPageCurl = 23;
  UIButtonTypeCustom = 0;
  UIButtonTypeSystem = 1;
  UIButtonTypeDetailDisclosure = 2;
  UIButtonTypeInfoLight = 3;
  UIButtonTypeInfoDark = 4;
  UIButtonTypeContactAdd = 5;
  UIButtonTypeRoundedRect = UIButtonTypeSystem;
  UICollectionViewScrollPositionNone = 0;
  UICollectionViewScrollPositionTop = 1 shl 0;
  UICollectionViewScrollPositionCenteredVertically = 1 shl 1;
  UICollectionViewScrollPositionBottom = 1 shl 2;
  UICollectionViewScrollPositionLeft = 1 shl 3;
  UICollectionViewScrollPositionCenteredHorizontally = 1 shl 4;
  UICollectionViewScrollPositionRight = 1 shl 5;
  UICollectionElementCategoryCell = 0;
  UICollectionElementCategorySupplementaryView = 1;
  UICollectionElementCategoryDecorationView = 2;
  UICollectionUpdateActionInsert = 0;
  UICollectionUpdateActionDelete = 1;
  UICollectionUpdateActionReload = 2;
  UICollectionUpdateActionMove = 3;
  UICollectionUpdateActionNone = 4;
  UICollectionViewScrollDirectionVertical = 0;
  UICollectionViewScrollDirectionHorizontal = 1;
  UIDataDetectorTypePhoneNumber = 1 shl 0;
  UIDataDetectorTypeLink = 1 shl 1;
  UIDataDetectorTypeAddress = 1 shl 2;
  UIDataDetectorTypeCalendarEvent = 1 shl 3;
  UIDataDetectorTypeNone = 0;
  UIDataDetectorTypeAll = 4294967295;
  UIDatePickerModeTime = 0;
  UIDatePickerModeDate = 1;
  UIDatePickerModeDateAndTime = 2;
  UIDatePickerModeCountDownTimer = 3;
  UIDocumentChangeDone = 0;
  UIDocumentChangeUndone = 1;
  UIDocumentChangeRedone = 2;
  UIDocumentChangeCleared = 3;
  UIDocumentSaveForCreating = 0;
  UIDocumentSaveForOverwriting = 1;
  UIDocumentStateNormal = 0;
  UIDocumentStateClosed = 1 shl 0;
  UIDocumentStateInConflict = 1 shl 1;
  UIDocumentStateSavingError = 1 shl 2;
  UIDocumentStateEditingDisabled = 1 shl 3;
  UIDocumentStateProgressAvailable = 1 shl 4;
  UIDocumentPickerModeImport = 0;
  UIDocumentPickerModeOpen = 1;
  UIDocumentPickerModeExportToService = 2;
  UIDocumentPickerModeMoveToService = 3;
  UIDocumentMenuOrderFirst = 0;
  UIDocumentMenuOrderLast = 1;
  UIBlurEffectStyleExtraLight = 0;
  UIBlurEffectStyleLight = 1;
  UIBlurEffectStyleDark = 2;
  UINavigationControllerOperationNone = 0;
  UINavigationControllerOperationPush = 1;
  UINavigationControllerOperationPop = 2;
  UIImagePickerControllerSourceTypePhotoLibrary = 0;
  UIImagePickerControllerSourceTypeCamera = 1;
  UIImagePickerControllerSourceTypeSavedPhotosAlbum = 2;
  UIImagePickerControllerQualityTypeHigh = 0;
  UIImagePickerControllerQualityTypeMedium = 1;
  UIImagePickerControllerQualityTypeLow = 2;
  UIImagePickerControllerQualityType640x480 = 3;
  UIImagePickerControllerQualityTypeIFrame1280x720 = 4;
  UIImagePickerControllerQualityTypeIFrame960x540 = 5;
  UIImagePickerControllerCameraCaptureModePhoto = 0;
  UIImagePickerControllerCameraCaptureModeVideo = 1;
  UIImagePickerControllerCameraDeviceRear = 0;
  UIImagePickerControllerCameraDeviceFront = 1;
  UIImagePickerControllerCameraFlashModeOff = -1;
  UIImagePickerControllerCameraFlashModeAuto = 0;
  UIImagePickerControllerCameraFlashModeOn = 1;
  UIInputViewStyleDefault = 0;
  UIInputViewStyleKeyboard = 1;
  UIUserNotificationTypeNone = 0;
  UIUserNotificationTypeBadge = 1 shl 0;
  UIUserNotificationTypeSound = 1 shl 1;
  UIUserNotificationTypeAlert = 1 shl 2;
  UIUserNotificationActionBehaviorDefault = 0;
  UIUserNotificationActionBehaviorTextInput = 1;
  UIUserNotificationActivationModeForeground = 0;
  UIUserNotificationActivationModeBackground = 1;
  UIUserNotificationActionContextDefault = 0;
  UIUserNotificationActionContextMinimal = 1;
  UIMenuControllerArrowDefault = 0;
  UIMenuControllerArrowUp = 1;
  UIMenuControllerArrowDown = 2;
  UIMenuControllerArrowLeft = 3;
  UIMenuControllerArrowRight = 4;
  UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis = 0;
  UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis = 1;
  UIPageViewControllerNavigationOrientationHorizontal = 0;
  UIPageViewControllerNavigationOrientationVertical = 1;
  UIPageViewControllerSpineLocationNone = 0;
  UIPageViewControllerSpineLocationMin = 1;
  UIPageViewControllerSpineLocationMid = 2;
  UIPageViewControllerSpineLocationMax = 3;
  UIPageViewControllerNavigationDirectionForward = 0;
  UIPageViewControllerNavigationDirectionReverse = 1;
  UIPageViewControllerTransitionStylePageCurl = 0;
  UIPageViewControllerTransitionStyleScroll = 1;
  UIPopoverArrowDirectionUp = 1 shl 0;
  UIPopoverArrowDirectionDown = 1 shl 1;
  UIPopoverArrowDirectionLeft = 1 shl 2;
  UIPopoverArrowDirectionRight = 1 shl 3;
  UIPopoverArrowDirectionAny = UIPopoverArrowDirectionUp or
    UIPopoverArrowDirectionDown or UIPopoverArrowDirectionLeft or
    UIPopoverArrowDirectionRight;
  UIPopoverArrowDirectionUnknown = 4294967295;
  UIPressPhaseBegan = 0;
  UIPressPhaseChanged = 1;
  UIPressPhaseStationary = 2;
  UIPressPhaseEnded = 3;
  UIPressPhaseCancelled = 4;
  UIPressTypeUpArrow = 0;
  UIPressTypeDownArrow = 1;
  UIPressTypeLeftArrow = 2;
  UIPressTypeRightArrow = 3;
  UIPressTypeSelect = 4;
  UIPressTypeMenu = 5;
  UIPressTypePlayPause = 6;
  UIPrinterJobTypeUnknown = 0;
  UIPrinterJobTypeDocument = 1 shl 0;
  UIPrinterJobTypeEnvelope = 1 shl 1;
  UIPrinterJobTypeLabel = 1 shl 2;
  UIPrinterJobTypePhoto = 1 shl 3;
  UIPrinterJobTypeReceipt = 1 shl 4;
  UIPrinterJobTypeRoll = 1 shl 5;
  UIPrinterJobTypeLargeFormat = 1 shl 6;
  UIPrinterJobTypePostcard = 1 shl 7;
  UIPrintingNotAvailableError = 1;
  UIPrintNoContentError = 2;
  UIPrintUnknownImageFormatError = 3;
  UIPrintJobFailedError = 4;
  UIPrintInfoOutputGeneral = 0;
  UIPrintInfoOutputPhoto = 1;
  UIPrintInfoOutputGrayscale = 2;
  UIPrintInfoOutputPhotoGrayscale = 3;
  UIPrintInfoOrientationPortrait = 0;
  UIPrintInfoOrientationLandscape = 1;
  UIPrintInfoDuplexNone = 0;
  UIPrintInfoDuplexLongEdge = 1;
  UIPrintInfoDuplexShortEdge = 2;
  UIPrinterCutterBehaviorNoCut = 0;
  UIPrinterCutterBehaviorPrinterDefault = 1;
  UIPrinterCutterBehaviorCutAfterEachPage = 2;
  UIPrinterCutterBehaviorCutAfterEachCopy = 3;
  UIPrinterCutterBehaviorCutAfterEachJob = 4;
  UIProgressViewStyleDefault = 0;
  UIProgressViewStyleBar = 1;
  UIScreenOverscanCompensationScale = 0;
  UIScreenOverscanCompensationInsetBounds = 1;
  UIScreenOverscanCompensationNone = 2;
  UIScreenOverscanCompensationInsetApplicationFrame = 2;
  UISearchBarIconSearch = 0;
  UISearchBarIconClear = 1;
  UISearchBarIconBookmark = 2;
  UISearchBarIconResultsList = 3;
  UISearchBarStyleDefault = 0;
  UISearchBarStyleProminent = 1;
  UISearchBarStyleMinimal = 2;
  UISegmentedControlStylePlain = 0;
  UISegmentedControlStyleBordered = 1;
  UISegmentedControlStyleBar = 2;
  UISegmentedControlStyleBezeled = 3;
  UISegmentedControlNoSegment = -1;
  UISegmentedControlSegmentAny = 0;
  UISegmentedControlSegmentLeft = 1;
  UISegmentedControlSegmentCenter = 2;
  UISegmentedControlSegmentRight = 3;
  UISegmentedControlSegmentAlone = 4;
  UISplitViewControllerDisplayModeAutomatic = 0;
  UISplitViewControllerDisplayModePrimaryHidden = 1;
  UISplitViewControllerDisplayModeAllVisible = 2;
  UISplitViewControllerDisplayModePrimaryOverlay = 3;
  UITabBarItemPositioningAutomatic = 0;
  UITabBarItemPositioningFill = 1;
  UITabBarItemPositioningCentered = 2;
  UITabBarSystemItemMore = 0;
  UITabBarSystemItemFavorites = 1;
  UITabBarSystemItemFeatured = 2;
  UITabBarSystemItemTopRated = 3;
  UITabBarSystemItemRecents = 4;
  UITabBarSystemItemContacts = 5;
  UITabBarSystemItemHistory = 6;
  UITabBarSystemItemBookmarks = 7;
  UITabBarSystemItemSearch = 8;
  UITabBarSystemItemDownloads = 9;
  UITabBarSystemItemMostRecent = 10;
  UITabBarSystemItemMostViewed = 11;
  UIWebViewNavigationTypeLinkClicked = 0;
  UIWebViewNavigationTypeFormSubmitted = 1;
  UIWebViewNavigationTypeBackForward = 2;
  UIWebViewNavigationTypeReload = 3;
  UIWebViewNavigationTypeFormResubmitted = 4;
  UIWebViewNavigationTypeOther = 5;
  UIWebPaginationModeUnpaginated = 0;
  UIWebPaginationModeLeftToRight = 1;
  UIWebPaginationModeTopToBottom = 2;
  UIWebPaginationModeBottomToTop = 3;
  UIWebPaginationModeRightToLeft = 4;
  UIWebPaginationBreakingModePage = 0;
  UIWebPaginationBreakingModeColumn = 1;
  UIStackViewDistributionFill = 0;
  UIStackViewDistributionFillEqually = 1;
  UIStackViewDistributionFillProportionally = 2;
  UIStackViewDistributionEqualSpacing = 3;
  UIStackViewDistributionEqualCentering = 4;
  UIStackViewAlignmentFill = 0;
  UIStackViewAlignmentLeading = 1;
  UIStackViewAlignmentTop = UIStackViewAlignmentLeading;
  UIStackViewAlignmentFirstBaseline = 2;
  UIStackViewAlignmentCenter = 3;
  UIStackViewAlignmentTrailing = 4;
  UIStackViewAlignmentBottom = UIStackViewAlignmentTrailing;
  UIStackViewAlignmentLastBaseline = 5;
  UIPushBehaviorModeContinuous = 0;
  UIPushBehaviorModeInstantaneous = 1;
  UICollisionBehaviorModeItems = 1 shl 0;
  UICollisionBehaviorModeBoundaries = 1 shl 1;
  UICollisionBehaviorModeEverything = 4294967295;

type

  // ===== Forward declarations =====
{$M+}
  NSAttributedStringAttributeFixing = interface;
  NSAttributedStringDocumentFormats = interface;
  NSMutableAttributedStringDocumentFormats = interface;
  NSAttributedStringKitAdditions = interface;
  NSDeprecatedKitAdditions = interface;
  NSDataAsset = interface;
  NSFileProviderExtension = interface;
  NSLayoutConstraint = interface;
  NSLayoutAnchor = interface;
  NSLayoutXAxisAnchor = interface;
  NSLayoutYAxisAnchor = interface;
  NSLayoutDimension = interface;
  NSValueUIGeometryExtensions = interface;
  UIGeometryKeyedCoding = interface;
  UILayoutSupport = interface;
  NSLayoutManager = interface;
  NSTextStorageDelegate = interface;
  NSTextStorage = interface;
  UIFontDescriptor = interface;
  UIFont = interface;
  NSTextContainer = interface;
  UIColor = interface;
  NSLayoutManagerDelegate = interface;
  NSTextLayoutOrientationProvider = interface;
  NSTextTab = interface;
  NSParagraphStyle = interface;
  NSMutableParagraphStyle = interface;
  NSShadow = interface;
  NSStringDrawingContext = interface;
  NSStringDrawing = interface;
  NSExtendedStringDrawing = interface;
  UIImage = interface;
  NSTextAttachmentContainer = interface;
  NSTextAttachment = interface;
  NSAttributedStringAttachmentConveniences = interface;
  UIBezierPath = interface;
  UIAccelerometerDelegate = interface;
  UIAcceleration = interface;
  UIAccelerometer = interface;
  UIWindow = interface;
  UIView = interface;
  UIGestureRecognizer = interface;
  UITouch = interface;
  UIEvent = interface;
  UIPress = interface;
  UIPressesEvent = interface;
  UIResponder = interface;
  UIKeyCommand = interface;
  UIResponderStandardEditActions = interface;
  UIInputViewController = interface;
  UITextInputMode = interface;
  UITextInputAssistantItem = interface;
  UIKitAdditions = interface;
  UITraitCollection = interface;
  UIAppearanceContainer = interface;
  UIAppearance = interface;
  UIDynamicAnimator = interface;
  UIDynamicItem = interface;
  UIDynamicItemGroup = interface;
  UIDynamicBehavior = interface;
  UIDevice = interface;
  UIInputViewAudioFeedback = interface;
  UITraitEnvironment = interface;
  UILayoutGuide = interface;
  UIFocusAnimationCoordinator = interface;
  UIFocusUpdateContext = interface;
  UIFocusEnvironment = interface;
  UIFocusGuide = interface;
  UICoordinateSpace = interface;
  UIViewController = interface;
  UIMotionEffect = interface;
  UIImageView = interface;
  UIPanGestureRecognizer = interface;
  UIPinchGestureRecognizer = interface;
  UIScrollViewDelegate = interface;
  UIScrollView = interface;
  UIGestureRecognizerDelegate = interface;
  UISwipeGestureRecognizer = interface;
  UIStringDrawing = interface;
  UILabel = interface;
  UIButton = interface;
  UITextField = interface;
  UITableView = interface;
  UILongPressGestureRecognizer = interface;
  UITableViewCell = interface;
  UINib = interface;
  UITableViewDataSource = interface;
  UITableViewHeaderFooterView = interface;
  UIRefreshControl = interface;
  UIVisualEffect = interface;
  UITableViewRowAction = interface;
  UITableViewFocusUpdateContext = interface;
  UITableViewDelegate = interface;
  UIPickerViewDataSource = interface;
  UIPickerViewDelegate = interface;
  UIPickerView = interface;
  UIPickerViewAccessibilityDelegate = interface;
  UIScrollViewAccessibilityDelegate = interface;
  UIAccessibilityCustomAction = interface;
  UIImageAsset = interface;
  UIControl = interface;
  UIBarItem = interface;
  UIAccessibilityIdentification = interface;
  UIAccessibilityElement = interface;
  UIGuidedAccessRestrictionDelegate = interface;
  UIAccessibility = interface;
  UIAccessibilityContainer = interface;
  UIAccessibilityFocus = interface;
  UIAccessibilityAction = interface;
  UIAccessibilityReadingContent = interface;
  UITextInputTraits = interface;
  UIKeyInput = interface;
  UITextPosition = interface;
  UITextRange = interface;
  UITextSelectionRect = interface;
  UIBarButtonItemGroup = interface;
  UITextInputTokenizer = interface;
  UITextInputDelegate = interface;
  UIDictationPhrase = interface;
  UITextInput = interface;
  UITextInputStringTokenizer = interface;
  UIPopoverController = interface;
  UITextFieldDelegate = interface;
  UITextSelecting = interface;
  UIActionSheetDelegate = interface;
  UIToolbar = interface;
  UITabBar = interface;
  UIBarButtonItem = interface;
  UIActionSheet = interface;
  UIActivity = interface;
  UIActivityIndicatorView = interface;
  UIActivityViewController = interface;
  UIActivityItemSource = interface;
  UIActivityItemProvider = interface;
  UIAlertViewDelegate = interface;
  UIAlertView = interface;
  UILocalNotification = interface;
  UIApplicationDelegate = interface;
  UIApplication = interface;
  UIUserNotificationSettings = interface;
  UIApplicationShortcutItem = interface;
  UIStateRestoring = interface;
  UIViewControllerRestoration = interface;
  UIDataSourceModelAssociation = interface;
  UIObjectRestoration = interface;
  UINavigationItem = interface;
  UITabBarItem = interface;
  UISearchDisplayController = interface;
  UIStoryboard = interface;
  UIStoryboardSegue = interface;
  UIStoryboardUnwindSegueSource = interface;
  UIViewControllerTransitionCoordinator = interface;
  UIContentContainer = interface;
  UIViewControllerTransitioningDelegate = interface;
  UIPresentationController = interface;
  UIPopoverPresentationController = interface;
  UIViewControllerPreviewingDelegate = interface;
  UIViewControllerPreviewing = interface;
  UIPreviewActionItem = interface;
  UIPreviewAction = interface;
  UIPreviewActionGroup = interface;
  UIAlertAction = interface;
  UIAlertController = interface;
  UIApplicationShortcutIcon = interface;
  UIMutableApplicationShortcutItem = interface;
  UIAttachmentBehavior = interface;
  UIBarPositioning = interface;
  UIBarPositioningDelegate = interface;
  UICollectionView = interface;
  UICollectionViewCell = interface;
  UICollectionViewLayout = interface;
  UICollectionViewTransitionLayout = interface;
  UICollectionViewLayoutAttributes = interface;
  UICollectionReusableView = interface;
  UICollectionViewFocusUpdateContext = interface;
  UICollectionViewDataSource = interface;
  UICollectionViewDelegate = interface;
  UICollectionViewAdditions = interface;
  UICollectionViewController = interface;
  UICollectionViewUpdateItem = interface;
  UICollectionViewLayoutInvalidationContext = interface;
  UICollectionViewFlowLayoutInvalidationContext = interface;
  UICollectionViewDelegateFlowLayout = interface;
  UICollectionViewFlowLayout = interface;
  UIDatePicker = interface;
  UIDocument = interface;
  UIDocumentInteractionControllerDelegate = interface;
  UIDocumentInteractionController = interface;
  UIDocumentPickerViewController = interface;
  UIDocumentMenuViewController = interface;
  UIDocumentPickerDelegate = interface;
  UIDocumentMenuDelegate = interface;
  UIDocumentPickerExtensionViewController = interface;
  UIBlurEffect = interface;
  UIVibrancyEffect = interface;
  UIVisualEffectView = interface;
  UITapGestureRecognizer = interface;
  UINavigationBar = interface;
  UINavigationControllerDelegate = interface;
  UINavigationController = interface;
  UIViewControllerInteractiveTransitioning = interface;
  UIViewControllerAnimatedTransitioning = interface;
  UIImagePickerControllerDelegate = interface;
  UIImagePickerController = interface;
  UIInputView = interface;
  UILexicon = interface;
  UITextDocumentProxy = interface;
  UILexiconEntry = interface;
  UIUserNotificationCategory = interface;
  UIUserNotificationAction = interface;
  UIMutableUserNotificationCategory = interface;
  UIMutableUserNotificationAction = interface;
  UILocalizedIndexedCollation = interface;
  UIManagedDocument = interface;
  UIMenuItem = interface;
  UIMenuController = interface;
  UIInterpolatingMotionEffect = interface;
  UIMotionEffectGroup = interface;
  UINavigationBarDelegate = interface;
  UINibLoadingAdditions = interface;
  UIPageControl = interface;
  UIPageViewControllerDelegate = interface;
  UIPageViewControllerDataSource = interface;
  UIPageViewController = interface;
  UIPasteboard = interface;
  UIPopoverControllerDelegate = interface;
  UIPopoverBackgroundViewMethods = interface;
  UIPopoverBackgroundView = interface;
  UIPrinter = interface;
  UIPrinterPickerController = interface;
  UIPrinterPickerControllerDelegate = interface;
  UIPrintPageRenderer = interface;
  UIPrintFormatter = interface;
  UISimpleTextPrintFormatter = interface;
  UIMarkupTextPrintFormatter = interface;
  UIViewPrintFormatter = interface;
  UIPrintInfo = interface;
  UIPrintInteractionController = interface;
  UIPrintPaper = interface;
  UIPrintInteractionControllerDelegate = interface;
  UIProgressView = interface;
  UIReferenceLibraryViewController = interface;
  UIRotationGestureRecognizer = interface;
  UIScreenMode = interface;
  UIScreen = interface;
  UIScreenEdgePanGestureRecognizer = interface;
  UISearchBarDelegate = interface;
  UISearchBar = interface;
  UISearchController = interface;
  UISearchContainerViewController = interface;
  UIViewControllerTransitionCoordinatorContext = interface;
  UIAdaptivePresentationControllerDelegate = interface;
  UIViewControllerContextTransitioning = interface;
  UIPercentDrivenInteractiveTransition = interface;
  UISearchControllerDelegate = interface;
  UISearchResultsUpdating = interface;
  UISearchDisplayDelegate = interface;
  UISegmentedControl = interface;
  UISlider = interface;
  UISplitViewControllerDelegate = interface;
  UISplitViewController = interface;
  UIStepper = interface;
  UIStoryboardPopoverSegue = interface;
  UISwitch = interface;
  UITabBarDelegate = interface;
  UITabBarControllerDelegate = interface;
  UITabBarController = interface;
  UITableViewController = interface;
  UITextChecker = interface;
  UITextView = interface;
  UITextViewDelegate = interface;
  UIToolbarDelegate = interface;
  UIVideoEditorControllerDelegate = interface;
  UIVideoEditorController = interface;
  UIWebViewDelegate = interface;
  UIWebView = interface;
  UIStackView = interface;
  UIPopoverPresentationControllerDelegate = interface;
  UIDynamicAnimatorDelegate = interface;
  UIPushBehavior = interface;
  UISnapBehavior = interface;
  UIDynamicItemBehavior = interface;
  UIRegion = interface;
  UIFieldBehavior = interface;
  UIGravityBehavior = interface;
  UICollisionBehavior = interface;
  UICollisionBehaviorDelegate = interface;

  // ===== Framework typedefs =====
{$M+}
  NSInteger = Integer;
  NSUnderlineStyle = NSInteger;
  NSWritingDirectionFormatType = NSInteger;
  NSUInteger = Cardinal;
  NSRange = _NSRange = record location: NSUInteger;
length:
NSUInteger;
end;
P_NSRange = ^_NSRange;;
NSTextWritingDirection = NSInteger;
TUIKitCompletionHandler =
procedure(param1: NSError) of object;
CGFloat = Single;

UIEdgeInsets = record top: CGFloat;
left:
CGFloat;
bottom:
CGFloat;
right:
CGFloat;
end;
PUIEdgeInsets = ^UIEdgeInsets;

UIOffset = record horizontal: CGFloat;
vertical:
CGFloat;
end;
PUIOffset = ^UIOffset;

UIRectEdge = NSUInteger;
CGPoint = CGPoint = record x: CGFloat;
y:
CGFloat;
end;
PCGPoint = ^CGPoint;;
CGSize = CGSize = record width: CGFloat;
height:
CGFloat;
end;
PCGSize = ^CGSize;;
CGRect = CGRect = record origin: CGPoint;
size:
CGSize;
end;
PCGRect = ^CGRect;;
CGVector = CGVector = record dx: CGFloat;
dy:
CGFloat;
end;
PCGVector = ^CGVector;;
CGAffineTransform = CGAffineTransform = record a: CGFloat;
b:
CGFloat;
c:
CGFloat;
d:
CGFloat;
tx:
CGFloat;
ty:
CGFloat;
end;
PCGAffineTransform = ^CGAffineTransform;;
NSLayoutRelation = NSInteger;
NSLayoutAttribute = NSInteger;
NSLayoutFormatOptions = NSUInteger;
UILayoutPriority = Single;
PUILayoutPriority = ^UILayoutPriority;

NSTextStorageEditActions = NSUInteger;
UIFontDescriptorSymbolicTraits = LongWord;
_UIFontDescriptorClass = NSUInteger;
NSTextLayoutOrientation = NSInteger;
NSGlyphProperty = NSInteger;
NSControlCharacterAction = NSInteger;
CGFontIndex = Word;
CGGlyph = CGFontIndex;
TUIKitUsingBlock =
procedure(param1: CGRect; param2: CGRect; param3: NSTextContainer;
  param4: NSRange; param5: PBoolean) of object;
TUIKitUsingBlock1 =
procedure(param1: CGRect; param2: PBoolean) of object;
CGContextRef = Pointer;
NSTextAlignment = NSInteger;
CTTextAlignment = Byte;
NSWritingDirection = NSInteger;
NSLineBreakMode = NSInteger;
NSStringDrawingOptions = NSInteger;
UIAccelerationValue = Double;
PUIAccelerationValue = ^UIAccelerationValue;

NSTimeInterval = Double;
UIRectCorner = NSUInteger;
CGPathRef = Pointer;
CGLineCap = Int32;
CGLineJoin = Int32;
CGBlendMode = Int32;
UIEventType = NSInteger;
UIEventSubtype = NSInteger;
SEL = SEL *;
UIKeyModifierFlags = NSInteger;
CGColorRef = Pointer;
UIBarStyle = NSInteger;
UIUserInterfaceSizeClass = NSInteger;
UIDynamicItemCollisionBoundsType = NSUInteger;
TUIKitAction =
procedure() of object;
UIDeviceOrientation = NSInteger;
UIDeviceBatteryState = NSInteger;
UIUserInterfaceIdiom = NSInteger;
UITouchPhase = NSInteger;
UIForceTouchCapability = NSInteger;
UITouchType = NSInteger;
UITouchProperties = NSInteger;
UIFocusHeading = NSUInteger;
UIViewAnimationCurve = NSInteger;
UIViewContentMode = NSInteger;
UIViewAnimationTransition = NSInteger;
UIViewAutoresizing = NSUInteger;
UIViewAnimationOptions = NSUInteger;
UIViewKeyframeAnimationOptions = NSUInteger;
UISystemAnimation = NSUInteger;
UIViewTintAdjustmentMode = NSInteger;
UISemanticContentAttribute = NSInteger;
UIUserInterfaceLayoutDirection = NSInteger;
TUIKitCompletion =
procedure(param1: Boolean) of object;
UILayoutConstraintAxis = NSInteger;
UIScrollViewIndicatorStyle = NSInteger;
UIScrollViewKeyboardDismissMode = NSInteger;
UIGestureRecognizerState = NSInteger;
UISwipeGestureRecognizerDirection = NSUInteger;
UILineBreakMode = NSInteger;
UITextAlignment = NSInteger;
UIBaselineAdjustment = NSInteger;
UITableViewCellStyle = NSInteger;
UITableViewCellSeparatorStyle = NSInteger;
UITableViewCellSelectionStyle = NSInteger;
UITableViewCellFocusStyle = NSInteger;
UITableViewCellEditingStyle = NSInteger;
UITableViewCellAccessoryType = NSInteger;
UITableViewCellStateMask = NSUInteger;
UITableViewStyle = NSInteger;
UITableViewScrollPosition = NSInteger;
UITableViewRowAnimation = NSInteger;
UITableViewRowActionStyle = NSInteger;
TUIKitHandler =
procedure(param1: UITableViewRowAction; param2: NSIndexPath) of object;
UIAccessibilityTraits = UInt64;
UIAccessibilityNotifications = LongWord;
UIAccessibilityNavigationStyle = NSInteger;
UIImageOrientation = NSInteger;
UIImageResizingMode = NSInteger;
UIImageRenderingMode = NSInteger;
CGImageRef = Pointer;
UIControlEvents = NSUInteger;
UIControlContentVerticalAlignment = NSInteger;
UIControlContentHorizontalAlignment = NSInteger;
UIControlState = NSUInteger;
UIAccessibilityZoomType = NSInteger;
UIGuidedAccessRestrictionState = NSInteger;
UIAccessibilityScrollDirection = NSInteger;
UITextAutocapitalizationType = NSInteger;
UITextAutocorrectionType = NSInteger;
UITextSpellCheckingType = NSInteger;
UIKeyboardType = NSInteger;
UIKeyboardAppearance = NSInteger;
UIReturnKeyType = NSInteger;
UITextStorageDirection = NSInteger;
UITextLayoutDirection = NSInteger;
UITextDirection = NSInteger;
UITextWritingDirection = NSInteger;
UITextGranularity = NSInteger;
NSComparisonResult = NSInteger;
UITextBorderStyle = NSInteger;
UITextFieldViewMode = NSInteger;
UIActionSheetStyle = NSInteger;
UIActivityCategory = NSInteger;
UIActivityIndicatorViewStyle = NSInteger;
UIAlertViewStyle = NSInteger;
UIStatusBarStyle = NSInteger;
UIStatusBarAnimation = NSInteger;
UIInterfaceOrientation = NSInteger;
UIInterfaceOrientationMask = NSUInteger;
UIRemoteNotificationType = NSUInteger;
UIBackgroundFetchResult = NSUInteger;
UIBackgroundRefreshStatus = NSInteger;
UIApplicationState = NSInteger;
UIBackgroundTaskIdentifier = NSUInteger;
TUIKitFetchCompletionHandler =
procedure(param1: UIBackgroundFetchResult) of object;
TUIKitReply =
procedure(param1: NSDictionary) of object;
TUIKitRestorationHandler =
procedure(param1: NSArray) of object;
UIModalTransitionStyle = NSInteger;
UIModalPresentationStyle = NSInteger;
UIPreviewActionStyle = NSInteger;
TUIKitHandler1 =
procedure(param1: Pointer; param2: UIViewController) of object;
TUIKitHandler2 =
procedure(param1: UIPreviewAction; param2: UIViewController) of object;
UIActivityViewControllerCompletionHandler =
procedure(param1: NSString; param2: Boolean) of object;
UIActivityViewControllerCompletionWithItemsHandler =
procedure(param1: NSString; param2: Boolean; param3: NSArray; param4: NSError)
  of object;
UIAlertActionStyle = NSInteger;
UIAlertControllerStyle = NSInteger;
TUIKitHandler3 =
procedure(param1: UIAlertAction) of object;
TUIKitConfigurationHandler =
procedure(param1: UITextField) of object;
UIApplicationShortcutIconType = NSInteger;
UIAttachmentBehaviorType = NSInteger;

UIFloatRange = record minimum: CGFloat;
maximum:
CGFloat;
end;
PUIFloatRange = ^UIFloatRange;

UIBarMetrics = NSInteger;
UIBarPosition = NSInteger;
UIBarButtonItemStyle = NSInteger;
UIBarButtonSystemItem = NSInteger;
UIButtonType = NSInteger;
UICollectionViewScrollPosition = NSUInteger;
UICollectionViewLayoutInteractiveTransitionCompletion =
procedure(param1: Boolean; param2: Boolean) of object;
UICollectionElementCategory = NSUInteger;
CATransform3D = CATransform3D = record m11: CGFloat;
m12:
CGFloat;
m13:
CGFloat;
m14:
CGFloat;
m21:
CGFloat;
m22:
CGFloat;
m23:
CGFloat;
m24:
CGFloat;
m31:
CGFloat;
m32:
CGFloat;
m33:
CGFloat;
m34:
CGFloat;
m41:
CGFloat;
m42:
CGFloat;
m43:
CGFloat;
m44:
CGFloat;
end;
PCATransform3D = ^CATransform3D;;
UICollectionUpdateAction = NSInteger;
UICollectionViewScrollDirection = NSInteger;
UIDataDetectorTypes = NSUInteger;
UIDatePickerMode = NSInteger;
UIDocumentChangeKind = NSInteger;
UIDocumentSaveOperation = NSInteger;
UIDocumentState = NSUInteger;
UIDocumentPickerMode = NSUInteger;
UIDocumentMenuOrder = NSUInteger;
UIBlurEffectStyle = NSInteger;
UINavigationControllerOperation = NSInteger;
UIImagePickerControllerSourceType = NSInteger;
UIImagePickerControllerQualityType = NSInteger;
UIImagePickerControllerCameraCaptureMode = NSInteger;
UIImagePickerControllerCameraDevice = NSInteger;
UIImagePickerControllerCameraFlashMode = NSInteger;
UIInputViewStyle = NSInteger;
TUIKitCompletionHandler1 =
procedure(param1: UILexicon) of object;
NSCalendarUnit = NSUInteger;
UIUserNotificationType = NSUInteger;
UIUserNotificationActionBehavior = NSUInteger;
UIUserNotificationActivationMode = NSUInteger;
UIUserNotificationActionContext = NSUInteger;
CFTimeInterval = Double;
UIMenuControllerArrowDirection = NSInteger;
UIInterpolatingMotionEffectType = NSInteger;
UIPageViewControllerNavigationOrientation = NSInteger;
UIPageViewControllerSpineLocation = NSInteger;
UIPageViewControllerNavigationDirection = NSInteger;
UIPageViewControllerTransitionStyle = NSInteger;
UIPopoverArrowDirection = NSUInteger;
UIPressPhase = NSInteger;
UIPressType = NSInteger;
UIPrinterJobTypes = NSInteger;
UIPrinterPickerCompletionHandler =
procedure(param1: UIPrinterPickerController; param2: Boolean; param3: NSError)
  of object;
UIPrintInfoOutputType = NSInteger;
UIPrintInfoOrientation = NSInteger;
UIPrintInfoDuplex = NSInteger;
UIPrintInteractionCompletionHandler =
procedure(param1: UIPrintInteractionController; param2: Boolean;
  param3: NSError) of object;
UIPrinterCutterBehavior = NSInteger;
UIProgressViewStyle = NSInteger;
UIScreenOverscanCompensation = NSInteger;
UISearchBarIcon = NSInteger;
UISearchBarStyle = NSUInteger;
TUIKitAnimation =
procedure(param1: Pointer) of object;
UISegmentedControlStyle = NSInteger;
UISegmentedControlSegment = NSInteger;
UISplitViewControllerDisplayMode = NSInteger;
UITabBarItemPositioning = NSInteger;
UITabBarSystemItem = NSInteger;
UIWebViewNavigationType = NSInteger;
UIWebPaginationMode = NSInteger;
UIWebPaginationBreakingMode = NSInteger;
UIWindowLevel = CGFloat;
UIStackViewDistribution = NSInteger;
UIStackViewAlignment = NSInteger;
UIPushBehaviorMode = NSInteger;
TUIKitBlock =
function(param1: UIFieldBehavior; param2: CGPoint; param3: CGVector;
  param4: CGFloat; param5: CGFloat; param6: NSTimeInterval): CGVector;
cdecl;
UICollisionBehaviorMode = NSUInteger;
// ===== Interface declarations =====

NSAttributedStringAttributeFixing = interface(IObjectiveC)
  ['{24FE5EA7-7134-4F71-87A5-ED64323DC42F}']
procedure fixAttributesInRange(range: NSRange);
cdecl;
end;

NSAttributedStringDocumentFormats = interface(IObjectiveC)
  ['{D132BDB5-03E8-4A07-81C7-52ECD42380AE}']
function initWithURL(url: NSURL; options: NSDictionary;
  documentAttributes: NSDictionary; error: NSError): Pointer { instancetype };
cdecl;

function initWithData(data: NSData; options: NSDictionary;
  documentAttributes: NSDictionary; error: NSError)
  : Pointer { instancetype }; cdecl;
  function dataFromRange(range: NSRange; documentAttributes: NSDictionary;
    error: NSError): NSData; cdecl;
    function fileWrapperFromRange(range: NSRange;
      documentAttributes: NSDictionary; error: NSError): NSFileWrapper; cdecl;
    end;

NSMutableAttributedStringDocumentFormats = interface(IObjectiveC)
  ['{51780569-5FBE-45F9-AB8C-CE8647737857}']
function readFromURL(url: NSURL; options: NSDictionary;
  documentAttributes: NSDictionary; error: NSError): Boolean;
cdecl;
  function readFromData(data: NSData; options: NSDictionary;
    documentAttributes: NSDictionary; error: NSError): Boolean; cdecl;
  end;

NSAttributedStringKitAdditions = interface(IObjectiveC)
  ['{D159B680-41D2-4B63-9557-3F3D8EA7EE4A}']
function containsAttachmentsInRange(range: NSRange): Boolean;
cdecl;
end;

NSDeprecatedKitAdditions = interface(IObjectiveC)
  ['{D8CB7739-8126-40A9-8C4D-E40B51A94191}']
function initWithFileURL(url: NSURL; options: NSDictionary;
  documentAttributes: NSDictionary; error: NSError): Pointer { instancetype };
cdecl;

function readFromFileURL(url: NSURL; options: NSDictionary;
  documentAttributes: NSDictionary; error: NSError): Boolean; cdecl;
end;

NSDataAssetClass = interface(NSObjectClass)
  ['{29FA820D-51EB-493F-8714-306B76862766}']
end;
NSDataAsset = interface(NSObject)['{40C6C99A-5281-4AA9-BE86-7312B3C78EE2}']
  [MethodName('initWithName:')]
function initWithName(name: NSString): Pointer { instancetype };
cdecl;

[MethodName('initWithName:bundle:')]
function initWithNameBundle(name: NSString; bundle: NSBundle)
  : Pointer { instancetype }; cdecl;
  function name: NSString; cdecl;
    function data: NSData; cdecl;
      function typeIdentifier: NSString; cdecl;
      end;

  TNSDataAsset = class(TOCGenericImport<NSDataAssetClass, NSDataAsset>)
  end;
PNSDataAsset = Pointer;

NSFileProviderExtensionClass = interface(NSObjectClass)
  ['{55878A87-7D17-4FEC-8B57-CB3A9B46284A}']
{ class } function writePlaceholderAtURL(placeholderURL: NSURL;
  withMetadata: NSDictionary; error: NSError): Boolean;
cdecl;

{ class } function placeholderURLForURL(url: NSURL): NSURL; cdecl;
end;
NSFileProviderExtension = interface(NSObject)
  ['{C7622A6E-03A0-4B4C-A4DE-8D5667A0AFDA}']
function providerIdentifier: NSString;
cdecl;

function documentStorageURL: NSURL; cdecl;
  function URLForItemWithPersistentIdentifier(identifier: NSString)
    : NSURL; cdecl;
    function persistentIdentifierForItemAtURL(url: NSURL): NSString; cdecl;
      procedure providePlaceholderAtURL(url: NSURL;
        completionHandler: TUIKitCompletionHandler); cdecl;
        procedure startProvidingItemAtURL(url: NSURL;
          completionHandler: TUIKitCompletionHandler); cdecl;
          procedure itemChangedAtURL(url: NSURL); cdecl;
            procedure stopProvidingItemAtURL(url: NSURL); cdecl;
            end;

        TNSFileProviderExtension = class
          (TOCGenericImport<NSFileProviderExtensionClass,
          NSFileProviderExtension>)
        end;
    PNSFileProviderExtension = Pointer;

    NSLayoutConstraintClass = interface(NSObjectClass)
      ['{77D199D0-A890-4FB1-A9C9-390672D62E9B}']
    { class } function constraintsWithVisualFormat(format: NSString;
      options: NSLayoutFormatOptions; metrics: NSDictionary;
      views: NSDictionary): NSArray;
    cdecl;
    [MethodName
      ('constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:')
      ]
    { class } function constraintWithItem(view1: Pointer;
        attribute: NSLayoutAttribute; relatedBy: NSLayoutRelation;
        toItem: Pointer; attribute1: NSLayoutAttribute; multiplier: CGFloat;
        constant: CGFloat): Pointer { instancetype }; cdecl;
      { class } procedure activateConstraints(constraints: NSArray); cdecl;
        { class } procedure deactivateConstraints(constraints: NSArray); cdecl;
          end;
      NSLayoutConstraint = interface(NSObject)
        ['{B6571181-EA36-4B46-8074-5F2170818899}']
      procedure setPriority(priority: UILayoutPriority);
      cdecl;
        function priority: UILayoutPriority; cdecl;
          procedure setShouldBeArchived(shouldBeArchived: Boolean); cdecl;
            function shouldBeArchived: Boolean; cdecl;
              function firstItem: Pointer; cdecl;
                function firstAttribute: NSLayoutAttribute; cdecl;
                  function relation: NSLayoutRelation; cdecl;
                    function secondItem: Pointer; cdecl;
                      function secondAttribute: NSLayoutAttribute; cdecl;
                        function multiplier: CGFloat; cdecl;
                          procedure setConstant(constant: CGFloat); cdecl;
                            function constant: CGFloat; cdecl;
                              procedure setActive(active: Boolean); cdecl;
                                function isActive: Boolean; cdecl;
                                  procedure setIdentifier
                                    (identifier: NSString); cdecl;
                                    function identifier: NSString; cdecl;
                                    end;

                                TNSLayoutConstraint = class
                                  (TOCGenericImport<NSLayoutConstraintClass,
                                  NSLayoutConstraint>)
                                end;
                            PNSLayoutConstraint = Pointer;

                            NSLayoutAnchorClass = interface(NSObjectClass)
                              ['{BAC8C5B3-883B-42D4-BD4E-56068196767B}']
                            end;
                        NSLayoutAnchor = interface(NSObject)
                          ['{85846FDF-91C8-4804-B526-012906EBD339}']
                          [MethodName('constraintEqualToAnchor:')]
                        function constraintEqualToAnchor(anchor: NSLayoutAnchor)
                          : NSLayoutConstraint;
                        cdecl;
                        [MethodName('constraintGreaterThanOrEqualToAnchor:')]
                          function constraintGreaterThanOrEqualToAnchor
                            (anchor: NSLayoutAnchor): NSLayoutConstraint; cdecl;
                          [MethodName('constraintLessThanOrEqualToAnchor:')]
                            function constraintLessThanOrEqualToAnchor
                              (anchor: NSLayoutAnchor)
                              : NSLayoutConstraint; cdecl;
                            [MethodName('constraintEqualToAnchor:constant:')]
                              function constraintEqualToAnchorConstant
                                (anchor: NSLayoutAnchor; constant: Pointer)
                                : NSLayoutConstraint; cdecl;
                              [MethodName
                                ('constraintGreaterThanOrEqualToAnchor:constant:')
                                ]
                                function constraintGreaterThanOrEqualToAnchorConstant
                                  (anchor: NSLayoutAnchor; constant: Pointer)
                                  : NSLayoutConstraint; cdecl;
                                [MethodName
                                  ('constraintLessThanOrEqualToAnchor:constant:')
                                  ]
                                  function constraintLessThanOrEqualToAnchorConstant
                                    (anchor: NSLayoutAnchor; constant: Pointer)
                                    : NSLayoutConstraint; cdecl;
                                  end;

                              TNSLayoutAnchor = class
                                (TOCGenericImport<NSLayoutAnchorClass,
                                NSLayoutAnchor>)
                              end;
                          PNSLayoutAnchor = Pointer;

                          NSLayoutXAxisAnchorClass = interface
                            (NSLayoutAnchorClass)
                            ['{71C5E1F7-F813-4913-BFA6-A32BA4A73CE5}']
                          end;
                      NSLayoutXAxisAnchor = interface(NSLayoutAnchor)
                        ['{AAB8E40C-4D1A-44BC-A8D1-51160140A875}']
                      end;

                  TNSLayoutXAxisAnchor = class
                    (TOCGenericImport<NSLayoutXAxisAnchorClass,
                    NSLayoutXAxisAnchor>)
                  end;
              PNSLayoutXAxisAnchor = Pointer;

              NSLayoutYAxisAnchorClass = interface(NSLayoutAnchorClass)
                ['{4EE4945E-B2CC-4D92-B413-EB01EB81CD1E}']
              end;
          NSLayoutYAxisAnchor = interface(NSLayoutAnchor)
            ['{C382C360-EE69-4454-9B53-E36882EC0569}']
          end;

      TNSLayoutYAxisAnchor = class(TOCGenericImport<NSLayoutYAxisAnchorClass,
        NSLayoutYAxisAnchor>)
      end;
  PNSLayoutYAxisAnchor = Pointer;

  NSLayoutDimensionClass = interface(NSLayoutAnchorClass)
    ['{6E3E2EB4-4B11-42A6-86E5-60D9B91D5F91}']
  end;
NSLayoutDimension = interface(NSLayoutAnchor)
  ['{82931D58-0368-4CDC-B809-29336FA2625F}']
function constraintEqualToConstant(c: Pointer): NSLayoutConstraint;
cdecl;

function constraintGreaterThanOrEqualToConstant(c: Pointer)
  : NSLayoutConstraint; cdecl;
  function constraintLessThanOrEqualToConstant(c: Pointer)
    : NSLayoutConstraint; cdecl;
  [MethodName('constraintEqualToAnchor:multiplier:')]
    function constraintEqualToAnchorMultiplier(anchor: NSLayoutDimension;
      multiplier: Pointer): NSLayoutConstraint; cdecl;
    [MethodName('constraintGreaterThanOrEqualToAnchor:multiplier:')]
      function constraintGreaterThanOrEqualToAnchorMultiplier
        (anchor: NSLayoutDimension; multiplier: Pointer)
        : NSLayoutConstraint; cdecl;
      [MethodName('constraintLessThanOrEqualToAnchor:multiplier:')]
        function constraintLessThanOrEqualToAnchorMultiplier
          (anchor: NSLayoutDimension; multiplier: Pointer)
          : NSLayoutConstraint; cdecl;
        [MethodName('constraintEqualToAnchor:multiplier:constant:')]
          function constraintEqualToAnchorMultiplierConstant
            (anchor: NSLayoutDimension; multiplier: Pointer; constant: Pointer)
            : NSLayoutConstraint; cdecl;
          [MethodName
            ('constraintGreaterThanOrEqualToAnchor:multiplier:constant:')]
            function constraintGreaterThanOrEqualToAnchorMultiplierConstant
              (anchor: NSLayoutDimension; multiplier: Pointer;
              constant: Pointer): NSLayoutConstraint; cdecl;
            [MethodName
              ('constraintLessThanOrEqualToAnchor:multiplier:constant:')]
              function constraintLessThanOrEqualToAnchorMultiplierConstant
                (anchor: NSLayoutDimension; multiplier: Pointer;
                constant: Pointer): NSLayoutConstraint; cdecl;
              end;

          TNSLayoutDimension = class(TOCGenericImport<NSLayoutDimensionClass,
            NSLayoutDimension>)
          end;
      PNSLayoutDimension = Pointer;

      NSValueUIGeometryExtensions = interface(IObjectiveC)
        ['{26374949-CE6E-45F8-9F50-6468FE0CF6CD}']
      function valueWithCGPoint(point: CGPoint): NSValue;
      cdecl;
        function valueWithCGVector(vector: CGVector): NSValue; cdecl;
          function valueWithCGSize(size: CGSize): NSValue; cdecl;
            function valueWithCGRect(rect: CGRect): NSValue; cdecl;
              function valueWithCGAffineTransform(transform: CGAffineTransform)
                : NSValue; cdecl;
                function valueWithUIEdgeInsets(insets: UIEdgeInsets)
                  : NSValue; cdecl;
                  function valueWithUIOffset(insets: UIOffset): NSValue; cdecl;
                    function CGPointValue: CGPoint; cdecl;
                      function CGVectorValue: CGVector; cdecl;
                        function CGSizeValue: CGSize; cdecl;
                          function CGRectValue: CGRect; cdecl;
                            function CGAffineTransformValue
                              : CGAffineTransform; cdecl;
                              function UIEdgeInsetsValue: UIEdgeInsets; cdecl;
                                function UIOffsetValue: UIOffset; cdecl;
                                end;

                            UIGeometryKeyedCoding = interface(IObjectiveC)
                              ['{3E604FED-F9A0-4C62-9AEF-C65F61EC31E9}']
                            procedure encodeCGPoint(point: CGPoint;
                              forKey: NSString);
                            cdecl;
                              procedure encodeCGVector(vector: CGVector;
                                forKey: NSString); cdecl;
                                procedure encodeCGSize(size: CGSize;
                                  forKey: NSString); cdecl;
                                  procedure encodeCGRect(rect: CGRect;
                                    forKey: NSString); cdecl;
                                    procedure encodeCGAffineTransform
                                      (transform: CGAffineTransform;
                                      forKey: NSString); cdecl;
                                      procedure encodeUIEdgeInsets
                                        (insets: UIEdgeInsets;
                                        forKey: NSString); cdecl;
                                        procedure encodeUIOffset
                                        (offset: UIOffset;
                                        forKey: NSString); cdecl;
                                        function decodeCGPointForKey
                                        (key: NSString): CGPoint; cdecl;
                                        function decodeCGVectorForKey
                                        (key: NSString): CGVector; cdecl;
                                        function decodeCGSizeForKey
                                        (key: NSString): CGSize; cdecl;
                                        function decodeCGRectForKey
                                        (key: NSString): CGRect; cdecl;
                                        function decodeCGAffineTransformForKey
                                        (key: NSString)
                                        : CGAffineTransform; cdecl;
                                        function decodeUIEdgeInsetsForKey
                                        (key: NSString): UIEdgeInsets; cdecl;
                                        function decodeUIOffsetForKey
                                        (key: NSString): UIOffset; cdecl;
                                        end;

                                        NSLayoutManagerClass = interface
                                        (NSObjectClass)
                                        ['{387EA9C5-BBA1-44C4-B9D7-7947CCE86264}']
                                        end;
                                        NSLayoutManager = interface(NSObject)
                                        ['{4D3B3BB9-7E93-4255-AF0A-CC7C5174864A}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder(coder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setTextStorage
                                        (textStorage: NSTextStorage); cdecl;
                                        function textStorage
                                        : NSTextStorage; cdecl;
                                        function textContainers: NSArray; cdecl;
                                        procedure addTextContainer
                                        (container: NSTextContainer); cdecl;
                                        procedure insertTextContainer
                                        (container: NSTextContainer;
                                        atIndex: NSUInteger); cdecl;
                                        procedure removeTextContainerAtIndex
                                        (index: NSUInteger); cdecl;
                                        procedure textContainerChangedGeometry
                                        (container: NSTextContainer); cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setShowsInvisibleCharacters
                                        (showsInvisibleCharacters
                                        : Boolean); cdecl;
                                        function showsInvisibleCharacters
                                        : Boolean; cdecl;
                                        procedure setShowsControlCharacters
                                        (showsControlCharacters
                                        : Boolean); cdecl;
                                        function showsControlCharacters
                                        : Boolean; cdecl;
                                        procedure setHyphenationFactor
                                        (hyphenationFactor: CGFloat); cdecl;
                                        function hyphenationFactor
                                        : CGFloat; cdecl;
                                        procedure setUsesFontLeading
                                        (usesFontLeading: Boolean); cdecl;
                                        function usesFontLeading
                                        : Boolean; cdecl;
                                        procedure setAllowsNonContiguousLayout
                                        (allowsNonContiguousLayout
                                        : Boolean); cdecl;
                                        function allowsNonContiguousLayout
                                        : Boolean; cdecl;
                                        function hasNonContiguousLayout
                                        : Boolean; cdecl;
                                        procedure invalidateGlyphsForCharacterRange
                                        (charRange: NSRange;
                                        changeInLength: NSInteger;
                                        actualCharacterRange: PNSRange); cdecl;
                                        procedure invalidateLayoutForCharacterRange
                                        (charRange: NSRange;
                                        actualCharacterRange: PNSRange); cdecl;
                                        procedure invalidateDisplayForCharacterRange
                                        (charRange: NSRange); cdecl;
                                        procedure invalidateDisplayForGlyphRange
                                        (glyphRange: NSRange); cdecl;
                                        procedure processEditingForTextStorage
                                        (textStorage: NSTextStorage;
                                        edited: NSTextStorageEditActions;
                                        range: NSRange;
                                        changeInLength: NSInteger;
                                        invalidatedRange: NSRange); cdecl;
                                        procedure ensureGlyphsForCharacterRange
                                        (charRange: NSRange); cdecl;
                                        procedure ensureGlyphsForGlyphRange
                                        (glyphRange: NSRange); cdecl;
                                        procedure ensureLayoutForCharacterRange
                                        (charRange: NSRange); cdecl;
                                        procedure ensureLayoutForGlyphRange
                                        (glyphRange: NSRange); cdecl;
                                        procedure ensureLayoutForTextContainer
                                        (container: NSTextContainer); cdecl;
                                        procedure ensureLayoutForBoundingRect
                                        (bounds: CGRect;
                                        inTextContainer
                                        : NSTextContainer); cdecl;
                                        procedure setGlyphs
                                        (glyphs: unsigned short *;
                                        properties: NSInteger;
                                        characterIndexes: PCardinal;
                                        font: UIFont;
                                        forGlyphRange: NSRange); cdecl;
                                        function numberOfGlyphs
                                        : NSUInteger; cdecl;
                                        [MethodName
                                        ('CGGlyphAtIndex:isValidIndex:')]
                                        function CGGlyphAtIndexIsValidIndex
                                        (glyphIndex: NSUInteger;
                                        isValidIndex: PBoolean): CGGlyph; cdecl;
                                        [MethodName('CGGlyphAtIndex:')]
                                        function CGGlyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : CGGlyph; cdecl;
                                        function isValidGlyphIndex
                                        (glyphIndex: NSUInteger)
                                        : Boolean; cdecl;
                                        function propertyForGlyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : NSGlyphProperty; cdecl;
                                        function characterIndexForGlyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : NSUInteger; cdecl;
                                        function glyphIndexForCharacterAtIndex
                                        (charIndex: NSUInteger)
                                        : NSUInteger; cdecl;
                                        function getGlyphsInRange
                                        (glyphRange: NSRange;
                                        glyphs: unsigned short *;
                                        properties: NSInteger;
                                        characterIndexes: PCardinal;
                                        bidiLevels: PByte): NSUInteger; cdecl;
                                        procedure setTextContainer
                                        (container: NSTextContainer;
                                        forGlyphRange: NSRange); cdecl;
                                        procedure setLineFragmentRect
                                        (fragmentRect: CGRect;
                                        forGlyphRange: NSRange;
                                        usedRect: CGRect); cdecl;
                                        procedure setExtraLineFragmentRect
                                        (fragmentRect: CGRect; usedRect: CGRect;
                                        textContainer: NSTextContainer); cdecl;
                                        procedure setLocation(location: CGPoint;
                                        forStartOfGlyphRange: NSRange); cdecl;
                                        procedure setNotShownAttribute
                                        (flag: Boolean;
                                        forGlyphAtIndex: NSUInteger); cdecl;
                                        procedure setDrawsOutsideLineFragment
                                        (flag: Boolean;
                                        forGlyphAtIndex: NSUInteger); cdecl;
                                        procedure setAttachmentSize
                                        (attachmentSize: CGSize;
                                        forGlyphRange: NSRange); cdecl;
                                        procedure getFirstUnlaidCharacterIndex
                                        (charIndex: PCardinal;
                                        glyphIndex: PCardinal); cdecl;
                                        function firstUnlaidCharacterIndex
                                        : NSUInteger; cdecl;
                                        function firstUnlaidGlyphIndex
                                        : NSUInteger; cdecl;
                                        [MethodName
                                        ('textContainerForGlyphAtIndex:effectiveRange:')
                                        ]
                                        function textContainerForGlyphAtIndexEffectiveRange
                                        (glyphIndex: NSUInteger;
                                        effectiveRange: PNSRange)
                                        : NSTextContainer; cdecl;
                                        [MethodName
                                        ('textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:')
                                        ]
                                        function textContainerForGlyphAtIndexEffectiveRangeWithoutAdditionalLayout
                                        (glyphIndex: NSUInteger;
                                        effectiveRange: PNSRange;
                                        withoutAdditionalLayout: Boolean)
                                        : NSTextContainer; cdecl;
                                        function usedRectForTextContainer
                                        (container: NSTextContainer)
                                        : CGRect; cdecl;
                                        [MethodName
                                        ('lineFragmentRectForGlyphAtIndex:effectiveRange:')
                                        ]
                                        function lineFragmentRectForGlyphAtIndexEffectiveRange
                                        (glyphIndex: NSUInteger;
                                        effectiveRange: PNSRange)
                                        : CGRect; cdecl;
                                        [MethodName
                                        ('lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:')
                                        ]
                                        function lineFragmentRectForGlyphAtIndexEffectiveRangeWithoutAdditionalLayout
                                        (glyphIndex: NSUInteger;
                                        effectiveRange: PNSRange;
                                        withoutAdditionalLayout: Boolean)
                                        : CGRect; cdecl;
                                        [MethodName
                                        ('lineFragmentUsedRectForGlyphAtIndex:effectiveRange:')
                                        ]
                                        function lineFragmentUsedRectForGlyphAtIndexEffectiveRange
                                        (glyphIndex: NSUInteger;
                                        effectiveRange: PNSRange)
                                        : CGRect; cdecl;
                                        [MethodName
                                        ('lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:')
                                        ]
                                        function lineFragmentUsedRectForGlyphAtIndexEffectiveRangeWithoutAdditionalLayout
                                        (glyphIndex: NSUInteger;
                                        effectiveRange: PNSRange;
                                        withoutAdditionalLayout: Boolean)
                                        : CGRect; cdecl;
                                        function extraLineFragmentRect
                                        : CGRect; cdecl;
                                        function extraLineFragmentUsedRect
                                        : CGRect; cdecl;
                                        function extraLineFragmentTextContainer
                                        : NSTextContainer; cdecl;
                                        function locationForGlyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : CGPoint; cdecl;
                                        function notShownAttributeForGlyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : Boolean; cdecl;
                                        function drawsOutsideLineFragmentForGlyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : Boolean; cdecl;
                                        function attachmentSizeForGlyphAtIndex
                                        (glyphIndex: NSUInteger): CGSize; cdecl;
                                        function truncatedGlyphRangeInLineFragmentForGlyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : NSRange; cdecl;
                                        function glyphRangeForCharacterRange
                                        (charRange: NSRange;
                                        actualCharacterRange: PNSRange)
                                        : NSRange; cdecl;
                                        function characterRangeForGlyphRange
                                        (glyphRange: NSRange;
                                        actualGlyphRange: PNSRange)
                                        : NSRange; cdecl;
                                        function glyphRangeForTextContainer
                                        (container: NSTextContainer)
                                        : NSRange; cdecl;
                                        function rangeOfNominallySpacedGlyphsContainingIndex
                                        (glyphIndex: NSUInteger)
                                        : NSRange; cdecl;
                                        function boundingRectForGlyphRange
                                        (glyphRange: NSRange;
                                        inTextContainer: NSTextContainer)
                                        : CGRect; cdecl;
                                        function glyphRangeForBoundingRect
                                        (bounds: CGRect;
                                        inTextContainer: NSTextContainer)
                                        : NSRange; cdecl;
                                        function glyphRangeForBoundingRectWithoutAdditionalLayout
                                        (bounds: CGRect;
                                        inTextContainer: NSTextContainer)
                                        : NSRange; cdecl;
                                        [MethodName
                                        ('glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:')
                                        ]
                                        function glyphIndexForPointInTextContainerFractionOfDistanceThroughGlyph
                                        (point: CGPoint;
                                        inTextContainer: NSTextContainer;
                                        fractionOfDistanceThroughGlyph
                                        : PCGFloat): NSUInteger; cdecl;
                                        [MethodName
                                        ('glyphIndexForPoint:inTextContainer:')]
                                        function glyphIndexForPointInTextContainer
                                        (point: CGPoint;
                                        inTextContainer: NSTextContainer)
                                        : NSUInteger; cdecl;
                                        function fractionOfDistanceThroughGlyphForPoint
                                        (point: CGPoint;
                                        inTextContainer: NSTextContainer)
                                        : CGFloat; cdecl;
                                        function characterIndexForPoint
                                        (point: CGPoint;
                                        inTextContainer: NSTextContainer;
                                        fractionOfDistanceBetweenInsertionPoints
                                        : PCGFloat): NSUInteger; cdecl;
                                        function getLineFragmentInsertionPointsForCharacterAtIndex
                                        (charIndex: NSUInteger;
                                        alternatePositions: Boolean;
                                        inDisplayOrder: Boolean;
                                        positions: PCGFloat;
                                        characterIndexes: PCardinal)
                                        : NSUInteger; cdecl;
                                        procedure enumerateLineFragmentsForGlyphRange
                                        (glyphRange: NSRange;
                                        usingBlock: TUIKitUsingBlock); cdecl;
                                        procedure enumerateEnclosingRectsForGlyphRange
                                        (glyphRange: NSRange;
                                        withinSelectedGlyphRange: NSRange;
                                        inTextContainer: NSTextContainer;
                                        usingBlock: TUIKitUsingBlock1); cdecl;
                                        procedure drawBackgroundForGlyphRange
                                        (glyphsToShow: NSRange;
                                        atPoint: CGPoint); cdecl;
                                        procedure drawGlyphsForGlyphRange
                                        (glyphsToShow: NSRange;
                                        atPoint: CGPoint); cdecl;
                                        procedure showCGGlyphs
                                        (glyphs: unsigned short *;
                                        positions: Pointer; count: NSUInteger;
                                        font: UIFont; matrix: CGAffineTransform;
                                        attributes: NSDictionary;
                                        inContext: CGContextRef); cdecl;
                                        procedure fillBackgroundRectArray
                                        (rectArray: Pointer; count: NSUInteger;
                                        forCharacterRange: NSRange;
                                        color: UIColor); cdecl;
                                        procedure drawUnderlineForGlyphRange
                                        (glyphRange: NSRange;
                                        underlineType: NSUnderlineStyle;
                                        baselineOffset: CGFloat;
                                        lineFragmentRect: CGRect;
                                        lineFragmentGlyphRange: NSRange;
                                        containerOrigin: CGPoint); cdecl;
                                        procedure underlineGlyphRange
                                        (glyphRange: NSRange;
                                        underlineType: NSUnderlineStyle;
                                        lineFragmentRect: CGRect;
                                        lineFragmentGlyphRange: NSRange;
                                        containerOrigin: CGPoint); cdecl;
                                        procedure drawStrikethroughForGlyphRange
                                        (glyphRange: NSRange;
                                        strikethroughType: NSUnderlineStyle;
                                        baselineOffset: CGFloat;
                                        lineFragmentRect: CGRect;
                                        lineFragmentGlyphRange: NSRange;
                                        containerOrigin: CGPoint); cdecl;
                                        procedure strikethroughGlyphRange
                                        (glyphRange: NSRange;
                                        strikethroughType: NSUnderlineStyle;
                                        lineFragmentRect: CGRect;
                                        lineFragmentGlyphRange: NSRange;
                                        containerOrigin: CGPoint); cdecl;
                                        [MethodName
                                        ('glyphAtIndex:isValidIndex:')]
                                        function glyphAtIndexIsValidIndex
                                        (glyphIndex: NSUInteger;
                                        isValidIndex: PBoolean): CGGlyph; cdecl;
                                        [MethodName('glyphAtIndex:')]
                                        function glyphAtIndex
                                        (glyphIndex: NSUInteger)
                                        : CGGlyph; cdecl;
                                        end;

                                        TNSLayoutManager = class
                                        (TOCGenericImport<NSLayoutManagerClass,
                                        NSLayoutManager>)
                                        end;
                                        PNSLayoutManager = Pointer;

                                        NSTextStorageClass = interface
                                        (NSMutableAttributedStringClass)
                                        ['{CB958F08-52A7-4ED7-BB26-FD233E8F162F}']
                                        end;
                                        NSTextStorage = interface
                                        (NSMutableAttributedString)
                                        ['{0922C6E4-BE2F-4350-B354-D9AB6ADE0FC3}']
                                        function layoutManagers: NSArray;
                                        cdecl;
                                        procedure addLayoutManager
                                        (aLayoutManager
                                        : NSLayoutManager); cdecl;
                                        procedure removeLayoutManager
                                        (aLayoutManager
                                        : NSLayoutManager); cdecl;
                                        function editedMask
                                        : NSTextStorageEditActions; cdecl;
                                        function editedRange: NSRange; cdecl;
                                        function changeInLength
                                        : NSInteger; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure edited
                                        (editedMask: NSTextStorageEditActions;
                                        range: NSRange;
                                        changeInLength: NSInteger); cdecl;
                                        procedure processEditing; cdecl;
                                        function fixesAttributesLazily
                                        : Boolean; cdecl;
                                        procedure invalidateAttributesInRange
                                        (range: NSRange); cdecl;
                                        procedure ensureAttributesAreFixedInRange
                                        (range: NSRange); cdecl;
                                        end;

                                        TNSTextStorage = class
                                        (TOCGenericImport<NSTextStorageClass,
                                        NSTextStorage>)
                                        end;
                                        PNSTextStorage = Pointer;

                                        UIFontDescriptorClass = interface
                                        (NSObjectClass)
                                        ['{015433F1-B14F-4418-9DC7-F39560706080}']
                                        { class } function
                                        fontDescriptorWithFontAttributes
                                        (attributes: NSDictionary)
                                        : UIFontDescriptor;
                                        cdecl;
                                        [MethodName
                                        ('fontDescriptorWithName:size:')]
                                        { class } function
                                        fontDescriptorWithNameSize
                                        (fontName: NSString; size: CGFloat)
                                        : UIFontDescriptor; cdecl;
                                        [MethodName
                                        ('fontDescriptorWithName:matrix:')]
                                        { class } function
                                        fontDescriptorWithNameMatrix
                                        (fontName: NSString;
                                        matrix: CGAffineTransform)
                                        : UIFontDescriptor; cdecl;
                                        { class } function
                                        preferredFontDescriptorWithTextStyle
                                        (style: NSString)
                                        : UIFontDescriptor; cdecl;
                                        end;
                                        UIFontDescriptor = interface(NSObject)
                                        ['{EA612DD7-DD54-4822-B355-33CE6B7FC54E}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function postscriptName
                                        : NSString; cdecl;
                                        function pointSize: CGFloat; cdecl;
                                        function matrix
                                        : CGAffineTransform; cdecl;
                                        function symbolicTraits
                                        : UIFontDescriptorSymbolicTraits; cdecl;
                                        function objectForKey
                                        (anAttribute: NSString): Pointer; cdecl;
                                        function fontAttributes
                                        : NSDictionary; cdecl;
                                        function matchingFontDescriptorsWithMandatoryKeys
                                        (mandatoryKeys: NSSet): NSArray; cdecl;
                                        function initWithFontAttributes
                                        (attributes: NSDictionary)
                                        : Pointer { instancetype }; cdecl;
                                        function fontDescriptorByAddingAttributes
                                        (attributes: NSDictionary)
                                        : UIFontDescriptor; cdecl;
                                        function fontDescriptorWithSymbolicTraits
                                        (symbolicTraits
                                        : UIFontDescriptorSymbolicTraits)
                                        : UIFontDescriptor; cdecl;
                                        function fontDescriptorWithSize
                                        (newPointSize: CGFloat)
                                        : UIFontDescriptor; cdecl;
                                        function fontDescriptorWithMatrix
                                        (matrix: CGAffineTransform)
                                        : UIFontDescriptor; cdecl;
                                        function fontDescriptorWithFace
                                        (newFace: NSString)
                                        : UIFontDescriptor; cdecl;
                                        function fontDescriptorWithFamily
                                        (newFamily: NSString)
                                        : UIFontDescriptor; cdecl;
                                        end;

                                        TUIFontDescriptor = class
                                        (TOCGenericImport<UIFontDescriptorClass,
                                        UIFontDescriptor>)
                                        end;
                                        PUIFontDescriptor = Pointer;

                                        UIFontClass = interface(NSObjectClass)
                                        ['{96868DE5-E004-4AAE-96CC-30BB78D67A2A}']
                                        { class } function
                                        preferredFontForTextStyle
                                        (style: NSString): UIFont;
                                        cdecl;
                                        { class } function fontWithName
                                        (fontName: NSString; size: CGFloat)
                                        : UIFont; cdecl;
                                        { class } function familyNames
                                        : NSArray; cdecl;
                                        { class } function
                                        fontNamesForFamilyName
                                        (familyName: NSString): NSArray; cdecl;
                                        [MethodName('systemFontOfSize:')]
                                        { class } function systemFontOfSize
                                        (fontSize: CGFloat): UIFont; cdecl;
                                        { class } function boldSystemFontOfSize
                                        (fontSize: CGFloat): UIFont; cdecl;
                                        { class } function
                                        italicSystemFontOfSize
                                        (fontSize: CGFloat): UIFont; cdecl;
                                        [MethodName('systemFontOfSize:weight:')]
                                        { class } function
                                        systemFontOfSizeWeight
                                        (fontSize: CGFloat; weight: CGFloat)
                                        : UIFont; cdecl;
                                        { class } function
                                        monospacedDigitSystemFontOfSize
                                        (fontSize: CGFloat; weight: CGFloat)
                                        : UIFont; cdecl;
                                        { class } function fontWithDescriptor
                                        (descriptor: UIFontDescriptor;
                                        size: CGFloat): UIFont; cdecl;
                                        { class } function labelFontSize
                                        : CGFloat; cdecl;
                                        { class } function buttonFontSize
                                        : CGFloat; cdecl;
                                        { class } function smallSystemFontSize
                                        : CGFloat; cdecl;
                                        { class } function systemFontSize
                                        : CGFloat; cdecl;
                                        end;
                                        UIFont = interface(NSObject)
                                        ['{6E60C0DC-EB54-4FEE-BD58-AA3ABBF5DE6B}']
                                        function familyName: NSString;
                                        cdecl;
                                        function fontName: NSString; cdecl;
                                        function pointSize: CGFloat; cdecl;
                                        function ascender: CGFloat; cdecl;
                                        function descender: CGFloat; cdecl;
                                        function capHeight: CGFloat; cdecl;
                                        function xHeight: CGFloat; cdecl;
                                        function lineHeight: CGFloat; cdecl;
                                        function leading: CGFloat; cdecl;
                                        function fontWithSize(fontSize: CGFloat)
                                        : UIFont; cdecl;
                                        function fontDescriptor
                                        : UIFontDescriptor; cdecl;
                                        end;

                                        TUIFont = class
                                        (TOCGenericImport<UIFontClass, UIFont>)
                                        end;
                                        PUIFont = Pointer;

                                        NSTextContainerClass = interface
                                        (NSObjectClass)
                                        ['{B098463B-599B-4088-BE5A-DF3BCEA941B0}']
                                        end;
                                        NSTextContainer = interface(NSObject)
                                        ['{4ED8F582-83D0-4FBA-9345-6561E9D190E6}']
                                        function initWithSize(size: CGSize)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder(coder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setLayoutManager
                                        (layoutManager: NSLayoutManager); cdecl;
                                        function layoutManager
                                        : NSLayoutManager; cdecl;
                                        procedure replaceLayoutManager
                                        (newLayoutManager
                                        : NSLayoutManager); cdecl;
                                        procedure setSize(size: CGSize); cdecl;
                                        function size: CGSize; cdecl;
                                        procedure setExclusionPaths
                                        (exclusionPaths: NSArray); cdecl;
                                        function exclusionPaths: NSArray; cdecl;
                                        procedure setLineBreakMode
                                        (lineBreakMode: NSLineBreakMode); cdecl;
                                        function lineBreakMode
                                        : NSLineBreakMode; cdecl;
                                        procedure setLineFragmentPadding
                                        (lineFragmentPadding: CGFloat); cdecl;
                                        function lineFragmentPadding
                                        : CGFloat; cdecl;
                                        procedure setMaximumNumberOfLines
                                        (maximumNumberOfLines
                                        : NSUInteger); cdecl;
                                        function maximumNumberOfLines
                                        : NSUInteger; cdecl;
                                        function lineFragmentRectForProposedRect
                                        (proposedRect: CGRect;
                                        atIndex: NSUInteger;
                                        writingDirection: NSWritingDirection;
                                        remainingRect: Pointer): CGRect; cdecl;
                                        function isSimpleRectangularTextContainer
                                        : Boolean; cdecl;
                                        procedure setWidthTracksTextView
                                        (widthTracksTextView: Boolean); cdecl;
                                        function widthTracksTextView
                                        : Boolean; cdecl;
                                        procedure setHeightTracksTextView
                                        (heightTracksTextView: Boolean); cdecl;
                                        function heightTracksTextView
                                        : Boolean; cdecl;
                                        end;

                                        TNSTextContainer = class
                                        (TOCGenericImport<NSTextContainerClass,
                                        NSTextContainer>)
                                        end;
                                        PNSTextContainer = Pointer;

                                        UIColorClass = interface(NSObjectClass)
                                        ['{C4BB480F-1F01-4B98-9046-34EB1EFEE946}']
                                        { class } function colorWithWhite
                                        (white: CGFloat; alpha: CGFloat)
                                        : UIColor;
                                        cdecl;
                                        { class } function colorWithHue
                                        (hue: CGFloat; saturation: CGFloat;
                                        brightness: CGFloat; alpha: CGFloat)
                                        : UIColor; cdecl;
                                        { class } function colorWithRed
                                        (red: CGFloat; green: CGFloat;
                                        blue: CGFloat; alpha: CGFloat)
                                        : UIColor; cdecl;
                                        { class } function colorWithCGColor
                                        (cgColor: CGColorRef): UIColor; cdecl;
                                        { class } function colorWithPatternImage
                                        (image: UIImage): UIColor; cdecl;
                                        { class } function colorWithCIColor
                                        (ciColor: ciColor): UIColor; cdecl;
                                        { class } function blackColor
                                        : UIColor; cdecl;
                                        { class } function darkGrayColor
                                        : UIColor; cdecl;
                                        { class } function lightGrayColor
                                        : UIColor; cdecl;
                                        { class } function whiteColor
                                        : UIColor; cdecl;
                                        { class } function grayColor
                                        : UIColor; cdecl;
                                        { class } function redColor
                                        : UIColor; cdecl;
                                        { class } function greenColor
                                        : UIColor; cdecl;
                                        { class } function blueColor
                                        : UIColor; cdecl;
                                        { class } function cyanColor
                                        : UIColor; cdecl;
                                        { class } function yellowColor
                                        : UIColor; cdecl;
                                        { class } function magentaColor
                                        : UIColor; cdecl;
                                        { class } function orangeColor
                                        : UIColor; cdecl;
                                        { class } function purpleColor
                                        : UIColor; cdecl;
                                        { class } function brownColor
                                        : UIColor; cdecl;
                                        { class } function clearColor
                                        : UIColor; cdecl;
                                        { class } function lightTextColor
                                        : UIColor; cdecl;
                                        { class } function darkTextColor
                                        : UIColor; cdecl;
                                        { class } function
                                        groupTableViewBackgroundColor
                                        : UIColor; cdecl;
                                        { class } function
                                        viewFlipsideBackgroundColor
                                        : UIColor; cdecl;
                                        { class } function
                                        scrollViewTexturedBackgroundColor
                                        : UIColor; cdecl;
                                        { class } function
                                        underPageBackgroundColor
                                        : UIColor; cdecl;
                                        end;
                                        UIColor = interface(NSObject)
                                        ['{CEB7FA33-F4CC-4F03-982C-18E2A152FF39}']
                                        function initWithWhite(white: CGFloat;
                                        alpha: CGFloat): UIColor;
                                        cdecl;
                                        function initWithHue(hue: CGFloat;
                                        saturation: CGFloat;
                                        brightness: CGFloat; alpha: CGFloat)
                                        : UIColor; cdecl;
                                        function initWithRed(red: CGFloat;
                                        green: CGFloat; blue: CGFloat;
                                        alpha: CGFloat): UIColor; cdecl;
                                        function initWithCGColor
                                        (cgColor: CGColorRef): UIColor; cdecl;
                                        function initWithPatternImage
                                        (image: UIImage): UIColor; cdecl;
                                        function initWithCIColor
                                        (ciColor: ciColor): UIColor; cdecl;
                                        procedure &set; cdecl;
                                        procedure setFill; cdecl;
                                        procedure setStroke; cdecl;
                                        function getWhite(white: PCGFloat;
                                        alpha: PCGFloat): Boolean; cdecl;
                                        function getHue(hue: PCGFloat;
                                        saturation: PCGFloat;
                                        brightness: PCGFloat; alpha: PCGFloat)
                                        : Boolean; cdecl;
                                        function getRed(red: PCGFloat;
                                        green: PCGFloat; blue: PCGFloat;
                                        alpha: PCGFloat): Boolean; cdecl;
                                        function colorWithAlphaComponent
                                        (alpha: CGFloat): UIColor; cdecl;
                                        function cgColor: CGColorRef; cdecl;
                                        function ciColor: ciColor; cdecl;
                                        end;

                                        TUIColor = class
                                        (TOCGenericImport<
                                        UIColorClass, UIColor>)
                                        end;
                                        PUIColor = Pointer;

                                        NSTextTabClass = interface
                                        (NSObjectClass)
                                        ['{0C67863B-F961-4078-BC6A-6086A5502E15}']
                                        { class } function
                                        columnTerminatorsForLocale
                                        (aLocale: NSLocale): NSCharacterSet;
                                        cdecl;
                                        end;
                                        NSTextTab = interface(NSObject)
                                        ['{36DE8E90-B667-4B61-BE46-0BE42C941DC2}']
                                        function initWithTextAlignment
                                        (alignment: NSTextAlignment;
                                        location: CGFloat;
                                        options: NSDictionary)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function alignment
                                        : NSTextAlignment; cdecl;
                                        function location: CGFloat; cdecl;
                                        function options: NSDictionary; cdecl;
                                        end;

                                        TNSTextTab = class
                                        (TOCGenericImport<NSTextTabClass,
                                        NSTextTab>)
                                        end;
                                        PNSTextTab = Pointer;

                                        NSParagraphStyleClass = interface
                                        (NSObjectClass)
                                        ['{03941061-2B81-4837-A362-1AD98E62E311}']
                                        { class } function defaultParagraphStyle
                                        : NSParagraphStyle;
                                        cdecl;
                                        { class } function
                                        defaultWritingDirectionForLanguage
                                        (languageName: NSString)
                                        : NSWritingDirection; cdecl;
                                        end;
                                        NSParagraphStyle = interface(NSObject)
                                        ['{BA31AE1C-30E8-4274-A60F-C816CC39ED98}']
                                        function lineSpacing: CGFloat;
                                        cdecl;
                                        function paragraphSpacing
                                        : CGFloat; cdecl;
                                        function alignment
                                        : NSTextAlignment; cdecl;
                                        function headIndent: CGFloat; cdecl;
                                        function tailIndent: CGFloat; cdecl;
                                        function firstLineHeadIndent
                                        : CGFloat; cdecl;
                                        function minimumLineHeight
                                        : CGFloat; cdecl;
                                        function maximumLineHeight
                                        : CGFloat; cdecl;
                                        function lineBreakMode
                                        : NSLineBreakMode; cdecl;
                                        function baseWritingDirection
                                        : NSWritingDirection; cdecl;
                                        function lineHeightMultiple
                                        : CGFloat; cdecl;
                                        function paragraphSpacingBefore
                                        : CGFloat; cdecl;
                                        function hyphenationFactor
                                        : Single; cdecl;
                                        function tabStops: NSArray; cdecl;
                                        function defaultTabInterval
                                        : CGFloat; cdecl;
                                        function allowsDefaultTighteningForTruncation
                                        : Boolean; cdecl;
                                        end;

                                        TNSParagraphStyle = class
                                        (TOCGenericImport<NSParagraphStyleClass,
                                        NSParagraphStyle>)
                                        end;
                                        PNSParagraphStyle = Pointer;

                                        NSMutableParagraphStyleClass = interface
                                        (NSParagraphStyleClass)
                                        ['{7BD06B7E-0543-4E31-9899-D8C24D5FD4ED}']
                                        end;
                                        NSMutableParagraphStyle = interface
                                        (NSParagraphStyle)
                                        ['{1FE5B85E-2F14-4A2F-87E2-03C7529ADB3D}']
                                        procedure setLineSpacing
                                        (lineSpacing: CGFloat);
                                        cdecl;
                                        function lineSpacing: CGFloat; cdecl;
                                        procedure setParagraphSpacing
                                        (paragraphSpacing: CGFloat); cdecl;
                                        function paragraphSpacing
                                        : CGFloat; cdecl;
                                        procedure setAlignment
                                        (alignment: NSTextAlignment); cdecl;
                                        function alignment
                                        : NSTextAlignment; cdecl;
                                        procedure setFirstLineHeadIndent
                                        (firstLineHeadIndent: CGFloat); cdecl;
                                        function firstLineHeadIndent
                                        : CGFloat; cdecl;
                                        procedure setHeadIndent
                                        (headIndent: CGFloat); cdecl;
                                        function headIndent: CGFloat; cdecl;
                                        procedure setTailIndent
                                        (tailIndent: CGFloat); cdecl;
                                        function tailIndent: CGFloat; cdecl;
                                        procedure setLineBreakMode
                                        (lineBreakMode: NSLineBreakMode); cdecl;
                                        function lineBreakMode
                                        : NSLineBreakMode; cdecl;
                                        procedure setMinimumLineHeight
                                        (minimumLineHeight: CGFloat); cdecl;
                                        function minimumLineHeight
                                        : CGFloat; cdecl;
                                        procedure setMaximumLineHeight
                                        (maximumLineHeight: CGFloat); cdecl;
                                        function maximumLineHeight
                                        : CGFloat; cdecl;
                                        procedure setBaseWritingDirection
                                        (baseWritingDirection
                                        : NSWritingDirection); cdecl;
                                        function baseWritingDirection
                                        : NSWritingDirection; cdecl;
                                        procedure setLineHeightMultiple
                                        (lineHeightMultiple: CGFloat); cdecl;
                                        function lineHeightMultiple
                                        : CGFloat; cdecl;
                                        procedure setParagraphSpacingBefore
                                        (paragraphSpacingBefore
                                        : CGFloat); cdecl;
                                        function paragraphSpacingBefore
                                        : CGFloat; cdecl;
                                        procedure setHyphenationFactor
                                        (hyphenationFactor: Single); cdecl;
                                        function hyphenationFactor
                                        : Single; cdecl;
                                        procedure setTabStops
                                        (tabStops: NSArray); cdecl;
                                        function tabStops: NSArray; cdecl;
                                        procedure setDefaultTabInterval
                                        (defaultTabInterval: CGFloat); cdecl;
                                        function defaultTabInterval
                                        : CGFloat; cdecl;
                                        procedure setAllowsDefaultTighteningForTruncation
                                        (allowsDefaultTighteningForTruncation
                                        : Boolean); cdecl;
                                        function allowsDefaultTighteningForTruncation
                                        : Boolean; cdecl;
                                        procedure addTabStop
                                        (anObject: NSTextTab); cdecl;
                                        procedure removeTabStop
                                        (anObject: NSTextTab); cdecl;
                                        procedure setParagraphStyle
                                        (obj: NSParagraphStyle); cdecl;
                                        end;

                                        TNSMutableParagraphStyle = class
                                        (TOCGenericImport<
                                        NSMutableParagraphStyleClass,
                                        NSMutableParagraphStyle>)
                                        end;
                                        PNSMutableParagraphStyle = Pointer;

                                        NSShadowClass = interface(NSObjectClass)
                                        ['{820C192B-95C4-4938-9C16-D3975E03938F}']
                                        end;
                                        NSShadow = interface(NSObject)
                                        ['{D5CB8D8F-3EA1-468E-807F-BE3A4974371F}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setShadowOffset
                                        (shadowOffset: CGSize); cdecl;
                                        function shadowOffset: CGSize; cdecl;
                                        procedure setShadowBlurRadius
                                        (shadowBlurRadius: CGFloat); cdecl;
                                        function shadowBlurRadius
                                        : CGFloat; cdecl;
                                        procedure setShadowColor
                                        (shadowColor: Pointer); cdecl;
                                        function shadowColor: Pointer; cdecl;
                                        end;

                                        TNSShadow = class
                                        (TOCGenericImport<NSShadowClass,
                                        NSShadow>)
                                        end;
                                        PNSShadow = Pointer;

                                        NSStringDrawingContextClass = interface
                                        (NSObjectClass)
                                        ['{88F19514-3D5E-46D0-9D5C-3C6F29072AFA}']
                                        end;
                                        NSStringDrawingContext = interface
                                        (NSObject)
                                        ['{77DBCA39-C5D7-4C84-8D39-6337139F0D94}']
                                        procedure setMinimumScaleFactor
                                        (minimumScaleFactor: CGFloat);
                                        cdecl;
                                        function minimumScaleFactor
                                        : CGFloat; cdecl;
                                        function actualScaleFactor
                                        : CGFloat; cdecl;
                                        function totalBounds: CGRect; cdecl;
                                        procedure setMinimumTrackingAdjustment
                                        (minimumTrackingAdjustment
                                        : CGFloat); cdecl;
                                        function minimumTrackingAdjustment
                                        : CGFloat; cdecl;
                                        function actualTrackingAdjustment
                                        : CGFloat; cdecl;
                                        end;

                                        TNSStringDrawingContext = class
                                        (TOCGenericImport<
                                        NSStringDrawingContextClass,
                                        NSStringDrawingContext>)
                                        end;
                                        PNSStringDrawingContext = Pointer;

                                        NSStringDrawing = interface(IObjectiveC)
                                        ['{DA07E06A-97C6-4CCD-8469-01C9DE7E83A2}']
                                        function sizeWithAttributes
                                        (attrs: NSDictionary): CGSize;
                                        cdecl;
                                        [MethodName
                                        ('drawAtPoint:withAttributes:')]
                                        procedure drawAtPointWithAttributes
                                        (point: CGPoint;
                                        withAttributes: NSDictionary); cdecl;
                                        [MethodName
                                        ('drawInRect:withAttributes:')]
                                        procedure drawInRectWithAttributes
                                        (rect: CGRect;
                                        withAttributes: NSDictionary); cdecl;
                                        function size: CGSize; cdecl;
                                        [MethodName('drawAtPoint:')]
                                        procedure drawAtPoint
                                        (point: CGPoint); cdecl;
                                        [MethodName('drawInRect:')]
                                        procedure drawInRect
                                        (rect: CGRect); cdecl;
                                        end;

                                        NSExtendedStringDrawing = interface
                                        (IObjectiveC)
                                        ['{F571B74E-B748-4B78-80B5-BE0EF4DC94DA}']
                                        [MethodName
                                        ('drawWithRect:options:attributes:context:')
                                        ]
                                        procedure drawWithRectOptionsAttributesContext
                                        (rect: CGRect;
                                        options: NSStringDrawingOptions;
                                        attributes: NSDictionary;
                                        context: NSStringDrawingContext);
                                        cdecl;
                                        [MethodName
                                        ('boundingRectWithSize:options:attributes:context:')
                                        ]
                                        function boundingRectWithSizeOptionsAttributesContext
                                        (size: CGSize;
                                        options: NSStringDrawingOptions;
                                        attributes: NSDictionary;
                                        context: NSStringDrawingContext)
                                        : CGRect; cdecl;
                                        [MethodName
                                        ('drawWithRect:options:context:')]
                                        procedure drawWithRectOptionsContext
                                        (rect: CGRect;
                                        options: NSStringDrawingOptions;
                                        context: NSStringDrawingContext); cdecl;
                                        [MethodName
                                        ('boundingRectWithSize:options:context:')
                                        ]
                                        function boundingRectWithSizeOptionsContext
                                        (size: CGSize;
                                        options: NSStringDrawingOptions;
                                        context: NSStringDrawingContext)
                                        : CGRect; cdecl;
                                        end;

                                        UIImageClass = interface(NSObjectClass)
                                        ['{8C667020-8FF7-4ED4-93D7-8CAB9DF055B3}']
                                        [MethodName('imageNamed:')]
                                        { class } function imageNamed
                                        (name: NSString): UIImage;
                                        cdecl;
                                        [MethodName
                                        ('imageNamed:inBundle:compatibleWithTraitCollection:')
                                        ]
                                        { class } function
                                        imageNamedInBundleCompatibleWithTraitCollection
                                        (name: NSString; inBundle: NSBundle;
                                        compatibleWithTraitCollection
                                        : UITraitCollection): UIImage; cdecl;
                                        { class } function
                                        imageWithContentsOfFile(path: NSString)
                                        : UIImage; cdecl;
                                        [MethodName('imageWithData:')]
                                        { class } function imageWithData
                                        (data: NSData): UIImage; cdecl;
                                        [MethodName('imageWithData:scale:')]
                                        { class } function imageWithDataScale
                                        (data: NSData; scale: CGFloat)
                                        : UIImage; cdecl;
                                        [MethodName('imageWithCGImage:')]
                                        { class } function imageWithCGImage
                                        (cgImage: CGImageRef): UIImage; cdecl;
                                        [MethodName
                                        ('imageWithCGImage:scale:orientation:')]
                                        { class } function
                                        imageWithCGImageScaleOrientation
                                        (cgImage: CGImageRef; scale: CGFloat;
                                        orientation: UIImageOrientation)
                                        : UIImage; cdecl;
                                        [MethodName('imageWithCIImage:')]
                                        { class } function imageWithCIImage
                                        (ciImage: ciImage): UIImage; cdecl;
                                        [MethodName
                                        ('imageWithCIImage:scale:orientation:')]
                                        { class } function
                                        imageWithCIImageScaleOrientation
                                        (ciImage: ciImage; scale: CGFloat;
                                        orientation: UIImageOrientation)
                                        : UIImage; cdecl;
                                        { class } function animatedImageNamed
                                        (name: NSString;
                                        duration: NSTimeInterval)
                                        : UIImage; cdecl;
                                        [MethodName
                                        ('animatedResizableImageNamed:capInsets:duration:')
                                        ]
                                        { class } function
                                        animatedResizableImageNamedCapInsetsDuration
                                        (name: NSString;
                                        capInsets: UIEdgeInsets;
                                        duration: NSTimeInterval)
                                        : UIImage; cdecl;
                                        [MethodName
                                        ('animatedResizableImageNamed:capInsets:resizingMode:duration:')
                                        ]
                                        { class } function
                                        animatedResizableImageNamedCapInsetsResizingModeDuration
                                        (name: NSString;
                                        capInsets: UIEdgeInsets;
                                        resizingMode: UIImageResizingMode;
                                        duration: NSTimeInterval)
                                        : UIImage; cdecl;
                                        { class } function
                                        animatedImageWithImages(images: NSArray;
                                        duration: NSTimeInterval)
                                        : UIImage; cdecl;
                                        end;
                                        UIImage = interface(NSObject)
                                        ['{4049CBBD-F8E9-43AE-B86D-F98AE7C6329C}']
                                        function initWithContentsOfFile
                                        (path: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        [MethodName('initWithData:')]
                                        function initWithData(data: NSData)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName('initWithData:scale:')]
                                        function initWithDataScale(data: NSData;
                                        scale: CGFloat)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName('initWithCGImage:')]
                                        function initWithCGImage
                                        (cgImage: CGImageRef)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('initWithCGImage:scale:orientation:')]
                                        function initWithCGImageScaleOrientation
                                        (cgImage: CGImageRef; scale: CGFloat;
                                        orientation: UIImageOrientation)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName('initWithCIImage:')]
                                        function initWithCIImage
                                        (ciImage: ciImage)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('initWithCIImage:scale:orientation:')]
                                        function initWithCIImageScaleOrientation
                                        (ciImage: ciImage; scale: CGFloat;
                                        orientation: UIImageOrientation)
                                        : Pointer { instancetype }; cdecl;
                                        function size: CGSize; cdecl;
                                        function cgImage: CGImageRef; cdecl;
                                        function ciImage: ciImage; cdecl;
                                        function imageOrientation
                                        : UIImageOrientation; cdecl;
                                        function scale: CGFloat; cdecl;
                                        function images: NSArray; cdecl;
                                        function duration
                                        : NSTimeInterval; cdecl;
                                        [MethodName('drawAtPoint:')]
                                        procedure drawAtPoint
                                        (point: CGPoint); cdecl;
                                        [MethodName
                                        ('drawAtPoint:blendMode:alpha:')]
                                        procedure drawAtPointBlendModeAlpha
                                        (point: CGPoint; blendMode: CGBlendMode;
                                        alpha: CGFloat); cdecl;
                                        [MethodName('drawInRect:')]
                                        procedure drawInRect
                                        (rect: CGRect); cdecl;
                                        [MethodName
                                        ('drawInRect:blendMode:alpha:')]
                                        procedure drawInRectBlendModeAlpha
                                        (rect: CGRect; blendMode: CGBlendMode;
                                        alpha: CGFloat); cdecl;
                                        procedure drawAsPatternInRect
                                        (rect: CGRect); cdecl;
                                        [MethodName
                                        ('resizableImageWithCapInsets:')]
                                        function resizableImageWithCapInsets
                                        (capInsets: UIEdgeInsets)
                                        : UIImage; cdecl;
                                        [MethodName
                                        ('resizableImageWithCapInsets:resizingMode:')
                                        ]
                                        function resizableImageWithCapInsetsResizingMode
                                        (capInsets: UIEdgeInsets;
                                        resizingMode: UIImageResizingMode)
                                        : UIImage; cdecl;
                                        function capInsets: UIEdgeInsets; cdecl;
                                        function resizingMode
                                        : UIImageResizingMode; cdecl;
                                        function imageWithAlignmentRectInsets
                                        (alignmentInsets: UIEdgeInsets)
                                        : UIImage; cdecl;
                                        function alignmentRectInsets
                                        : UIEdgeInsets; cdecl;
                                        function imageWithRenderingMode
                                        (renderingMode: UIImageRenderingMode)
                                        : UIImage; cdecl;
                                        function renderingMode
                                        : UIImageRenderingMode; cdecl;
                                        function traitCollection
                                        : UITraitCollection; cdecl;
                                        function imageAsset
                                        : UIImageAsset; cdecl;
                                        function imageFlippedForRightToLeftLayoutDirection
                                        : UIImage; cdecl;
                                        function flipsForRightToLeftLayoutDirection
                                        : Boolean; cdecl;
                                        function stretchableImageWithLeftCapWidth
                                        (leftCapWidth: NSInteger;
                                        topCapHeight: NSInteger)
                                        : UIImage; cdecl;
                                        function leftCapWidth: NSInteger; cdecl;
                                        function topCapHeight: NSInteger; cdecl;
                                        end;

                                        TUIImage = class
                                        (TOCGenericImport<
                                        UIImageClass, UIImage>)
                                        end;
                                        PUIImage = Pointer;

                                        NSTextAttachmentClass = interface
                                        (NSObjectClass)
                                        ['{5A318224-E0C0-4D2E-B327-990174931CB0}']
                                        end;
                                        NSTextAttachment = interface(NSObject)
                                        ['{5BCEB086-D669-43F0-9F77-404BC8D34312}']
                                        function initWithData
                                        (contentData: NSData; ofType: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setContents
                                        (contents: NSData); cdecl;
                                        function contents: NSData; cdecl;
                                        procedure setFileType
                                        (fileType: NSString); cdecl;
                                        function fileType: NSString; cdecl;
                                        procedure setImage
                                        (image: UIImage); cdecl;
                                        function image: UIImage; cdecl;
                                        procedure setBounds
                                        (bounds: CGRect); cdecl;
                                        function bounds: CGRect; cdecl;
                                        procedure setFileWrapper
                                        (fileWrapper: NSFileWrapper); cdecl;
                                        function fileWrapper
                                        : NSFileWrapper; cdecl;
                                        end;

                                        TNSTextAttachment = class
                                        (TOCGenericImport<NSTextAttachmentClass,
                                        NSTextAttachment>)
                                        end;
                                        PNSTextAttachment = Pointer;

                                        NSAttributedStringAttachmentConveniences =
                                        interface(IObjectiveC)
                                        ['{57EBE799-5DBD-42C3-B62B-1DBCC5ADFEF1}']
                                        function attributedStringWithAttachment
                                        (attachment: NSTextAttachment)
                                        : NSAttributedString;
                                        cdecl;
                                        end;

                                        UIBezierPathClass = interface
                                        (NSObjectClass)
                                        ['{267C344A-1A59-40D9-9448-9BF81C1B6147}']
                                        { class } function bezierPath
                                        : Pointer { instancetype };
                                        cdecl;
                                        { class } function bezierPathWithRect
                                        (rect: CGRect)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        bezierPathWithOvalInRect(rect: CGRect)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('bezierPathWithRoundedRect:cornerRadius:')
                                        ]
                                        { class } function
                                        bezierPathWithRoundedRectCornerRadius
                                        (rect: CGRect; cornerRadius: CGFloat)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:')
                                        ]
                                        { class } function
                                        bezierPathWithRoundedRectByRoundingCornersCornerRadii
                                        (rect: CGRect;
                                        byRoundingCorners: UIRectCorner;
                                        cornerRadii: CGSize)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        bezierPathWithArcCenter(center: CGPoint;
                                        radius: CGFloat; startAngle: CGFloat;
                                        endAngle: CGFloat; clockwise: Boolean)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function bezierPathWithCGPath
                                        (CGPath: CGPathRef)
                                        : Pointer { instancetype }; cdecl;
                                        end;
                                        UIBezierPath = interface(NSObject)
                                        ['{2BBD9EEE-20AF-40F5-A65B-FCB425337A8B}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setCGPath
                                        (CGPath: CGPathRef); cdecl;
                                        function CGPath: CGPathRef; cdecl;
                                        procedure moveToPoint
                                        (point: CGPoint); cdecl;
                                        procedure addLineToPoint
                                        (point: CGPoint); cdecl;
                                        procedure addCurveToPoint
                                        (endPoint: CGPoint;
                                        controlPoint1: CGPoint;
                                        controlPoint2: CGPoint); cdecl;
                                        procedure addQuadCurveToPoint
                                        (endPoint: CGPoint;
                                        controlPoint: CGPoint); cdecl;
                                        procedure addArcWithCenter
                                        (center: CGPoint; radius: CGFloat;
                                        startAngle: CGFloat; endAngle: CGFloat;
                                        clockwise: Boolean); cdecl;
                                        procedure closePath; cdecl;
                                        procedure removeAllPoints; cdecl;
                                        procedure appendPath
                                        (bezierPath: UIBezierPath); cdecl;
                                        function bezierPathByReversingPath
                                        : UIBezierPath; cdecl;
                                        procedure applyTransform
                                        (transform: CGAffineTransform); cdecl;
                                        function isEmpty: Boolean; cdecl;
                                        function bounds: CGRect; cdecl;
                                        function currentPoint: CGPoint; cdecl;
                                        function containsPoint(point: CGPoint)
                                        : Boolean; cdecl;
                                        procedure setLineWidth
                                        (lineWidth: CGFloat); cdecl;
                                        function lineWidth: CGFloat; cdecl;
                                        procedure setLineCapStyle
                                        (lineCapStyle: CGLineCap); cdecl;
                                        function lineCapStyle: CGLineCap; cdecl;
                                        procedure setLineJoinStyle
                                        (lineJoinStyle: CGLineJoin); cdecl;
                                        function lineJoinStyle
                                        : CGLineJoin; cdecl;
                                        procedure setMiterLimit
                                        (miterLimit: CGFloat); cdecl;
                                        function miterLimit: CGFloat; cdecl;
                                        procedure setFlatness
                                        (flatness: CGFloat); cdecl;
                                        function flatness: CGFloat; cdecl;
                                        procedure setUsesEvenOddFillRule
                                        (usesEvenOddFillRule: Boolean); cdecl;
                                        function usesEvenOddFillRule
                                        : Boolean; cdecl;
                                        procedure setLineDash(pattern: PCGFloat;
                                        count: NSInteger;
                                        phase: CGFloat); cdecl;
                                        procedure getLineDash(pattern: PCGFloat;
                                        count: PInteger;
                                        phase: PCGFloat); cdecl;
                                        procedure fill; cdecl;
                                        procedure stroke; cdecl;
                                        procedure fillWithBlendMode
                                        (blendMode: CGBlendMode;
                                        alpha: CGFloat); cdecl;
                                        procedure strokeWithBlendMode
                                        (blendMode: CGBlendMode;
                                        alpha: CGFloat); cdecl;
                                        procedure addClip; cdecl;
                                        end;

                                        TUIBezierPath = class
                                        (TOCGenericImport<UIBezierPathClass,
                                        UIBezierPath>)
                                        end;
                                        PUIBezierPath = Pointer;

                                        UIAccelerationClass = interface
                                        (NSObjectClass)
                                        ['{C7712DE6-1CC8-4DA4-9666-D20F9E058CAB}']
                                        end;
                                        UIAcceleration = interface(NSObject)
                                        ['{8DF969C1-721D-489F-A7FB-982C279A1E6C}']
                                        function timestamp: NSTimeInterval;
                                        cdecl;
                                        function x: UIAccelerationValue; cdecl;
                                        function y: UIAccelerationValue; cdecl;
                                        function z: UIAccelerationValue; cdecl;
                                        end;

                                        TUIAcceleration = class
                                        (TOCGenericImport<UIAccelerationClass,
                                        UIAcceleration>)
                                        end;
                                        PUIAcceleration = Pointer;

                                        UIAccelerometerClass = interface
                                        (NSObjectClass)
                                        ['{2F35E100-92B5-4D46-9192-E4DDB4727AE5}']
                                        { class } function sharedAccelerometer
                                        : UIAccelerometer;
                                        cdecl;
                                        end;
                                        UIAccelerometer = interface(NSObject)
                                        ['{D2F45D16-127D-4FB1-94B9-A372BEBBCC01}']
                                        procedure setUpdateInterval
                                        (updateInterval: NSTimeInterval);
                                        cdecl;
                                        function updateInterval
                                        : NSTimeInterval; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        end;

                                        TUIAccelerometer = class
                                        (TOCGenericImport<UIAccelerometerClass,
                                        UIAccelerometer>)
                                        end;
                                        PUIAccelerometer = Pointer;

                                        UIResponderClass = interface
                                        (NSObjectClass)
                                        ['{A37CC870-0791-4860-8639-BDA4F825B657}']
                                        { class } procedure
                                        clearTextInputContextIdentifier
                                        (identifier: NSString);
                                        cdecl;
                                        end;
                                        UIResponder = interface(NSObject)
                                        ['{D873F839-8711-4CD2-B7BF-10033088A570}']
                                        function nextResponder: UIResponder;
                                        cdecl;
                                        function canBecomeFirstResponder
                                        : Boolean; cdecl;
                                        function becomeFirstResponder
                                        : Boolean; cdecl;
                                        function canResignFirstResponder
                                        : Boolean; cdecl;
                                        function resignFirstResponder
                                        : Boolean; cdecl;
                                        function isFirstResponder
                                        : Boolean; cdecl;
                                        procedure touchesBegan(touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesMoved(touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesEnded(touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesCancelled
                                        (touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesEstimatedPropertiesUpdated
                                        (touches: NSSet); cdecl;
                                        procedure pressesBegan(presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        procedure pressesChanged(presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        procedure pressesEnded(presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        procedure pressesCancelled
                                        (presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        procedure motionBegan
                                        (motion: UIEventSubtype;
                                        withEvent: UIEvent); cdecl;
                                        procedure motionEnded
                                        (motion: UIEventSubtype;
                                        withEvent: UIEvent); cdecl;
                                        procedure motionCancelled
                                        (motion: UIEventSubtype;
                                        withEvent: UIEvent); cdecl;
                                        procedure remoteControlReceivedWithEvent
                                        (event: UIEvent); cdecl;
                                        function canPerformAction(action: SEL;
                                        withSender: Pointer): Boolean; cdecl;
                                        function targetForAction(action: SEL;
                                        withSender: Pointer): Pointer; cdecl;
                                        function undoManager
                                        : NSUndoManager; cdecl;
                                        function keyCommands: NSArray; cdecl;
                                        function inputView: UIView; cdecl;
                                        function inputAccessoryView
                                        : UIView; cdecl;
                                        function inputAssistantItem
                                        : UITextInputAssistantItem; cdecl;
                                        function inputViewController
                                        : UIInputViewController; cdecl;
                                        function inputAccessoryViewController
                                        : UIInputViewController; cdecl;
                                        function textInputMode
                                        : UITextInputMode; cdecl;
                                        function textInputContextIdentifier
                                        : NSString; cdecl;
                                        procedure reloadInputViews; cdecl;
                                        procedure setUserActivity
                                        (userActivity: NSUserActivity); cdecl;
                                        function userActivity
                                        : NSUserActivity; cdecl;
                                        procedure updateUserActivityState
                                        (activity: NSUserActivity); cdecl;
                                        procedure restoreUserActivityState
                                        (activity: NSUserActivity); cdecl;
                                        end;

                                        TUIResponder = class
                                        (TOCGenericImport<UIResponderClass,
                                        UIResponder>)
                                        end;
                                        PUIResponder = Pointer;

                                        UIViewClass = interface
                                        (UIResponderClass)
                                        ['{44C8D512-C3BD-43D8-A84D-5062AB06E251}']
                                        { class } function layerClass: Pointer;
                                        cdecl;
                                        { class } function
                                        userInterfaceLayoutDirectionForSemanticContentAttribute
                                        (attribute: UISemanticContentAttribute)
                                        : UIUserInterfaceLayoutDirection; cdecl;
                                        { class } procedure beginAnimations
                                        (animationID: NSString;
                                        context: Pointer); cdecl;
                                        { class } procedure
                                        commitAnimations; cdecl;
                                        { class } procedure setAnimationDelegate
                                        (delegate: Pointer); cdecl;
                                        { class } procedure
                                        setAnimationWillStartSelector
                                        (selector: SEL); cdecl;
                                        { class } procedure
                                        setAnimationDidStopSelector
                                        (selector: SEL); cdecl;
                                        { class } procedure setAnimationDuration
                                        (duration: NSTimeInterval); cdecl;
                                        { class } procedure setAnimationDelay
                                        (delay: NSTimeInterval); cdecl;
                                        { class } procedure
                                        setAnimationStartDate
                                        (startDate: NSDate); cdecl;
                                        { class } procedure setAnimationCurve
                                        (curve: UIViewAnimationCurve); cdecl;
                                        { class } procedure
                                        setAnimationRepeatCount
                                        (repeatCount: Single); cdecl;
                                        { class } procedure
                                        setAnimationRepeatAutoreverses
                                        (repeatAutoreverses: Boolean); cdecl;
                                        { class } procedure
                                        setAnimationBeginsFromCurrentState
                                        (fromCurrentState: Boolean); cdecl;
                                        { class } procedure
                                        setAnimationTransition
                                        (transition: UIViewAnimationTransition;
                                        forView: UIView; cache: Boolean); cdecl;
                                        { class } procedure setAnimationsEnabled
                                        (enabled: Boolean); cdecl;
                                        { class } function areAnimationsEnabled
                                        : Boolean; cdecl;
                                        { class } procedure
                                        performWithoutAnimation
                                        (actionsWithoutAnimation
                                        : TUIKitAction); cdecl;
                                        { class } function
                                        inheritedAnimationDuration
                                        : NSTimeInterval; cdecl;
                                        [MethodName
                                        ('animateWithDuration:delay:options:animations:completion:')
                                        ]
                                        { class } procedure
                                        animateWithDurationDelayOptionsAnimationsCompletion
                                        (duration: NSTimeInterval;
                                        delay: NSTimeInterval;
                                        options: UIViewAnimationOptions;
                                        animations: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        [MethodName
                                        ('animateWithDuration:animations:completion:')
                                        ]
                                        { class } procedure
                                        animateWithDurationAnimationsCompletion
                                        (duration: NSTimeInterval;
                                        animations: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        [MethodName
                                        ('animateWithDuration:animations:')]
                                        { class } procedure
                                        animateWithDurationAnimations
                                        (duration: NSTimeInterval;
                                        animations: TUIKitAction); cdecl;
                                        [MethodName
                                        ('animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:')
                                        ]
                                        { class } procedure
                                        animateWithDurationDelayUsingSpringWithDampingInitialSpringVelocityOptionsAnimationsCompletion
                                        (duration: NSTimeInterval;
                                        delay: NSTimeInterval;
                                        usingSpringWithDamping: CGFloat;
                                        initialSpringVelocity: CGFloat;
                                        options: UIViewAnimationOptions;
                                        animations: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        { class } procedure transitionWithView
                                        (view: UIView; duration: NSTimeInterval;
                                        options: UIViewAnimationOptions;
                                        animations: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        { class } procedure transitionFromView
                                        (fromView: UIView; toView: UIView;
                                        duration: NSTimeInterval;
                                        options: UIViewAnimationOptions;
                                        completion: TUIKitCompletion); cdecl;
                                        { class } procedure
                                        performSystemAnimation
                                        (animation: UISystemAnimation;
                                        onViews: NSArray;
                                        options: UIViewAnimationOptions;
                                        animations: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        { class } procedure
                                        animateKeyframesWithDuration
                                        (duration: NSTimeInterval;
                                        delay: NSTimeInterval;
                                        options: UIViewKeyframeAnimationOptions;
                                        animations: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        { class } procedure
                                        addKeyframeWithRelativeStartTime
                                        (frameStartTime: Double;
                                        relativeDuration: Double;
                                        animations: TUIKitAction); cdecl;
                                        { class } function
                                        requiresConstraintBasedLayout
                                        : Boolean; cdecl;
                                        end;
                                        UIView = interface(UIResponder)
                                        ['{D4D8D9D7-B2D0-49FA-98C4-C278EED5A4E4}']
                                        function initWithFrame(frame: CGRect)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setUserInteractionEnabled
                                        (userInteractionEnabled
                                        : Boolean); cdecl;
                                        function isUserInteractionEnabled
                                        : Boolean; cdecl;
                                        procedure setTag(tag: NSInteger); cdecl;
                                        function tag: NSInteger; cdecl;
                                        function layer: CALayer; cdecl;
                                        function canBecomeFocused
                                        : Boolean; cdecl;
                                        function isFocused: Boolean; cdecl;
                                        procedure setSemanticContentAttribute
                                        (semanticContentAttribute
                                        : UISemanticContentAttribute); cdecl;
                                        function semanticContentAttribute
                                        : UISemanticContentAttribute; cdecl;
                                        procedure setFrame
                                        (frame: CGRect); cdecl;
                                        function frame: CGRect; cdecl;
                                        procedure setBounds
                                        (bounds: CGRect); cdecl;
                                        function bounds: CGRect; cdecl;
                                        procedure setCenter
                                        (center: CGPoint); cdecl;
                                        function center: CGPoint; cdecl;
                                        procedure setTransform
                                        (transform: CGAffineTransform); cdecl;
                                        function transform
                                        : CGAffineTransform; cdecl;
                                        procedure setContentScaleFactor
                                        (contentScaleFactor: CGFloat); cdecl;
                                        function contentScaleFactor
                                        : CGFloat; cdecl;
                                        procedure setMultipleTouchEnabled
                                        (multipleTouchEnabled: Boolean); cdecl;
                                        function isMultipleTouchEnabled
                                        : Boolean; cdecl;
                                        procedure setExclusiveTouch
                                        (exclusiveTouch: Boolean); cdecl;
                                        function isExclusiveTouch
                                        : Boolean; cdecl;
                                        function hitTest(point: CGPoint;
                                        withEvent: UIEvent): UIView; cdecl;
                                        function pointInside(point: CGPoint;
                                        withEvent: UIEvent): Boolean; cdecl;
                                        [MethodName('convertPoint:toView:')]
                                        function convertPointToView
                                        (point: CGPoint; toView: UIView)
                                        : CGPoint; cdecl;
                                        [MethodName('convertPoint:fromView:')]
                                        function convertPointFromView
                                        (point: CGPoint; fromView: UIView)
                                        : CGPoint; cdecl;
                                        [MethodName('convertRect:toView:')]
                                        function convertRectToView(rect: CGRect;
                                        toView: UIView): CGRect; cdecl;
                                        [MethodName('convertRect:fromView:')]
                                        function convertRectFromView
                                        (rect: CGRect; fromView: UIView)
                                        : CGRect; cdecl;
                                        procedure setAutoresizesSubviews
                                        (autoresizesSubviews: Boolean); cdecl;
                                        function autoresizesSubviews
                                        : Boolean; cdecl;
                                        procedure setAutoresizingMask
                                        (autoresizingMask
                                        : UIViewAutoresizing); cdecl;
                                        function autoresizingMask
                                        : UIViewAutoresizing; cdecl;
                                        function sizeThatFits(size: CGSize)
                                        : CGSize; cdecl;
                                        procedure sizeToFit; cdecl;
                                        function superview: UIView; cdecl;
                                        function subviews: NSArray; cdecl;
                                        function window: UIWindow; cdecl;
                                        procedure removeFromSuperview; cdecl;
                                        [MethodName('insertSubview:atIndex:')]
                                        procedure insertSubviewAtIndex
                                        (view: UIView;
                                        atIndex: NSInteger); cdecl;
                                        procedure exchangeSubviewAtIndex
                                        (index1: NSInteger;
                                        withSubviewAtIndex: NSInteger); cdecl;
                                        procedure addSubview
                                        (view: UIView); cdecl;
                                        [MethodName
                                        ('insertSubview:belowSubview:')]
                                        procedure insertSubviewBelowSubview
                                        (view: UIView;
                                        belowSubview: UIView); cdecl;
                                        [MethodName
                                        ('insertSubview:aboveSubview:')]
                                        procedure insertSubviewAboveSubview
                                        (view: UIView;
                                        aboveSubview: UIView); cdecl;
                                        procedure bringSubviewToFront
                                        (view: UIView); cdecl;
                                        procedure sendSubviewToBack
                                        (view: UIView); cdecl;
                                        procedure didAddSubview
                                        (subview: UIView); cdecl;
                                        procedure willRemoveSubview
                                        (subview: UIView); cdecl;
                                        procedure willMoveToSuperview
                                        (newSuperview: UIView); cdecl;
                                        procedure didMoveToSuperview; cdecl;
                                        procedure willMoveToWindow
                                        (newWindow: UIWindow); cdecl;
                                        procedure didMoveToWindow; cdecl;
                                        function isDescendantOfView
                                        (view: UIView): Boolean; cdecl;
                                        function viewWithTag(tag: NSInteger)
                                        : UIView; cdecl;
                                        procedure setNeedsLayout; cdecl;
                                        procedure layoutIfNeeded; cdecl;
                                        procedure layoutSubviews; cdecl;
                                        procedure setLayoutMargins
                                        (layoutMargins: UIEdgeInsets); cdecl;
                                        function layoutMargins
                                        : UIEdgeInsets; cdecl;
                                        procedure setPreservesSuperviewLayoutMargins
                                        (preservesSuperviewLayoutMargins
                                        : Boolean); cdecl;
                                        function preservesSuperviewLayoutMargins
                                        : Boolean; cdecl;
                                        procedure layoutMarginsDidChange; cdecl;
                                        function layoutMarginsGuide
                                        : UILayoutGuide; cdecl;
                                        function readableContentGuide
                                        : UILayoutGuide; cdecl;
                                        [MethodName('drawRect:')]
                                        procedure drawRect(rect: CGRect); cdecl;
                                        procedure setNeedsDisplay; cdecl;
                                        procedure setNeedsDisplayInRect
                                        (rect: CGRect); cdecl;
                                        procedure setClipsToBounds
                                        (clipsToBounds: Boolean); cdecl;
                                        function clipsToBounds: Boolean; cdecl;
                                        procedure setBackgroundColor
                                        (backgroundColor: UIColor); cdecl;
                                        function backgroundColor
                                        : UIColor; cdecl;
                                        procedure setAlpha
                                        (alpha: CGFloat); cdecl;
                                        function alpha: CGFloat; cdecl;
                                        procedure setOpaque
                                        (opaque: Boolean); cdecl;
                                        function isOpaque: Boolean; cdecl;
                                        procedure setClearsContextBeforeDrawing
                                        (clearsContextBeforeDrawing
                                        : Boolean); cdecl;
                                        function clearsContextBeforeDrawing
                                        : Boolean; cdecl;
                                        procedure setHidden
                                        (hidden: Boolean); cdecl;
                                        function isHidden: Boolean; cdecl;
                                        procedure setContentMode
                                        (contentMode: UIViewContentMode); cdecl;
                                        function contentMode
                                        : UIViewContentMode; cdecl;
                                        procedure setContentStretch
                                        (contentStretch: CGRect); cdecl;
                                        function contentStretch: CGRect; cdecl;
                                        procedure setMaskView
                                        (maskView: UIView); cdecl;
                                        function maskView: UIView; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setTintAdjustmentMode
                                        (tintAdjustmentMode
                                        : UIViewTintAdjustmentMode); cdecl;
                                        function tintAdjustmentMode
                                        : UIViewTintAdjustmentMode; cdecl;
                                        procedure tintColorDidChange; cdecl;
                                        procedure setGestureRecognizers
                                        (gestureRecognizers: NSArray); cdecl;
                                        function gestureRecognizers
                                        : NSArray; cdecl;
                                        procedure addGestureRecognizer
                                        (gestureRecognizer
                                        : UIGestureRecognizer); cdecl;
                                        procedure removeGestureRecognizer
                                        (gestureRecognizer
                                        : UIGestureRecognizer); cdecl;
                                        function gestureRecognizerShouldBegin
                                        (gestureRecognizer: UIGestureRecognizer)
                                        : Boolean; cdecl;
                                        procedure addMotionEffect
                                        (effect: UIMotionEffect); cdecl;
                                        procedure removeMotionEffect
                                        (effect: UIMotionEffect); cdecl;
                                        procedure setMotionEffects
                                        (motionEffects: NSArray); cdecl;
                                        function motionEffects: NSArray; cdecl;
                                        function constraints: NSArray; cdecl;
                                        procedure addConstraint
                                        (constraint: NSLayoutConstraint); cdecl;
                                        procedure addConstraints
                                        (constraints: NSArray); cdecl;
                                        procedure removeConstraint
                                        (constraint: NSLayoutConstraint); cdecl;
                                        procedure removeConstraints
                                        (constraints: NSArray); cdecl;
                                        procedure updateConstraintsIfNeeded;
                                        cdecl;
                                        procedure updateConstraints; cdecl;
                                        function needsUpdateConstraints
                                        : Boolean; cdecl;
                                        procedure setNeedsUpdateConstraints;
                                        cdecl;
                                        procedure setTranslatesAutoresizingMaskIntoConstraints
                                        (translatesAutoresizingMaskIntoConstraints
                                        : Boolean); cdecl;
                                        function translatesAutoresizingMaskIntoConstraints
                                        : Boolean; cdecl;
                                        function alignmentRectForFrame
                                        (frame: CGRect): CGRect; cdecl;
                                        function frameForAlignmentRect
                                        (alignmentRect: CGRect): CGRect; cdecl;
                                        function alignmentRectInsets
                                        : UIEdgeInsets; cdecl;
                                        function viewForBaselineLayout
                                        : UIView; cdecl;
                                        function viewForFirstBaselineLayout
                                        : UIView; cdecl;
                                        function viewForLastBaselineLayout
                                        : UIView; cdecl;
                                        function intrinsicContentSize
                                        : CGSize; cdecl;
                                        procedure invalidateIntrinsicContentSize;
                                        cdecl;
                                        function contentHuggingPriorityForAxis
                                        (axis: UILayoutConstraintAxis)
                                        : UILayoutPriority; cdecl;
                                        procedure setContentHuggingPriority
                                        (priority: UILayoutPriority;
                                        forAxis: UILayoutConstraintAxis); cdecl;
                                        function contentCompressionResistancePriorityForAxis
                                        (axis: UILayoutConstraintAxis)
                                        : UILayoutPriority; cdecl;
                                        procedure setContentCompressionResistancePriority
                                        (priority: UILayoutPriority;
                                        forAxis: UILayoutConstraintAxis); cdecl;
                                        [MethodName
                                        ('systemLayoutSizeFittingSize:')]
                                        function systemLayoutSizeFittingSize
                                        (targetSize: CGSize): CGSize; cdecl;
                                        [MethodName
                                        ('systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:')
                                        ]
                                        function systemLayoutSizeFittingSizeWithHorizontalFittingPriorityVerticalFittingPriority
                                        (targetSize: CGSize;
                                        withHorizontalFittingPriority
                                        : UILayoutPriority;
                                        verticalFittingPriority
                                        : UILayoutPriority): CGSize; cdecl;
                                        function layoutGuides: NSArray; cdecl;
                                        procedure addLayoutGuide
                                        (layoutGuide: UILayoutGuide); cdecl;
                                        procedure removeLayoutGuide
                                        (layoutGuide: UILayoutGuide); cdecl;
                                        function leadingAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function trailingAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function leftAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function rightAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function topAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function bottomAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function widthAnchor
                                        : NSLayoutDimension; cdecl;
                                        function heightAnchor
                                        : NSLayoutDimension; cdecl;
                                        function centerXAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function centerYAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function firstBaselineAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function lastBaselineAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function constraintsAffectingLayoutForAxis
                                        (axis: UILayoutConstraintAxis)
                                        : NSArray; cdecl;
                                        function hasAmbiguousLayout
                                        : Boolean; cdecl;
                                        procedure exerciseAmbiguityInLayout;
                                        cdecl;
                                        procedure setRestorationIdentifier
                                        (restorationIdentifier
                                        : NSString); cdecl;
                                        function restorationIdentifier
                                        : NSString; cdecl;
                                        procedure encodeRestorableStateWithCoder
                                        (coder: NSCoder); cdecl;
                                        procedure decodeRestorableStateWithCoder
                                        (coder: NSCoder); cdecl;
                                        function snapshotViewAfterScreenUpdates
                                        (afterUpdates: Boolean): UIView; cdecl;
                                        function resizableSnapshotViewFromRect
                                        (rect: CGRect;
                                        afterScreenUpdates: Boolean;
                                        withCapInsets: UIEdgeInsets)
                                        : UIView; cdecl;
                                        function drawViewHierarchyInRect
                                        (rect: CGRect;
                                        afterScreenUpdates: Boolean)
                                        : Boolean; cdecl;
                                        function endEditing(force: Boolean)
                                        : Boolean; cdecl;
                                        function viewPrintFormatter
                                        : UIViewPrintFormatter; cdecl;
                                        [MethodName
                                        ('drawRect:forViewPrintFormatter:')]
                                        procedure drawRectForViewPrintFormatter
                                        (rect: CGRect;
                                        forViewPrintFormatter
                                        : UIViewPrintFormatter); cdecl;
                                        end;

                                        TUIView = class
                                        (TOCGenericImport<UIViewClass, UIView>)
                                        end;
                                        PUIView = Pointer;

                                        UIWindowClass = interface(UIViewClass)
                                        ['{C810ED1F-8B22-4CDA-868A-74C0C6723892}']
                                        end;
                                        UIWindow = interface(UIView)
                                        ['{215D4592-B098-4EB2-B1D2-0E4983AF33EA}']
                                        procedure setScreen(screen: UIScreen);
                                        cdecl;
                                        function screen: UIScreen; cdecl;
                                        procedure setWindowLevel
                                        (windowLevel: UIWindowLevel); cdecl;
                                        function windowLevel
                                        : UIWindowLevel; cdecl;
                                        function isKeyWindow: Boolean; cdecl;
                                        procedure becomeKeyWindow; cdecl;
                                        procedure resignKeyWindow; cdecl;
                                        procedure makeKeyWindow; cdecl;
                                        procedure makeKeyAndVisible; cdecl;
                                        procedure setRootViewController
                                        (rootViewController
                                        : UIViewController); cdecl;
                                        function rootViewController
                                        : UIViewController; cdecl;
                                        procedure sendEvent
                                        (event: UIEvent); cdecl;
                                        [MethodName('convertPoint:toWindow:')]
                                        function convertPointToWindow
                                        (point: CGPoint; toWindow: UIWindow)
                                        : CGPoint; cdecl;
                                        [MethodName('convertPoint:fromWindow:')]
                                        function convertPointFromWindow
                                        (point: CGPoint; fromWindow: UIWindow)
                                        : CGPoint; cdecl;
                                        [MethodName('convertRect:toWindow:')]
                                        function convertRectToWindow
                                        (rect: CGRect; toWindow: UIWindow)
                                        : CGRect; cdecl;
                                        [MethodName('convertRect:fromWindow:')]
                                        function convertRectFromWindow
                                        (rect: CGRect; fromWindow: UIWindow)
                                        : CGRect; cdecl;
                                        end;

                                        TUIWindow = class
                                        (TOCGenericImport<UIWindowClass,
                                        UIWindow>)
                                        end;
                                        PUIWindow = Pointer;

                                        UIGestureRecognizerClass = interface
                                        (NSObjectClass)
                                        ['{C2E38C33-4410-48D2-B395-C6331F74C714}']
                                        end;
                                        UIGestureRecognizer = interface
                                        (NSObject)
                                        ['{B14F80FA-56C3-4E04-BD4A-F0B9381BB6AB}']
                                        function initWithTarget(target: Pointer;
                                        action: SEL): Pointer { instancetype };
                                        cdecl;
                                        procedure addTarget(target: Pointer;
                                        action: SEL); cdecl;
                                        procedure removeTarget(target: Pointer;
                                        action: SEL); cdecl;
                                        function state
                                        : UIGestureRecognizerState; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setEnabled
                                        (enabled: Boolean); cdecl;
                                        function isEnabled: Boolean; cdecl;
                                        function view: UIView; cdecl;
                                        procedure setCancelsTouchesInView
                                        (cancelsTouchesInView: Boolean); cdecl;
                                        function cancelsTouchesInView
                                        : Boolean; cdecl;
                                        procedure setDelaysTouchesBegan
                                        (delaysTouchesBegan: Boolean); cdecl;
                                        function delaysTouchesBegan
                                        : Boolean; cdecl;
                                        procedure setDelaysTouchesEnded
                                        (delaysTouchesEnded: Boolean); cdecl;
                                        function delaysTouchesEnded
                                        : Boolean; cdecl;
                                        procedure setAllowedTouchTypes
                                        (allowedTouchTypes: NSArray); cdecl;
                                        function allowedTouchTypes
                                        : NSArray; cdecl;
                                        procedure setAllowedPressTypes
                                        (allowedPressTypes: NSArray); cdecl;
                                        function allowedPressTypes
                                        : NSArray; cdecl;
                                        procedure requireGestureRecognizerToFail
                                        (otherGestureRecognizer
                                        : UIGestureRecognizer); cdecl;
                                        function locationInView(view: UIView)
                                        : CGPoint; cdecl;
                                        function numberOfTouches
                                        : NSUInteger; cdecl;
                                        function locationOfTouch
                                        (touchIndex: NSUInteger; inView: UIView)
                                        : CGPoint; cdecl;
                                        procedure setState
                                        (state: UIGestureRecognizerState);
                                        cdecl;
                                        procedure ignoreTouch(touch: UITouch;
                                        forEvent: UIEvent); cdecl;
                                        procedure ignorePress(button: UIPress;
                                        forEvent: UIPressesEvent); cdecl;
                                        procedure reset; cdecl;
                                        function canPreventGestureRecognizer
                                        (preventedGestureRecognizer
                                        : UIGestureRecognizer): Boolean; cdecl;
                                        function canBePreventedByGestureRecognizer
                                        (preventingGestureRecognizer
                                        : UIGestureRecognizer): Boolean; cdecl;
                                        function shouldRequireFailureOfGestureRecognizer
                                        (otherGestureRecognizer
                                        : UIGestureRecognizer): Boolean; cdecl;
                                        function shouldBeRequiredToFailByGestureRecognizer
                                        (otherGestureRecognizer
                                        : UIGestureRecognizer): Boolean; cdecl;
                                        procedure touchesBegan(touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesMoved(touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesEnded(touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesCancelled
                                        (touches: NSSet;
                                        withEvent: UIEvent); cdecl;
                                        procedure touchesEstimatedPropertiesUpdated
                                        (touches: NSSet); cdecl;
                                        procedure pressesBegan(presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        procedure pressesChanged(presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        procedure pressesEnded(presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        procedure pressesCancelled
                                        (presses: NSSet;
                                        withEvent: UIPressesEvent); cdecl;
                                        end;

                                        TUIGestureRecognizer = class
                                        (TOCGenericImport<
                                        UIGestureRecognizerClass,
                                        UIGestureRecognizer>)
                                        end;
                                        PUIGestureRecognizer = Pointer;

                                        UITouchClass = interface(NSObjectClass)
                                        ['{C13C412C-ADD9-46B6-80F2-D230784B8446}']
                                        end;
                                        UITouch = interface(NSObject)
                                        ['{C6A6387B-C434-4098-B22C-CE76E4CC9768}']
                                        function timestamp: NSTimeInterval;
                                        cdecl;
                                        function phase: UITouchPhase; cdecl;
                                        function tapCount: NSUInteger; cdecl;
                                        function &type: UITouchType; cdecl;
                                        function majorRadius: CGFloat; cdecl;
                                        function majorRadiusTolerance
                                        : CGFloat; cdecl;
                                        function window: UIWindow; cdecl;
                                        function view: UIView; cdecl;
                                        function gestureRecognizers
                                        : NSArray; cdecl;
                                        function locationInView(view: UIView)
                                        : CGPoint; cdecl;
                                        function previousLocationInView
                                        (view: UIView): CGPoint; cdecl;
                                        function preciseLocationInView
                                        (view: UIView): CGPoint; cdecl;
                                        function precisePreviousLocationInView
                                        (view: UIView): CGPoint; cdecl;
                                        function force: CGFloat; cdecl;
                                        function maximumPossibleForce
                                        : CGFloat; cdecl;
                                        function azimuthAngleInView
                                        (view: UIView): CGFloat; cdecl;
                                        function azimuthUnitVectorInView
                                        (view: UIView): CGVector; cdecl;
                                        function altitudeAngle: CGFloat; cdecl;
                                        function estimationUpdateIndex
                                        : NSNumber; cdecl;
                                        function estimatedProperties
                                        : UITouchProperties; cdecl;
                                        function estimatedPropertiesExpectingUpdates
                                        : UITouchProperties; cdecl;
                                        end;

                                        TUITouch = class
                                        (TOCGenericImport<
                                        UITouchClass, UITouch>)
                                        end;
                                        PUITouch = Pointer;

                                        UIEventClass = interface(NSObjectClass)
                                        ['{1BC2030C-2E91-419E-A99A-55EFFF4C350E}']
                                        end;
                                        UIEvent = interface(NSObject)
                                        ['{2ACA3518-3F76-4E1C-8AC9-D2AC77584847}']
                                        function &type: UIEventType;
                                        cdecl;
                                        function subtype: UIEventSubtype; cdecl;
                                        function timestamp
                                        : NSTimeInterval; cdecl;
                                        function allTouches: NSSet; cdecl;
                                        function touchesForWindow
                                        (window: UIWindow): NSSet; cdecl;
                                        function touchesForView(view: UIView)
                                        : NSSet; cdecl;
                                        function touchesForGestureRecognizer
                                        (gesture: UIGestureRecognizer)
                                        : NSSet; cdecl;
                                        function coalescedTouchesForTouch
                                        (touch: UITouch): NSArray; cdecl;
                                        function predictedTouchesForTouch
                                        (touch: UITouch): NSArray; cdecl;
                                        end;

                                        TUIEvent = class
                                        (TOCGenericImport<
                                        UIEventClass, UIEvent>)
                                        end;
                                        PUIEvent = Pointer;

                                        UIPressClass = interface(NSObjectClass)
                                        ['{46327A28-A0FA-4F09-A348-79E5630A6997}']
                                        end;
                                        UIPress = interface(NSObject)
                                        ['{9C8A2469-99B9-4F5A-925C-53CDD02C237C}']
                                        function timestamp: NSTimeInterval;
                                        cdecl;
                                        function phase: UIPressPhase; cdecl;
                                        function &type: UIPressType; cdecl;
                                        function window: UIWindow; cdecl;
                                        function responder: UIResponder; cdecl;
                                        function gestureRecognizers
                                        : NSArray; cdecl;
                                        function force: CGFloat; cdecl;
                                        end;

                                        TUIPress = class
                                        (TOCGenericImport<
                                        UIPressClass, UIPress>)
                                        end;
                                        PUIPress = Pointer;

                                        UIPressesEventClass = interface
                                        (UIEventClass)
                                        ['{35DCA6D4-77A4-4701-9069-829ECC4E0F99}']
                                        end;
                                        UIPressesEvent = interface(UIEvent)
                                        ['{A7E3C2BC-EA1F-4375-8023-E7D14A31581E}']
                                        function allPresses: NSSet;
                                        cdecl;
                                        function pressesForGestureRecognizer
                                        (gesture: UIGestureRecognizer)
                                        : NSSet; cdecl;
                                        end;

                                        TUIPressesEvent = class
                                        (TOCGenericImport<UIPressesEventClass,
                                        UIPressesEvent>)
                                        end;
                                        PUIPressesEvent = Pointer;

                                        UIKeyCommandClass = interface
                                        (NSObjectClass)
                                        ['{6B90DDB2-BAC8-4E4A-B6D2-C74E2F3385F7}']
                                        [MethodName
                                        ('keyCommandWithInput:modifierFlags:action:')
                                        ]
                                        { class } function
                                        keyCommandWithInputModifierFlagsAction
                                        (input: NSString;
                                        modifierFlags: UIKeyModifierFlags;
                                        action: SEL): UIKeyCommand;
                                        cdecl;
                                        [MethodName
                                        ('keyCommandWithInput:modifierFlags:action:discoverabilityTitle:')
                                        ]
                                        { class } function
                                        keyCommandWithInputModifierFlagsActionDiscoverabilityTitle
                                        (input: NSString;
                                        modifierFlags: UIKeyModifierFlags;
                                        action: SEL;
                                        discoverabilityTitle: NSString)
                                        : UIKeyCommand; cdecl;
                                        end;
                                        UIKeyCommand = interface(NSObject)
                                        ['{27345347-61C8-4084-BD75-4334AEBA6289}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function input: NSString; cdecl;
                                        function modifierFlags
                                        : UIKeyModifierFlags; cdecl;
                                        procedure setDiscoverabilityTitle
                                        (discoverabilityTitle: NSString); cdecl;
                                        function discoverabilityTitle
                                        : NSString; cdecl;
                                        end;

                                        TUIKeyCommand = class
                                        (TOCGenericImport<UIKeyCommandClass,
                                        UIKeyCommand>)
                                        end;
                                        PUIKeyCommand = Pointer;

                                        UIResponderStandardEditActions =
                                        interface(IObjectiveC)
                                        ['{67521FAC-07F0-4523-AA82-83EAF4C356C6}']
                                        procedure cut(sender: Pointer);
                                        cdecl;
                                        procedure copy(sender: Pointer); cdecl;
                                        procedure paste(sender: Pointer); cdecl;
                                        procedure select
                                        (sender: Pointer); cdecl;
                                        procedure selectAll
                                        (sender: Pointer); cdecl;
                                        procedure delete
                                        (sender: Pointer); cdecl;
                                        procedure makeTextWritingDirectionLeftToRight
                                        (sender: Pointer); cdecl;
                                        procedure makeTextWritingDirectionRightToLeft
                                        (sender: Pointer); cdecl;
                                        procedure toggleBoldface
                                        (sender: Pointer); cdecl;
                                        procedure toggleItalics
                                        (sender: Pointer); cdecl;
                                        procedure toggleUnderline
                                        (sender: Pointer); cdecl;
                                        procedure increaseSize
                                        (sender: Pointer); cdecl;
                                        procedure decreaseSize
                                        (sender: Pointer); cdecl;
                                        end;

                                        UIViewControllerClass = interface
                                        (UIResponderClass)
                                        ['{846B5C34-14C0-47C3-A75F-FF0F21D21560}']
                                        { class } procedure
                                        attemptRotationToDeviceOrientation;
                                        cdecl;
                                        end;
                                        UIViewController = interface
                                        (UIResponder)
                                        ['{45868D77-5B62-4DF5-8D4C-9051C3C5903F}']
                                        function initWithNibName
                                        (nibNameOrNil: NSString;
                                        bundle: NSBundle)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setView(view: UIView); cdecl;
                                        function view: UIView; cdecl;
                                        procedure loadView; cdecl;
                                        procedure loadViewIfNeeded; cdecl;
                                        function viewIfLoaded: UIView; cdecl;
                                        procedure viewWillUnload; cdecl;
                                        procedure viewDidUnload; cdecl;
                                        procedure viewDidLoad; cdecl;
                                        function isViewLoaded: Boolean; cdecl;
                                        function nibName: NSString; cdecl;
                                        function nibBundle: NSBundle; cdecl;
                                        function storyboard
                                        : UIStoryboard; cdecl;
                                        procedure performSegueWithIdentifier
                                        (identifier: NSString;
                                        sender: Pointer); cdecl;
                                        function shouldPerformSegueWithIdentifier
                                        (identifier: NSString; sender: Pointer)
                                        : Boolean; cdecl;
                                        procedure prepareForSegue
                                        (segue: UIStoryboardSegue;
                                        sender: Pointer); cdecl;
                                        function canPerformUnwindSegueAction
                                        (action: SEL;
                                        fromViewController: UIViewController;
                                        withSender: Pointer): Boolean; cdecl;
                                        function allowedChildViewControllersForUnwindingFromSource
                                        (source: UIStoryboardUnwindSegueSource)
                                        : NSArray; cdecl;
                                        function childViewControllerContainingSegueSource
                                        (source: UIStoryboardUnwindSegueSource)
                                        : UIViewController; cdecl;
                                        function viewControllerForUnwindSegueAction
                                        (action: SEL;
                                        fromViewController: UIViewController;
                                        withSender: Pointer)
                                        : UIViewController; cdecl;
                                        procedure unwindForSegue
                                        (unwindSegue: UIStoryboardSegue;
                                        towardsViewController
                                        : UIViewController); cdecl;
                                        function segueForUnwindingToViewController
                                        (toViewController: UIViewController;
                                        fromViewController: UIViewController;
                                        identifier: NSString)
                                        : UIStoryboardSegue; cdecl;
                                        procedure viewWillAppear
                                        (animated: Boolean); cdecl;
                                        procedure viewDidAppear
                                        (animated: Boolean); cdecl;
                                        procedure viewWillDisappear
                                        (animated: Boolean); cdecl;
                                        procedure viewDidDisappear
                                        (animated: Boolean); cdecl;
                                        procedure viewWillLayoutSubviews; cdecl;
                                        procedure viewDidLayoutSubviews; cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure didReceiveMemoryWarning;
                                        cdecl;
                                        function parentViewController
                                        : UIViewController; cdecl;
                                        function modalViewController
                                        : UIViewController; cdecl;
                                        function presentedViewController
                                        : UIViewController; cdecl;
                                        function presentingViewController
                                        : UIViewController; cdecl;
                                        procedure setDefinesPresentationContext
                                        (definesPresentationContext
                                        : Boolean); cdecl;
                                        function definesPresentationContext
                                        : Boolean; cdecl;
                                        procedure setProvidesPresentationContextTransitionStyle
                                        (providesPresentationContextTransitionStyle
                                        : Boolean); cdecl;
                                        function providesPresentationContextTransitionStyle
                                        : Boolean; cdecl;
                                        function isBeingPresented
                                        : Boolean; cdecl;
                                        function isBeingDismissed
                                        : Boolean; cdecl;
                                        function isMovingToParentViewController
                                        : Boolean; cdecl;
                                        function isMovingFromParentViewController
                                        : Boolean; cdecl;
                                        procedure presentViewController
                                        (viewControllerToPresent
                                        : UIViewController; animated: Boolean;
                                        completion: TUIKitAction); cdecl;
                                        procedure dismissViewControllerAnimated
                                        (flag: Boolean;
                                        completion: TUIKitAction); cdecl;
                                        procedure presentModalViewController
                                        (modalViewController: UIViewController;
                                        animated: Boolean); cdecl;
                                        procedure dismissModalViewControllerAnimated
                                        (animated: Boolean); cdecl;
                                        procedure setModalTransitionStyle
                                        (modalTransitionStyle
                                        : UIModalTransitionStyle); cdecl;
                                        function modalTransitionStyle
                                        : UIModalTransitionStyle; cdecl;
                                        procedure setModalPresentationStyle
                                        (modalPresentationStyle
                                        : UIModalPresentationStyle); cdecl;
                                        function modalPresentationStyle
                                        : UIModalPresentationStyle; cdecl;
                                        procedure setModalPresentationCapturesStatusBarAppearance
                                        (modalPresentationCapturesStatusBarAppearance
                                        : Boolean); cdecl;
                                        function modalPresentationCapturesStatusBarAppearance
                                        : Boolean; cdecl;
                                        function disablesAutomaticKeyboardDismissal
                                        : Boolean; cdecl;
                                        procedure setWantsFullScreenLayout
                                        (wantsFullScreenLayout: Boolean); cdecl;
                                        function wantsFullScreenLayout
                                        : Boolean; cdecl;
                                        procedure setEdgesForExtendedLayout
                                        (edgesForExtendedLayout
                                        : UIRectEdge); cdecl;
                                        function edgesForExtendedLayout
                                        : UIRectEdge; cdecl;
                                        procedure setExtendedLayoutIncludesOpaqueBars
                                        (extendedLayoutIncludesOpaqueBars
                                        : Boolean); cdecl;
                                        function extendedLayoutIncludesOpaqueBars
                                        : Boolean; cdecl;
                                        procedure setAutomaticallyAdjustsScrollViewInsets
                                        (automaticallyAdjustsScrollViewInsets
                                        : Boolean); cdecl;
                                        function automaticallyAdjustsScrollViewInsets
                                        : Boolean; cdecl;
                                        procedure setPreferredContentSize
                                        (preferredContentSize: CGSize); cdecl;
                                        function preferredContentSize
                                        : CGSize; cdecl;
                                        function preferredStatusBarStyle
                                        : UIStatusBarStyle; cdecl;
                                        function prefersStatusBarHidden
                                        : Boolean; cdecl;
                                        function preferredStatusBarUpdateAnimation
                                        : UIStatusBarAnimation; cdecl;
                                        procedure setNeedsStatusBarAppearanceUpdate;
                                        cdecl;
                                        function targetViewControllerForAction
                                        (action: SEL; sender: Pointer)
                                        : UIViewController; cdecl;
                                        procedure showViewController
                                        (vc: UIViewController;
                                        sender: Pointer); cdecl;
                                        procedure showDetailViewController
                                        (vc: UIViewController;
                                        sender: Pointer); cdecl;
                                        function shouldAutorotateToInterfaceOrientation
                                        (toInterfaceOrientation
                                        : UIInterfaceOrientation)
                                        : Boolean; cdecl;
                                        function shouldAutorotate
                                        : Boolean; cdecl;
                                        function supportedInterfaceOrientations
                                        : UIInterfaceOrientationMask; cdecl;
                                        function preferredInterfaceOrientationForPresentation
                                        : UIInterfaceOrientation; cdecl;
                                        function rotatingHeaderView
                                        : UIView; cdecl;
                                        function rotatingFooterView
                                        : UIView; cdecl;
                                        function interfaceOrientation
                                        : UIInterfaceOrientation; cdecl;
                                        procedure willRotateToInterfaceOrientation
                                        (toInterfaceOrientation
                                        : UIInterfaceOrientation;
                                        duration: NSTimeInterval); cdecl;
                                        procedure didRotateFromInterfaceOrientation
                                        (fromInterfaceOrientation
                                        : UIInterfaceOrientation); cdecl;
                                        procedure willAnimateRotationToInterfaceOrientation
                                        (toInterfaceOrientation
                                        : UIInterfaceOrientation;
                                        duration: NSTimeInterval); cdecl;
                                        procedure willAnimateFirstHalfOfRotationToInterfaceOrientation
                                        (toInterfaceOrientation
                                        : UIInterfaceOrientation;
                                        duration: NSTimeInterval); cdecl;
                                        procedure didAnimateFirstHalfOfRotationToInterfaceOrientation
                                        (toInterfaceOrientation
                                        : UIInterfaceOrientation); cdecl;
                                        procedure willAnimateSecondHalfOfRotationFromInterfaceOrientation
                                        (fromInterfaceOrientation
                                        : UIInterfaceOrientation;
                                        duration: NSTimeInterval); cdecl;
                                        [MethodName('setEditing:')]
                                        procedure setEditing
                                        (editing: Boolean); cdecl;
                                        function isEditing: Boolean; cdecl;
                                        [MethodName('setEditing:animated:')]
                                        procedure setEditingAnimated
                                        (editing: Boolean;
                                        animated: Boolean); cdecl;
                                        function editButtonItem
                                        : UIBarButtonItem; cdecl;
                                        function searchDisplayController
                                        : UISearchDisplayController; cdecl;
                                        function childViewControllers
                                        : NSArray; cdecl;
                                        procedure addChildViewController
                                        (childController
                                        : UIViewController); cdecl;
                                        procedure removeFromParentViewController;
                                        cdecl;
                                        procedure transitionFromViewController
                                        (fromViewController: UIViewController;
                                        toViewController: UIViewController;
                                        duration: NSTimeInterval;
                                        options: UIViewAnimationOptions;
                                        animations: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        procedure beginAppearanceTransition
                                        (isAppearing: Boolean;
                                        animated: Boolean); cdecl;
                                        procedure endAppearanceTransition;
                                        cdecl;
                                        function childViewControllerForStatusBarStyle
                                        : UIViewController; cdecl;
                                        function childViewControllerForStatusBarHidden
                                        : UIViewController; cdecl;
                                        procedure setOverrideTraitCollection
                                        (collection: UITraitCollection;
                                        forChildViewController
                                        : UIViewController); cdecl;
                                        function overrideTraitCollectionForChildViewController
                                        (childViewController: UIViewController)
                                        : UITraitCollection; cdecl;
                                        function automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers
                                        : Boolean; cdecl;
                                        function shouldAutomaticallyForwardRotationMethods
                                        : Boolean; cdecl;
                                        function shouldAutomaticallyForwardAppearanceMethods
                                        : Boolean; cdecl;
                                        procedure willMoveToParentViewController
                                        (parent: UIViewController); cdecl;
                                        procedure didMoveToParentViewController
                                        (parent: UIViewController); cdecl;
                                        procedure setRestorationIdentifier
                                        (restorationIdentifier
                                        : NSString); cdecl;
                                        function restorationIdentifier
                                        : NSString; cdecl;
                                        procedure setRestorationClass
                                        (restorationClass: Pointer); cdecl;
                                        function restorationClass
                                        : Pointer; cdecl;
                                        procedure encodeRestorableStateWithCoder
                                        (coder: NSCoder); cdecl;
                                        procedure decodeRestorableStateWithCoder
                                        (coder: NSCoder); cdecl;
                                        procedure applicationFinishedRestoringState;
                                        cdecl;
                                        procedure updateViewConstraints; cdecl;
                                        procedure setTransitioningDelegate
                                        (transitioningDelegate: Pointer); cdecl;
                                        function transitioningDelegate
                                        : Pointer; cdecl;
                                        function topLayoutGuide: Pointer; cdecl;
                                        function bottomLayoutGuide
                                        : Pointer; cdecl;
                                        procedure addKeyCommand
                                        (keyCommand: UIKeyCommand); cdecl;
                                        procedure removeKeyCommand
                                        (keyCommand: UIKeyCommand); cdecl;
                                        function extensionContext
                                        : NSExtensionContext; cdecl;
                                        function presentationController
                                        : UIPresentationController; cdecl;
                                        function popoverPresentationController
                                        : UIPopoverPresentationController;
                                        cdecl;
                                        function registerForPreviewingWithDelegate
                                        (delegate: Pointer; sourceView: UIView)
                                        : Pointer; cdecl;
                                        procedure unregisterForPreviewingWithContext
                                        (previewing: Pointer); cdecl;
                                        function previewActionItems
                                        : NSArray; cdecl;
                                        function navigationItem
                                        : UINavigationItem; cdecl;
                                        procedure setHidesBottomBarWhenPushed
                                        (hidesBottomBarWhenPushed
                                        : Boolean); cdecl;
                                        function hidesBottomBarWhenPushed
                                        : Boolean; cdecl;
                                        function navigationController
                                        : UINavigationController; cdecl;
                                        [MethodName('setToolbarItems:')]
                                        procedure setToolbarItems
                                        (toolbarItems: NSArray); cdecl;
                                        function toolbarItems: NSArray; cdecl;
                                        [MethodName
                                        ('setToolbarItems:animated:')]
                                        procedure setToolbarItemsAnimated
                                        (toolbarItems: NSArray;
                                        animated: Boolean); cdecl;
                                        procedure setModalInPopover
                                        (modalInPopover: Boolean); cdecl;
                                        function isModalInPopover
                                        : Boolean; cdecl;
                                        procedure setContentSizeForViewInPopover
                                        (contentSizeForViewInPopover
                                        : CGSize); cdecl;
                                        function contentSizeForViewInPopover
                                        : CGSize; cdecl;
                                        function transitionCoordinator
                                        : Pointer; cdecl;
                                        function splitViewController
                                        : UISplitViewController; cdecl;
                                        procedure collapseSecondaryViewController
                                        (secondaryViewController
                                        : UIViewController;
                                        forSplitViewController
                                        : UISplitViewController); cdecl;
                                        function separateSecondaryViewControllerForSplitViewController
                                        (splitViewController
                                        : UISplitViewController)
                                        : UIViewController; cdecl;
                                        procedure setTabBarItem
                                        (tabBarItem: UITabBarItem); cdecl;
                                        function tabBarItem
                                        : UITabBarItem; cdecl;
                                        function tabBarController
                                        : UITabBarController; cdecl;
                                        end;

                                        TUIViewController = class
                                        (TOCGenericImport<UIViewControllerClass,
                                        UIViewController>)
                                        end;
                                        PUIViewController = Pointer;

                                        UIInputViewControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{0E9891FB-875E-4918-A7BA-8FB4D147DBAC}']
                                        end;
                                        UIInputViewController = interface
                                        (UIViewController)
                                        ['{B395E303-C306-4816-8ABA-367ACADB49D0}']
                                        procedure setInputView
                                        (inputView: UIInputView);
                                        cdecl;
                                        function inputView: UIInputView; cdecl;
                                        function textDocumentProxy
                                        : Pointer; cdecl;
                                        procedure setPrimaryLanguage
                                        (primaryLanguage: NSString); cdecl;
                                        function primaryLanguage
                                        : NSString; cdecl;
                                        procedure dismissKeyboard; cdecl;
                                        procedure advanceToNextInputMode; cdecl;
                                        procedure requestSupplementaryLexiconWithCompletion
                                        (completionHandler
                                        : TUIKitCompletionHandler1); cdecl;
                                        end;

                                        TUIInputViewController = class
                                        (TOCGenericImport<
                                        UIInputViewControllerClass,
                                        UIInputViewController>)
                                        end;
                                        PUIInputViewController = Pointer;

                                        UITextInputModeClass = interface
                                        (NSObjectClass)
                                        ['{E44DEB70-1A46-4BBB-864B-9D8B54E6206D}']
                                        { class } function currentInputMode
                                        : UITextInputMode;
                                        cdecl;
                                        { class } function activeInputModes
                                        : NSArray; cdecl;
                                        end;
                                        UITextInputMode = interface(NSObject)
                                        ['{687CE80E-EE91-4C2C-B7B7-E59FEDD6CABC}']
                                        function primaryLanguage: NSString;
                                        cdecl;
                                        end;

                                        TUITextInputMode = class
                                        (TOCGenericImport<UITextInputModeClass,
                                        UITextInputMode>)
                                        end;
                                        PUITextInputMode = Pointer;

                                        UITextInputAssistantItemClass =
                                        interface(NSObjectClass)
                                        ['{8A1E6F4B-E06C-484E-AFED-ADC77BED8619}']
                                        end;
                                        UITextInputAssistantItem = interface
                                        (NSObject)
                                        ['{C714BEE4-09B9-44A3-8DF9-36852279A84F}']
                                        procedure setAllowsHidingShortcuts
                                        (allowsHidingShortcuts: Boolean);
                                        cdecl;
                                        function allowsHidingShortcuts
                                        : Boolean; cdecl;
                                        procedure setLeadingBarButtonGroups
                                        (leadingBarButtonGroups
                                        : NSArray); cdecl;
                                        function leadingBarButtonGroups
                                        : NSArray; cdecl;
                                        procedure setTrailingBarButtonGroups
                                        (trailingBarButtonGroups
                                        : NSArray); cdecl;
                                        function trailingBarButtonGroups
                                        : NSArray; cdecl;
                                        end;

                                        TUITextInputAssistantItem = class
                                        (TOCGenericImport<
                                        UITextInputAssistantItemClass,
                                        UITextInputAssistantItem>)
                                        end;
                                        PUITextInputAssistantItem = Pointer;

                                        UIKitAdditions = interface(IObjectiveC)
                                        ['{D28A8614-B527-4C61-98C1-490D80D9F200}']
                                        function initWithColor(color: UIColor)
                                        : Pointer { instancetype };
                                        cdecl;
                                        [MethodName('initWithImage:')]
                                        function initWithImage(image: UIImage)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName('initWithImage:options:')]
                                        function initWithImageOptions
                                        (image: UIImage; options: NSDictionary)
                                        : Pointer { instancetype }; cdecl;
                                        end;

                                        UITraitCollectionClass = interface
                                        (NSObjectClass)
                                        ['{FE5648A5-FD80-431E-9599-312EC9516FE5}']
                                        { class } function
                                        traitCollectionWithTraitsFromCollections
                                        (traitCollections: NSArray)
                                        : UITraitCollection;
                                        cdecl;
                                        { class } function
                                        traitCollectionWithUserInterfaceIdiom
                                        (idiom: UIUserInterfaceIdiom)
                                        : UITraitCollection; cdecl;
                                        { class } function
                                        traitCollectionWithDisplayScale
                                        (scale: CGFloat)
                                        : UITraitCollection; cdecl;
                                        { class } function
                                        traitCollectionWithHorizontalSizeClass
                                        (horizontalSizeClass
                                        : UIUserInterfaceSizeClass)
                                        : UITraitCollection; cdecl;
                                        { class } function
                                        traitCollectionWithVerticalSizeClass
                                        (verticalSizeClass
                                        : UIUserInterfaceSizeClass)
                                        : UITraitCollection; cdecl;
                                        { class } function
                                        traitCollectionWithForceTouchCapability
                                        (capability: UIForceTouchCapability)
                                        : UITraitCollection; cdecl;
                                        end;
                                        UITraitCollection = interface(NSObject)
                                        ['{B79A7FA6-5958-45AD-990E-D9868E88B5C7}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function containsTraitsInCollection
                                        (trait: UITraitCollection)
                                        : Boolean; cdecl;
                                        function userInterfaceIdiom
                                        : UIUserInterfaceIdiom; cdecl;
                                        function displayScale: CGFloat; cdecl;
                                        function horizontalSizeClass
                                        : UIUserInterfaceSizeClass; cdecl;
                                        function verticalSizeClass
                                        : UIUserInterfaceSizeClass; cdecl;
                                        function forceTouchCapability
                                        : UIForceTouchCapability; cdecl;
                                        end;

                                        TUITraitCollection = class
                                        (TOCGenericImport<
                                        UITraitCollectionClass,
                                        UITraitCollection>)
                                        end;
                                        PUITraitCollection = Pointer;

                                        UIDynamicAnimatorClass = interface
                                        (NSObjectClass)
                                        ['{B92819CE-C721-4143-BAFE-5369B9662507}']
                                        end;
                                        UIDynamicAnimator = interface(NSObject)
                                        ['{5F32DA77-0CBC-4544-B015-28DFE4EC9DBD}']
                                        function initWithReferenceView
                                        (view: UIView)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure addBehavior
                                        (behavior: UIDynamicBehavior); cdecl;
                                        procedure removeBehavior
                                        (behavior: UIDynamicBehavior); cdecl;
                                        procedure removeAllBehaviors; cdecl;
                                        function referenceView: UIView; cdecl;
                                        function behaviors: NSArray; cdecl;
                                        function itemsInRect(rect: CGRect)
                                        : NSArray; cdecl;
                                        procedure updateItemUsingCurrentState
                                        (item: Pointer); cdecl;
                                        function isRunning: Boolean; cdecl;
                                        function elapsedTime
                                        : NSTimeInterval; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        function initWithCollectionViewLayout
                                        (layout: UICollectionViewLayout)
                                        : Pointer { instancetype }; cdecl;
                                        function layoutAttributesForCellAtIndexPath
                                        (indexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function layoutAttributesForSupplementaryViewOfKind
                                        (kind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function layoutAttributesForDecorationViewOfKind
                                        (decorationViewKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        end;

                                        TUIDynamicAnimator = class
                                        (TOCGenericImport<
                                        UIDynamicAnimatorClass,
                                        UIDynamicAnimator>)
                                        end;
                                        PUIDynamicAnimator = Pointer;

                                        UIDynamicItemGroupClass = interface
                                        (NSObjectClass)
                                        ['{F8D5D6A7-0E46-4655-ABA5-E67CFE82FADB}']
                                        end;
                                        UIDynamicItemGroup = interface(NSObject)
                                        ['{64F58C18-903E-43A8-A000-8BAD21E52A1A}']
                                        function initWithItems(items: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function items: NSArray; cdecl;
                                        end;

                                        TUIDynamicItemGroup = class
                                        (TOCGenericImport<
                                        UIDynamicItemGroupClass,
                                        UIDynamicItemGroup>)
                                        end;
                                        PUIDynamicItemGroup = Pointer;

                                        UIDynamicBehaviorClass = interface
                                        (NSObjectClass)
                                        ['{E6413D03-89F3-4004-9716-C6F359BBB416}']
                                        end;
                                        UIDynamicBehavior = interface(NSObject)
                                        ['{9BA38F58-C32F-4EC1-A8D3-2E016D25C1D8}']
                                        procedure addChildBehavior
                                        (behavior: UIDynamicBehavior);
                                        cdecl;
                                        procedure removeChildBehavior
                                        (behavior: UIDynamicBehavior); cdecl;
                                        function childBehaviors: NSArray; cdecl;
                                        procedure setAction
                                        (action: TUIKitAction); cdecl;
                                        function action: TUIKitAction; cdecl;
                                        procedure willMoveToAnimator
                                        (dynamicAnimator
                                        : UIDynamicAnimator); cdecl;
                                        function dynamicAnimator
                                        : UIDynamicAnimator; cdecl;
                                        end;

                                        TUIDynamicBehavior = class
                                        (TOCGenericImport<
                                        UIDynamicBehaviorClass,
                                        UIDynamicBehavior>)
                                        end;
                                        PUIDynamicBehavior = Pointer;

                                        UIDeviceClass = interface(NSObjectClass)
                                        ['{AAF3439F-0539-4C69-A17F-D424560F11E0}']
                                        { class } function currentDevice
                                        : UIDevice;
                                        cdecl;
                                        end;
                                        UIDevice = interface(NSObject)
                                        ['{000207E0-DAF3-4727-9059-CC0804345BB9}']
                                        function name: NSString;
                                        cdecl;
                                        function model: NSString; cdecl;
                                        function localizedModel
                                        : NSString; cdecl;
                                        function systemName: NSString; cdecl;
                                        function systemVersion: NSString; cdecl;
                                        function orientation
                                        : UIDeviceOrientation; cdecl;
                                        function identifierForVendor
                                        : NSUUID; cdecl;
                                        function isGeneratingDeviceOrientationNotifications
                                        : Boolean; cdecl;
                                        procedure beginGeneratingDeviceOrientationNotifications;
                                        cdecl;
                                        procedure endGeneratingDeviceOrientationNotifications;
                                        cdecl;
                                        procedure setBatteryMonitoringEnabled
                                        (batteryMonitoringEnabled
                                        : Boolean); cdecl;
                                        function isBatteryMonitoringEnabled
                                        : Boolean; cdecl;
                                        function batteryState
                                        : UIDeviceBatteryState; cdecl;
                                        function batteryLevel: Single; cdecl;
                                        procedure setProximityMonitoringEnabled
                                        (proximityMonitoringEnabled
                                        : Boolean); cdecl;
                                        function isProximityMonitoringEnabled
                                        : Boolean; cdecl;
                                        function proximityState: Boolean; cdecl;
                                        function isMultitaskingSupported
                                        : Boolean; cdecl;
                                        function userInterfaceIdiom
                                        : UIUserInterfaceIdiom; cdecl;
                                        procedure playInputClick; cdecl;
                                        end;

                                        TUIDevice = class
                                        (TOCGenericImport<UIDeviceClass,
                                        UIDevice>)
                                        end;
                                        PUIDevice = Pointer;

                                        UILayoutGuideClass = interface
                                        (NSObjectClass)
                                        ['{D3DCB4AC-81C9-485D-BF17-291A51EF4C43}']
                                        end;
                                        UILayoutGuide = interface(NSObject)
                                        ['{35401273-898D-453E-BA91-654398DA8369}']
                                        function layoutFrame: CGRect;
                                        cdecl;
                                        procedure setOwningView
                                        (owningView: UIView); cdecl;
                                        function owningView: UIView; cdecl;
                                        procedure setIdentifier
                                        (identifier: NSString); cdecl;
                                        function identifier: NSString; cdecl;
                                        function leadingAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function trailingAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function leftAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function rightAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function topAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function bottomAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function widthAnchor
                                        : NSLayoutDimension; cdecl;
                                        function heightAnchor
                                        : NSLayoutDimension; cdecl;
                                        function centerXAnchor
                                        : NSLayoutXAxisAnchor; cdecl;
                                        function centerYAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        end;

                                        TUILayoutGuide = class
                                        (TOCGenericImport<UILayoutGuideClass,
                                        UILayoutGuide>)
                                        end;
                                        PUILayoutGuide = Pointer;

                                        UIFocusAnimationCoordinatorClass =
                                        interface(NSObjectClass)
                                        ['{47E373A0-40B8-45D9-B320-7D4BFA3F4CFB}']
                                        end;
                                        UIFocusAnimationCoordinator = interface
                                        (NSObject)
                                        ['{98B61AD1-4E1F-4AAE-9451-FFE1E2DDF6D7}']
                                        procedure addCoordinatedAnimations
                                        (animations: TUIKitAction;
                                        completion: TUIKitAction);
                                        cdecl;
                                        end;

                                        TUIFocusAnimationCoordinator = class
                                        (TOCGenericImport<
                                        UIFocusAnimationCoordinatorClass,
                                        UIFocusAnimationCoordinator>)
                                        end;
                                        PUIFocusAnimationCoordinator = Pointer;

                                        UIFocusUpdateContextClass = interface
                                        (NSObjectClass)
                                        ['{296D3BF8-99E9-4F9D-BF5B-6A2AEF12A37B}']
                                        end;
                                        UIFocusUpdateContext = interface
                                        (NSObject)
                                        ['{8FA72A22-E36D-487A-8247-4A7D0E38F6DF}']
                                        function previouslyFocusedView: UIView;
                                        cdecl;
                                        function nextFocusedView: UIView; cdecl;
                                        function focusHeading
                                        : UIFocusHeading; cdecl;
                                        end;

                                        TUIFocusUpdateContext = class
                                        (TOCGenericImport<
                                        UIFocusUpdateContextClass,
                                        UIFocusUpdateContext>)
                                        end;
                                        PUIFocusUpdateContext = Pointer;

                                        UIFocusGuideClass = interface
                                        (UILayoutGuideClass)
                                        ['{2D935841-51C1-475D-BB91-B6E6F116C91A}']
                                        end;
                                        UIFocusGuide = interface(UILayoutGuide)
                                        ['{AEFAD2D5-88EF-41A9-8D2B-978D521EFBA7}']
                                        procedure setEnabled(enabled: Boolean);
                                        cdecl;
                                        function isEnabled: Boolean; cdecl;
                                        procedure setPreferredFocusedView
                                        (preferredFocusedView: UIView); cdecl;
                                        function preferredFocusedView
                                        : UIView; cdecl;
                                        end;

                                        TUIFocusGuide = class
                                        (TOCGenericImport<UIFocusGuideClass,
                                        UIFocusGuide>)
                                        end;
                                        PUIFocusGuide = Pointer;

                                        UIMotionEffectClass = interface
                                        (NSObjectClass)
                                        ['{FF29ABAE-D31F-4BFD-BBD4-0CEA9E7C922F}']
                                        end;
                                        UIMotionEffect = interface(NSObject)
                                        ['{C289D643-4AB1-41DB-8769-AEBACD7A31FA}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function keyPathsAndRelativeValuesForViewerOffset
                                        (viewerOffset: UIOffset)
                                        : NSDictionary; cdecl;
                                        end;

                                        TUIMotionEffect = class
                                        (TOCGenericImport<UIMotionEffectClass,
                                        UIMotionEffect>)
                                        end;
                                        PUIMotionEffect = Pointer;

                                        UIImageViewClass = interface
                                        (UIViewClass)
                                        ['{E45702A6-E10D-497D-ABC0-7FBBA3660C79}']
                                        end;
                                        UIImageView = interface(UIView)
                                        ['{1B6CE45B-63D5-4DCA-8E7F-6289F92ABD09}']
                                        [MethodName('initWithImage:')]
                                        function initWithImage(image: UIImage)
                                        : Pointer { instancetype };
                                        cdecl;
                                        [MethodName
                                        ('initWithImage:highlightedImage:')]
                                        function initWithImageHighlightedImage
                                        (image: UIImage;
                                        highlightedImage: UIImage)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setImage
                                        (image: UIImage); cdecl;
                                        function image: UIImage; cdecl;
                                        procedure setHighlightedImage
                                        (highlightedImage: UIImage); cdecl;
                                        function highlightedImage
                                        : UIImage; cdecl;
                                        procedure setUserInteractionEnabled
                                        (userInteractionEnabled
                                        : Boolean); cdecl;
                                        function isUserInteractionEnabled
                                        : Boolean; cdecl;
                                        procedure setHighlighted
                                        (highlighted: Boolean); cdecl;
                                        function isHighlighted: Boolean; cdecl;
                                        procedure setAnimationImages
                                        (animationImages: NSArray); cdecl;
                                        function animationImages
                                        : NSArray; cdecl;
                                        procedure setHighlightedAnimationImages
                                        (highlightedAnimationImages
                                        : NSArray); cdecl;
                                        function highlightedAnimationImages
                                        : NSArray; cdecl;
                                        procedure setAnimationDuration
                                        (animationDuration
                                        : NSTimeInterval); cdecl;
                                        function animationDuration
                                        : NSTimeInterval; cdecl;
                                        procedure setAnimationRepeatCount
                                        (animationRepeatCount
                                        : NSInteger); cdecl;
                                        function animationRepeatCount
                                        : NSInteger; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure startAnimating; cdecl;
                                        procedure stopAnimating; cdecl;
                                        function isAnimating: Boolean; cdecl;
                                        procedure setAdjustsImageWhenAncestorFocused
                                        (adjustsImageWhenAncestorFocused
                                        : Boolean); cdecl;
                                        function adjustsImageWhenAncestorFocused
                                        : Boolean; cdecl;
                                        function focusedFrameGuide
                                        : UILayoutGuide; cdecl;
                                        end;

                                        TUIImageView = class
                                        (TOCGenericImport<UIImageViewClass,
                                        UIImageView>)
                                        end;
                                        PUIImageView = Pointer;

                                        UIPanGestureRecognizerClass = interface
                                        (UIGestureRecognizerClass)
                                        ['{0B49F946-5516-4AE9-B6BA-12E9BAD192C4}']
                                        end;
                                        UIPanGestureRecognizer = interface
                                        (UIGestureRecognizer)
                                        ['{3EDCEC81-4DA4-4519-BA97-6F7B97A9FC9A}']
                                        procedure setMinimumNumberOfTouches
                                        (minimumNumberOfTouches: NSUInteger);
                                        cdecl;
                                        function minimumNumberOfTouches
                                        : NSUInteger; cdecl;
                                        procedure setMaximumNumberOfTouches
                                        (maximumNumberOfTouches
                                        : NSUInteger); cdecl;
                                        function maximumNumberOfTouches
                                        : NSUInteger; cdecl;
                                        function translationInView(view: UIView)
                                        : CGPoint; cdecl;
                                        procedure setTranslation
                                        (translation: CGPoint;
                                        inView: UIView); cdecl;
                                        function velocityInView(view: UIView)
                                        : CGPoint; cdecl;
                                        end;

                                        TUIPanGestureRecognizer = class
                                        (TOCGenericImport<
                                        UIPanGestureRecognizerClass,
                                        UIPanGestureRecognizer>)
                                        end;
                                        PUIPanGestureRecognizer = Pointer;

                                        UIPinchGestureRecognizerClass =
                                        interface(UIGestureRecognizerClass)
                                        ['{685D17C9-E0B4-4B1E-A65F-6244D3181A30}']
                                        end;
                                        UIPinchGestureRecognizer = interface
                                        (UIGestureRecognizer)
                                        ['{583A3521-D4E3-4235-9725-EED71C9A4346}']
                                        procedure setScale(scale: CGFloat);
                                        cdecl;
                                        function scale: CGFloat; cdecl;
                                        function velocity: CGFloat; cdecl;
                                        end;

                                        TUIPinchGestureRecognizer = class
                                        (TOCGenericImport<
                                        UIPinchGestureRecognizerClass,
                                        UIPinchGestureRecognizer>)
                                        end;
                                        PUIPinchGestureRecognizer = Pointer;

                                        UIScrollViewClass = interface
                                        (UIViewClass)
                                        ['{85D7E70B-0F20-46A1-9DFD-A014B7B8E5AC}']
                                        end;
                                        UIScrollView = interface(UIView)
                                        ['{D5F5D327-9145-4BBE-A3A6-5BE4B93E88A6}']
                                        [MethodName('setContentOffset:')]
                                        procedure setContentOffset
                                        (contentOffset: CGPoint);
                                        cdecl;
                                        function contentOffset: CGPoint; cdecl;
                                        procedure setContentSize
                                        (contentSize: CGSize); cdecl;
                                        function contentSize: CGSize; cdecl;
                                        procedure setContentInset
                                        (contentInset: UIEdgeInsets); cdecl;
                                        function contentInset
                                        : UIEdgeInsets; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setDirectionalLockEnabled
                                        (directionalLockEnabled
                                        : Boolean); cdecl;
                                        function isDirectionalLockEnabled
                                        : Boolean; cdecl;
                                        procedure setBounces
                                        (bounces: Boolean); cdecl;
                                        function bounces: Boolean; cdecl;
                                        procedure setAlwaysBounceVertical
                                        (alwaysBounceVertical: Boolean); cdecl;
                                        function alwaysBounceVertical
                                        : Boolean; cdecl;
                                        procedure setAlwaysBounceHorizontal
                                        (alwaysBounceHorizontal
                                        : Boolean); cdecl;
                                        function alwaysBounceHorizontal
                                        : Boolean; cdecl;
                                        procedure setPagingEnabled
                                        (pagingEnabled: Boolean); cdecl;
                                        function isPagingEnabled
                                        : Boolean; cdecl;
                                        procedure setScrollEnabled
                                        (scrollEnabled: Boolean); cdecl;
                                        function isScrollEnabled
                                        : Boolean; cdecl;
                                        procedure setShowsHorizontalScrollIndicator
                                        (showsHorizontalScrollIndicator
                                        : Boolean); cdecl;
                                        function showsHorizontalScrollIndicator
                                        : Boolean; cdecl;
                                        procedure setShowsVerticalScrollIndicator
                                        (showsVerticalScrollIndicator
                                        : Boolean); cdecl;
                                        function showsVerticalScrollIndicator
                                        : Boolean; cdecl;
                                        procedure setScrollIndicatorInsets
                                        (scrollIndicatorInsets
                                        : UIEdgeInsets); cdecl;
                                        function scrollIndicatorInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setIndicatorStyle
                                        (indicatorStyle
                                        : UIScrollViewIndicatorStyle); cdecl;
                                        function indicatorStyle
                                        : UIScrollViewIndicatorStyle; cdecl;
                                        procedure setDecelerationRate
                                        (decelerationRate: CGFloat); cdecl;
                                        function decelerationRate
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('setContentOffset:animated:')]
                                        procedure setContentOffsetAnimated
                                        (contentOffset: CGPoint;
                                        animated: Boolean); cdecl;
                                        procedure scrollRectToVisible
                                        (rect: CGRect;
                                        animated: Boolean); cdecl;
                                        procedure flashScrollIndicators; cdecl;
                                        function isTracking: Boolean; cdecl;
                                        function isDragging: Boolean; cdecl;
                                        function isDecelerating: Boolean; cdecl;
                                        procedure setDelaysContentTouches
                                        (delaysContentTouches: Boolean); cdecl;
                                        function delaysContentTouches
                                        : Boolean; cdecl;
                                        procedure setCanCancelContentTouches
                                        (canCancelContentTouches
                                        : Boolean); cdecl;
                                        function canCancelContentTouches
                                        : Boolean; cdecl;
                                        function touchesShouldBegin
                                        (touches: NSSet; withEvent: UIEvent;
                                        inContentView: UIView): Boolean; cdecl;
                                        function touchesShouldCancelInContentView
                                        (view: UIView): Boolean; cdecl;
                                        procedure setMinimumZoomScale
                                        (minimumZoomScale: CGFloat); cdecl;
                                        function minimumZoomScale
                                        : CGFloat; cdecl;
                                        procedure setMaximumZoomScale
                                        (maximumZoomScale: CGFloat); cdecl;
                                        function maximumZoomScale
                                        : CGFloat; cdecl;
                                        [MethodName('setZoomScale:')]
                                        procedure setZoomScale
                                        (zoomScale: CGFloat); cdecl;
                                        function zoomScale: CGFloat; cdecl;
                                        [MethodName('setZoomScale:animated:')]
                                        procedure setZoomScaleAnimated
                                        (scale: CGFloat;
                                        animated: Boolean); cdecl;
                                        procedure zoomToRect(rect: CGRect;
                                        animated: Boolean); cdecl;
                                        procedure setBouncesZoom
                                        (bouncesZoom: Boolean); cdecl;
                                        function bouncesZoom: Boolean; cdecl;
                                        function isZooming: Boolean; cdecl;
                                        function isZoomBouncing: Boolean; cdecl;
                                        procedure setScrollsToTop
                                        (scrollsToTop: Boolean); cdecl;
                                        function scrollsToTop: Boolean; cdecl;
                                        function panGestureRecognizer
                                        : UIPanGestureRecognizer; cdecl;
                                        function pinchGestureRecognizer
                                        : UIPinchGestureRecognizer; cdecl;
                                        function directionalPressGestureRecognizer
                                        : UIGestureRecognizer; cdecl;
                                        procedure setKeyboardDismissMode
                                        (keyboardDismissMode
                                        : UIScrollViewKeyboardDismissMode);
                                        cdecl;
                                        function keyboardDismissMode
                                        : UIScrollViewKeyboardDismissMode;
                                        cdecl;
                                        end;

                                        TUIScrollView = class
                                        (TOCGenericImport<UIScrollViewClass,
                                        UIScrollView>)
                                        end;
                                        PUIScrollView = Pointer;

                                        UISwipeGestureRecognizerClass =
                                        interface(UIGestureRecognizerClass)
                                        ['{5D6E94EB-3B68-4CE9-BE60-F01E266545D3}']
                                        end;
                                        UISwipeGestureRecognizer = interface
                                        (UIGestureRecognizer)
                                        ['{2E561080-6D96-49BE-8F2E-2B56B522B826}']
                                        procedure setNumberOfTouchesRequired
                                        (numberOfTouchesRequired: NSUInteger);
                                        cdecl;
                                        function numberOfTouchesRequired
                                        : NSUInteger; cdecl;
                                        procedure setDirection
                                        (direction
                                        : UISwipeGestureRecognizerDirection);
                                        cdecl;
                                        function direction
                                        : UISwipeGestureRecognizerDirection;
                                        cdecl;
                                        end;

                                        TUISwipeGestureRecognizer = class
                                        (TOCGenericImport<
                                        UISwipeGestureRecognizerClass,
                                        UISwipeGestureRecognizer>)
                                        end;
                                        PUISwipeGestureRecognizer = Pointer;

                                        UIStringDrawing = interface(IObjectiveC)
                                        ['{40AFC61B-915A-4655-83BB-87870C98F9D0}']
                                        [MethodName('sizeWithFont:')]
                                        function sizeWithFont
                                        (font: UIFont): CGSize;
                                        cdecl;
                                        [MethodName
                                        ('sizeWithFont:forWidth:lineBreakMode:')
                                        ]
                                        function sizeWithFontForWidthLineBreakMode
                                        (font: UIFont; forWidth: CGFloat;
                                        lineBreakMode: NSLineBreakMode)
                                        : CGSize; cdecl;
                                        [MethodName('drawAtPoint:withFont:')]
                                        function drawAtPointWithFont
                                        (point: CGPoint; withFont: UIFont)
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('drawAtPoint:forWidth:withFont:lineBreakMode:')
                                        ]
                                        function drawAtPointForWidthWithFontLineBreakMode
                                        (point: CGPoint; forWidth: CGFloat;
                                        withFont: UIFont;
                                        lineBreakMode: NSLineBreakMode)
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('sizeWithFont:constrainedToSize:')]
                                        function sizeWithFontConstrainedToSize
                                        (font: UIFont;
                                        constrainedToSize: CGSize)
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('sizeWithFont:constrainedToSize:lineBreakMode:')
                                        ]
                                        function sizeWithFontConstrainedToSizeLineBreakMode
                                        (font: UIFont;
                                        constrainedToSize: CGSize;
                                        lineBreakMode: NSLineBreakMode)
                                        : CGSize; cdecl;
                                        [MethodName('drawInRect:withFont:')]
                                        function drawInRectWithFont
                                        (rect: CGRect; withFont: UIFont)
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('drawInRect:withFont:lineBreakMode:')]
                                        function drawInRectWithFontLineBreakMode
                                        (rect: CGRect; withFont: UIFont;
                                        lineBreakMode: NSLineBreakMode)
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('drawInRect:withFont:lineBreakMode:alignment:')
                                        ]
                                        function drawInRectWithFontLineBreakModeAlignment
                                        (rect: CGRect; withFont: UIFont;
                                        lineBreakMode: NSLineBreakMode;
                                        alignment: NSTextAlignment)
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:')
                                        ]
                                        function sizeWithFontMinFontSizeActualFontSizeForWidthLineBreakMode
                                        (font: UIFont; minFontSize: CGFloat;
                                        actualFontSize: PCGFloat;
                                        forWidth: CGFloat;
                                        lineBreakMode: NSLineBreakMode)
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:')
                                        ]
                                        function drawAtPointForWidthWithFontFontSizeLineBreakModeBaselineAdjustment
                                        (point: CGPoint; forWidth: CGFloat;
                                        withFont: UIFont; fontSize: CGFloat;
                                        lineBreakMode: NSLineBreakMode;
                                        baselineAdjustment
                                        : UIBaselineAdjustment): CGSize; cdecl;
                                        [MethodName
                                        ('drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:')
                                        ]
                                        function drawAtPointForWidthWithFontMinFontSizeActualFontSizeLineBreakModeBaselineAdjustment
                                        (point: CGPoint; forWidth: CGFloat;
                                        withFont: UIFont; minFontSize: CGFloat;
                                        actualFontSize: PCGFloat;
                                        lineBreakMode: NSLineBreakMode;
                                        baselineAdjustment
                                        : UIBaselineAdjustment): CGSize; cdecl;
                                        end;

                                        UILabelClass = interface(UIViewClass)
                                        ['{C1D168F3-AF00-4BE5-9DB8-7587EAA4A609}']
                                        end;
                                        UILabel = interface(UIView)
                                        ['{A2CF7900-CB9C-415D-9A94-A94EB5401BF3}']
                                        procedure setText(text: NSString);
                                        cdecl;
                                        function text: NSString; cdecl;
                                        procedure setFont(font: UIFont); cdecl;
                                        function font: UIFont; cdecl;
                                        procedure setTextColor
                                        (textColor: UIColor); cdecl;
                                        function textColor: UIColor; cdecl;
                                        procedure setShadowColor
                                        (shadowColor: UIColor); cdecl;
                                        function shadowColor: UIColor; cdecl;
                                        procedure setShadowOffset
                                        (shadowOffset: CGSize); cdecl;
                                        function shadowOffset: CGSize; cdecl;
                                        procedure setTextAlignment
                                        (textAlignment: NSTextAlignment); cdecl;
                                        function textAlignment
                                        : NSTextAlignment; cdecl;
                                        procedure setLineBreakMode
                                        (lineBreakMode: NSLineBreakMode); cdecl;
                                        function lineBreakMode
                                        : NSLineBreakMode; cdecl;
                                        procedure setAttributedText
                                        (attributedText
                                        : NSAttributedString); cdecl;
                                        function attributedText
                                        : NSAttributedString; cdecl;
                                        procedure setHighlightedTextColor
                                        (highlightedTextColor: UIColor); cdecl;
                                        function highlightedTextColor
                                        : UIColor; cdecl;
                                        procedure setHighlighted
                                        (highlighted: Boolean); cdecl;
                                        function isHighlighted: Boolean; cdecl;
                                        procedure setUserInteractionEnabled
                                        (userInteractionEnabled
                                        : Boolean); cdecl;
                                        function isUserInteractionEnabled
                                        : Boolean; cdecl;
                                        procedure setEnabled
                                        (enabled: Boolean); cdecl;
                                        function isEnabled: Boolean; cdecl;
                                        procedure setNumberOfLines
                                        (numberOfLines: NSInteger); cdecl;
                                        function numberOfLines
                                        : NSInteger; cdecl;
                                        procedure setAdjustsFontSizeToFitWidth
                                        (adjustsFontSizeToFitWidth
                                        : Boolean); cdecl;
                                        function adjustsFontSizeToFitWidth
                                        : Boolean; cdecl;
                                        procedure setBaselineAdjustment
                                        (baselineAdjustment
                                        : UIBaselineAdjustment); cdecl;
                                        function baselineAdjustment
                                        : UIBaselineAdjustment; cdecl;
                                        procedure setMinimumScaleFactor
                                        (minimumScaleFactor: CGFloat); cdecl;
                                        function minimumScaleFactor
                                        : CGFloat; cdecl;
                                        procedure setAllowsDefaultTighteningForTruncation
                                        (allowsDefaultTighteningForTruncation
                                        : Boolean); cdecl;
                                        function allowsDefaultTighteningForTruncation
                                        : Boolean; cdecl;
                                        function textRectForBounds
                                        (bounds: CGRect;
                                        limitedToNumberOfLines: NSInteger)
                                        : CGRect; cdecl;
                                        procedure drawTextInRect
                                        (rect: CGRect); cdecl;
                                        procedure setPreferredMaxLayoutWidth
                                        (preferredMaxLayoutWidth
                                        : CGFloat); cdecl;
                                        function preferredMaxLayoutWidth
                                        : CGFloat; cdecl;
                                        procedure setMinimumFontSize
                                        (minimumFontSize: CGFloat); cdecl;
                                        function minimumFontSize
                                        : CGFloat; cdecl;
                                        procedure setAdjustsLetterSpacingToFitWidth
                                        (adjustsLetterSpacingToFitWidth
                                        : Boolean); cdecl;
                                        function adjustsLetterSpacingToFitWidth
                                        : Boolean; cdecl;
                                        end;

                                        TUILabel = class
                                        (TOCGenericImport<
                                        UILabelClass, UILabel>)
                                        end;
                                        PUILabel = Pointer;

                                        UIControlClass = interface(UIViewClass)
                                        ['{765686B1-4828-4E2C-A2E6-150ACB6C8E1A}']
                                        end;
                                        UIControl = interface(UIView)
                                        ['{34890369-ED66-47D9-AF45-53E887C0EB70}']
                                        procedure setEnabled(enabled: Boolean);
                                        cdecl;
                                        function isEnabled: Boolean; cdecl;
                                        procedure setSelected
                                        (selected: Boolean); cdecl;
                                        function isSelected: Boolean; cdecl;
                                        procedure setHighlighted
                                        (highlighted: Boolean); cdecl;
                                        function isHighlighted: Boolean; cdecl;
                                        procedure setContentVerticalAlignment
                                        (contentVerticalAlignment
                                        : UIControlContentVerticalAlignment);
                                        cdecl;
                                        function contentVerticalAlignment
                                        : UIControlContentVerticalAlignment;
                                        cdecl;
                                        procedure setContentHorizontalAlignment
                                        (contentHorizontalAlignment
                                        : UIControlContentHorizontalAlignment);
                                        cdecl;
                                        function contentHorizontalAlignment
                                        : UIControlContentHorizontalAlignment;
                                        cdecl;
                                        function state: UIControlState; cdecl;
                                        function isTracking: Boolean; cdecl;
                                        function isTouchInside: Boolean; cdecl;
                                        function beginTrackingWithTouch
                                        (touch: UITouch; withEvent: UIEvent)
                                        : Boolean; cdecl;
                                        function continueTrackingWithTouch
                                        (touch: UITouch; withEvent: UIEvent)
                                        : Boolean; cdecl;
                                        procedure endTrackingWithTouch
                                        (touch: UITouch;
                                        withEvent: UIEvent); cdecl;
                                        procedure cancelTrackingWithEvent
                                        (event: UIEvent); cdecl;
                                        procedure addTarget(target: Pointer;
                                        action: SEL;
                                        forControlEvents
                                        : UIControlEvents); cdecl;
                                        procedure removeTarget(target: Pointer;
                                        action: SEL;
                                        forControlEvents
                                        : UIControlEvents); cdecl;
                                        function allTargets: NSSet; cdecl;
                                        function allControlEvents
                                        : UIControlEvents; cdecl;
                                        function actionsForTarget
                                        (target: Pointer;
                                        forControlEvent: UIControlEvents)
                                        : NSArray; cdecl;
                                        procedure sendAction(action: SEL;
                                        &to: Pointer; forEvent: UIEvent); cdecl;
                                        procedure sendActionsForControlEvents
                                        (controlEvents: UIControlEvents); cdecl;
                                        end;

                                        TUIControl = class
                                        (TOCGenericImport<UIControlClass,
                                        UIControl>)
                                        end;
                                        PUIControl = Pointer;

                                        UIButtonClass = interface
                                        (UIControlClass)
                                        ['{EEC7B4FE-CCBD-4544-94F4-FB076690A67D}']
                                        { class } function buttonWithType
                                        (buttonType: UIButtonType)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIButton = interface(UIControl)
                                        ['{524F0E83-C58E-480A-BF10-348B94F235D9}']
                                        procedure setContentEdgeInsets
                                        (contentEdgeInsets: UIEdgeInsets);
                                        cdecl;
                                        function contentEdgeInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setTitleEdgeInsets
                                        (titleEdgeInsets: UIEdgeInsets); cdecl;
                                        function titleEdgeInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setReversesTitleShadowWhenHighlighted
                                        (reversesTitleShadowWhenHighlighted
                                        : Boolean); cdecl;
                                        function reversesTitleShadowWhenHighlighted
                                        : Boolean; cdecl;
                                        procedure setImageEdgeInsets
                                        (imageEdgeInsets: UIEdgeInsets); cdecl;
                                        function imageEdgeInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setAdjustsImageWhenHighlighted
                                        (adjustsImageWhenHighlighted
                                        : Boolean); cdecl;
                                        function adjustsImageWhenHighlighted
                                        : Boolean; cdecl;
                                        procedure setAdjustsImageWhenDisabled
                                        (adjustsImageWhenDisabled
                                        : Boolean); cdecl;
                                        function adjustsImageWhenDisabled
                                        : Boolean; cdecl;
                                        procedure setShowsTouchWhenHighlighted
                                        (showsTouchWhenHighlighted
                                        : Boolean); cdecl;
                                        function showsTouchWhenHighlighted
                                        : Boolean; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        function buttonType
                                        : UIButtonType; cdecl;
                                        procedure setTitle(title: NSString;
                                        forState: UIControlState); cdecl;
                                        procedure setTitleColor(color: UIColor;
                                        forState: UIControlState); cdecl;
                                        procedure setTitleShadowColor
                                        (color: UIColor;
                                        forState: UIControlState); cdecl;
                                        procedure setImage(image: UIImage;
                                        forState: UIControlState); cdecl;
                                        procedure setBackgroundImage
                                        (image: UIImage;
                                        forState: UIControlState); cdecl;
                                        procedure setAttributedTitle
                                        (title: NSAttributedString;
                                        forState: UIControlState); cdecl;
                                        function titleForState
                                        (state: UIControlState)
                                        : NSString; cdecl;
                                        function titleColorForState
                                        (state: UIControlState): UIColor; cdecl;
                                        function titleShadowColorForState
                                        (state: UIControlState): UIColor; cdecl;
                                        function imageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        function backgroundImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        function attributedTitleForState
                                        (state: UIControlState)
                                        : NSAttributedString; cdecl;
                                        function currentTitle: NSString; cdecl;
                                        function currentTitleColor
                                        : UIColor; cdecl;
                                        function currentTitleShadowColor
                                        : UIColor; cdecl;
                                        function currentImage: UIImage; cdecl;
                                        function currentBackgroundImage
                                        : UIImage; cdecl;
                                        function currentAttributedTitle
                                        : NSAttributedString; cdecl;
                                        function titleLabel: UILabel; cdecl;
                                        function imageView: UIImageView; cdecl;
                                        function backgroundRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function contentRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function titleRectForContentRect
                                        (contentRect: CGRect): CGRect; cdecl;
                                        function imageRectForContentRect
                                        (contentRect: CGRect): CGRect; cdecl;
                                        procedure setFont(font: UIFont); cdecl;
                                        function font: UIFont; cdecl;
                                        procedure setLineBreakMode
                                        (lineBreakMode: NSLineBreakMode); cdecl;
                                        function lineBreakMode
                                        : NSLineBreakMode; cdecl;
                                        procedure setTitleShadowOffset
                                        (titleShadowOffset: CGSize); cdecl;
                                        function titleShadowOffset
                                        : CGSize; cdecl;
                                        end;

                                        TUIButton = class
                                        (TOCGenericImport<UIButtonClass,
                                        UIButton>)
                                        end;
                                        PUIButton = Pointer;

                                        UITextFieldClass = interface
                                        (UIControlClass)
                                        ['{7ED9BA58-F6A4-423D-A9D7-B215ECBAA83D}']
                                        end;
                                        UITextField = interface(UIControl)
                                        ['{80EB5E76-1D9C-44BC-B8F1-86B6F403BF48}']
                                        procedure setText(text: NSString);
                                        cdecl;
                                        function text: NSString; cdecl;
                                        procedure setAttributedText
                                        (attributedText
                                        : NSAttributedString); cdecl;
                                        function attributedText
                                        : NSAttributedString; cdecl;
                                        procedure setTextColor
                                        (textColor: UIColor); cdecl;
                                        function textColor: UIColor; cdecl;
                                        procedure setFont(font: UIFont); cdecl;
                                        function font: UIFont; cdecl;
                                        procedure setTextAlignment
                                        (textAlignment: NSTextAlignment); cdecl;
                                        function textAlignment
                                        : NSTextAlignment; cdecl;
                                        procedure setBorderStyle
                                        (borderStyle: UITextBorderStyle); cdecl;
                                        function borderStyle
                                        : UITextBorderStyle; cdecl;
                                        procedure setDefaultTextAttributes
                                        (defaultTextAttributes
                                        : NSDictionary); cdecl;
                                        function defaultTextAttributes
                                        : NSDictionary; cdecl;
                                        procedure setPlaceholder
                                        (placeholder: NSString); cdecl;
                                        function placeholder: NSString; cdecl;
                                        procedure setAttributedPlaceholder
                                        (attributedPlaceholder
                                        : NSAttributedString); cdecl;
                                        function attributedPlaceholder
                                        : NSAttributedString; cdecl;
                                        procedure setClearsOnBeginEditing
                                        (clearsOnBeginEditing: Boolean); cdecl;
                                        function clearsOnBeginEditing
                                        : Boolean; cdecl;
                                        procedure setAdjustsFontSizeToFitWidth
                                        (adjustsFontSizeToFitWidth
                                        : Boolean); cdecl;
                                        function adjustsFontSizeToFitWidth
                                        : Boolean; cdecl;
                                        procedure setMinimumFontSize
                                        (minimumFontSize: CGFloat); cdecl;
                                        function minimumFontSize
                                        : CGFloat; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setBackground
                                        (background: UIImage); cdecl;
                                        function background: UIImage; cdecl;
                                        procedure setDisabledBackground
                                        (disabledBackground: UIImage); cdecl;
                                        function disabledBackground
                                        : UIImage; cdecl;
                                        function isEditing: Boolean; cdecl;
                                        procedure setAllowsEditingTextAttributes
                                        (allowsEditingTextAttributes
                                        : Boolean); cdecl;
                                        function allowsEditingTextAttributes
                                        : Boolean; cdecl;
                                        procedure setTypingAttributes
                                        (typingAttributes: NSDictionary); cdecl;
                                        function typingAttributes
                                        : NSDictionary; cdecl;
                                        procedure setClearButtonMode
                                        (clearButtonMode
                                        : UITextFieldViewMode); cdecl;
                                        function clearButtonMode
                                        : UITextFieldViewMode; cdecl;
                                        procedure setLeftView
                                        (leftView: UIView); cdecl;
                                        function leftView: UIView; cdecl;
                                        procedure setLeftViewMode
                                        (leftViewMode
                                        : UITextFieldViewMode); cdecl;
                                        function leftViewMode
                                        : UITextFieldViewMode; cdecl;
                                        procedure setRightView
                                        (rightView: UIView); cdecl;
                                        function rightView: UIView; cdecl;
                                        procedure setRightViewMode
                                        (rightViewMode
                                        : UITextFieldViewMode); cdecl;
                                        function rightViewMode
                                        : UITextFieldViewMode; cdecl;
                                        function borderRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function textRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function placeholderRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function editingRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function clearButtonRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function leftViewRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function rightViewRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        procedure drawTextInRect
                                        (rect: CGRect); cdecl;
                                        procedure drawPlaceholderInRect
                                        (rect: CGRect); cdecl;
                                        procedure setInputView
                                        (inputView: UIView); cdecl;
                                        function inputView: UIView; cdecl;
                                        procedure setInputAccessoryView
                                        (inputAccessoryView: UIView); cdecl;
                                        function inputAccessoryView
                                        : UIView; cdecl;
                                        procedure setClearsOnInsertion
                                        (clearsOnInsertion: Boolean); cdecl;
                                        function clearsOnInsertion
                                        : Boolean; cdecl;
                                        end;

                                        TUITextField = class
                                        (TOCGenericImport<UITextFieldClass,
                                        UITextField>)
                                        end;
                                        PUITextField = Pointer;

                                        UITableViewClass = interface
                                        (UIScrollViewClass)
                                        ['{3AD1CDDE-4F52-4213-87B9-3B93AC9C6462}']
                                        { class } function indexPathForRow
                                        (row: NSInteger; inSection: NSInteger)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UITableView = interface(UIScrollView)
                                        ['{18847BB7-AD8D-46DF-AAF7-A2B5E42396AA}']
                                        function initWithFrame(frame: CGRect;
                                        style: UITableViewStyle)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function style: UITableViewStyle; cdecl;
                                        procedure setDataSource
                                        (dataSource: Pointer); cdecl;
                                        function dataSource: Pointer; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setRowHeight
                                        (rowHeight: CGFloat); cdecl;
                                        function rowHeight: CGFloat; cdecl;
                                        procedure setSectionHeaderHeight
                                        (sectionHeaderHeight: CGFloat); cdecl;
                                        function sectionHeaderHeight
                                        : CGFloat; cdecl;
                                        procedure setSectionFooterHeight
                                        (sectionFooterHeight: CGFloat); cdecl;
                                        function sectionFooterHeight
                                        : CGFloat; cdecl;
                                        procedure setEstimatedRowHeight
                                        (estimatedRowHeight: CGFloat); cdecl;
                                        function estimatedRowHeight
                                        : CGFloat; cdecl;
                                        procedure setEstimatedSectionHeaderHeight
                                        (estimatedSectionHeaderHeight
                                        : CGFloat); cdecl;
                                        function estimatedSectionHeaderHeight
                                        : CGFloat; cdecl;
                                        procedure setEstimatedSectionFooterHeight
                                        (estimatedSectionFooterHeight
                                        : CGFloat); cdecl;
                                        function estimatedSectionFooterHeight
                                        : CGFloat; cdecl;
                                        procedure setSeparatorInset
                                        (separatorInset: UIEdgeInsets); cdecl;
                                        function separatorInset
                                        : UIEdgeInsets; cdecl;
                                        procedure setBackgroundView
                                        (backgroundView: UIView); cdecl;
                                        function backgroundView: UIView; cdecl;
                                        procedure reloadData; cdecl;
                                        procedure reloadSectionIndexTitles;
                                        cdecl;
                                        function numberOfSections
                                        : NSInteger; cdecl;
                                        function numberOfRowsInSection
                                        (section: NSInteger): NSInteger; cdecl;
                                        function rectForSection
                                        (section: NSInteger): CGRect; cdecl;
                                        function rectForHeaderInSection
                                        (section: NSInteger): CGRect; cdecl;
                                        function rectForFooterInSection
                                        (section: NSInteger): CGRect; cdecl;
                                        function rectForRowAtIndexPath
                                        (indexPath: NSIndexPath): CGRect; cdecl;
                                        function indexPathForRowAtPoint
                                        (point: CGPoint): NSIndexPath; cdecl;
                                        function indexPathForCell
                                        (cell: UITableViewCell)
                                        : NSIndexPath; cdecl;
                                        function indexPathsForRowsInRect
                                        (rect: CGRect): NSArray; cdecl;
                                        function cellForRowAtIndexPath
                                        (indexPath: NSIndexPath)
                                        : UITableViewCell; cdecl;
                                        function visibleCells: NSArray; cdecl;
                                        function indexPathsForVisibleRows
                                        : NSArray; cdecl;
                                        function headerViewForSection
                                        (section: NSInteger)
                                        : UITableViewHeaderFooterView; cdecl;
                                        function footerViewForSection
                                        (section: NSInteger)
                                        : UITableViewHeaderFooterView; cdecl;
                                        procedure scrollToRowAtIndexPath
                                        (indexPath: NSIndexPath;
                                        atScrollPosition
                                        : UITableViewScrollPosition;
                                        animated: Boolean); cdecl;
                                        procedure scrollToNearestSelectedRowAtScrollPosition
                                        (scrollPosition
                                        : UITableViewScrollPosition;
                                        animated: Boolean); cdecl;
                                        procedure beginUpdates; cdecl;
                                        procedure endUpdates; cdecl;
                                        procedure insertSections
                                        (sections: NSIndexSet;
                                        withRowAnimation
                                        : UITableViewRowAnimation); cdecl;
                                        procedure deleteSections
                                        (sections: NSIndexSet;
                                        withRowAnimation
                                        : UITableViewRowAnimation); cdecl;
                                        procedure reloadSections
                                        (sections: NSIndexSet;
                                        withRowAnimation
                                        : UITableViewRowAnimation); cdecl;
                                        procedure moveSection
                                        (section: NSInteger;
                                        toSection: NSInteger); cdecl;
                                        procedure insertRowsAtIndexPaths
                                        (indexPaths: NSArray;
                                        withRowAnimation
                                        : UITableViewRowAnimation); cdecl;
                                        procedure deleteRowsAtIndexPaths
                                        (indexPaths: NSArray;
                                        withRowAnimation
                                        : UITableViewRowAnimation); cdecl;
                                        procedure reloadRowsAtIndexPaths
                                        (indexPaths: NSArray;
                                        withRowAnimation
                                        : UITableViewRowAnimation); cdecl;
                                        procedure moveRowAtIndexPath
                                        (indexPath: NSIndexPath;
                                        toIndexPath: NSIndexPath); cdecl;
                                        [MethodName('setEditing:')]
                                        procedure setEditing
                                        (editing: Boolean); cdecl;
                                        function isEditing: Boolean; cdecl;
                                        [MethodName('setEditing:animated:')]
                                        procedure setEditingAnimated
                                        (editing: Boolean;
                                        animated: Boolean); cdecl;
                                        procedure setAllowsSelection
                                        (allowsSelection: Boolean); cdecl;
                                        function allowsSelection
                                        : Boolean; cdecl;
                                        procedure setAllowsSelectionDuringEditing
                                        (allowsSelectionDuringEditing
                                        : Boolean); cdecl;
                                        function allowsSelectionDuringEditing
                                        : Boolean; cdecl;
                                        procedure setAllowsMultipleSelection
                                        (allowsMultipleSelection
                                        : Boolean); cdecl;
                                        function allowsMultipleSelection
                                        : Boolean; cdecl;
                                        procedure setAllowsMultipleSelectionDuringEditing
                                        (allowsMultipleSelectionDuringEditing
                                        : Boolean); cdecl;
                                        function allowsMultipleSelectionDuringEditing
                                        : Boolean; cdecl;
                                        function indexPathForSelectedRow
                                        : NSIndexPath; cdecl;
                                        function indexPathsForSelectedRows
                                        : NSArray; cdecl;
                                        procedure selectRowAtIndexPath
                                        (indexPath: NSIndexPath;
                                        animated: Boolean;
                                        scrollPosition
                                        : UITableViewScrollPosition); cdecl;
                                        procedure deselectRowAtIndexPath
                                        (indexPath: NSIndexPath;
                                        animated: Boolean); cdecl;
                                        procedure setSectionIndexMinimumDisplayRowCount
                                        (sectionIndexMinimumDisplayRowCount
                                        : NSInteger); cdecl;
                                        function sectionIndexMinimumDisplayRowCount
                                        : NSInteger; cdecl;
                                        procedure setSectionIndexColor
                                        (sectionIndexColor: UIColor); cdecl;
                                        function sectionIndexColor
                                        : UIColor; cdecl;
                                        procedure setSectionIndexBackgroundColor
                                        (sectionIndexBackgroundColor
                                        : UIColor); cdecl;
                                        function sectionIndexBackgroundColor
                                        : UIColor; cdecl;
                                        procedure setSectionIndexTrackingBackgroundColor
                                        (sectionIndexTrackingBackgroundColor
                                        : UIColor); cdecl;
                                        function sectionIndexTrackingBackgroundColor
                                        : UIColor; cdecl;
                                        procedure setSeparatorStyle
                                        (separatorStyle
                                        : UITableViewCellSeparatorStyle); cdecl;
                                        function separatorStyle
                                        : UITableViewCellSeparatorStyle; cdecl;
                                        procedure setSeparatorColor
                                        (separatorColor: UIColor); cdecl;
                                        function separatorColor: UIColor; cdecl;
                                        procedure setSeparatorEffect
                                        (separatorEffect
                                        : UIVisualEffect); cdecl;
                                        function separatorEffect
                                        : UIVisualEffect; cdecl;
                                        procedure setCellLayoutMarginsFollowReadableWidth
                                        (cellLayoutMarginsFollowReadableWidth
                                        : Boolean); cdecl;
                                        function cellLayoutMarginsFollowReadableWidth
                                        : Boolean; cdecl;
                                        procedure setTableHeaderView
                                        (tableHeaderView: UIView); cdecl;
                                        function tableHeaderView: UIView; cdecl;
                                        procedure setTableFooterView
                                        (tableFooterView: UIView); cdecl;
                                        function tableFooterView: UIView; cdecl;
                                        [MethodName
                                        ('dequeueReusableCellWithIdentifier:')]
                                        function dequeueReusableCellWithIdentifier
                                        (identifier: NSString)
                                        : UITableViewCell; cdecl;
                                        [MethodName
                                        ('dequeueReusableCellWithIdentifier:forIndexPath:')
                                        ]
                                        function dequeueReusableCellWithIdentifierForIndexPath
                                        (identifier: NSString;
                                        forIndexPath: NSIndexPath)
                                        : UITableViewCell; cdecl;
                                        function dequeueReusableHeaderFooterViewWithIdentifier
                                        (identifier: NSString)
                                        : UITableViewHeaderFooterView; cdecl;
                                        [MethodName
                                        ('registerNib:forCellReuseIdentifier:')]
                                        procedure registerNibForCellReuseIdentifier
                                        (nib: UINib;
                                        forCellReuseIdentifier
                                        : NSString); cdecl;
                                        [MethodName
                                        ('registerClass:forCellReuseIdentifier:')
                                        ]
                                        procedure registerClassForCellReuseIdentifier
                                        (cellClass: Pointer;
                                        forCellReuseIdentifier
                                        : NSString); cdecl;
                                        [MethodName
                                        ('registerNib:forHeaderFooterViewReuseIdentifier:')
                                        ]
                                        procedure registerNibForHeaderFooterViewReuseIdentifier
                                        (nib: UINib;
                                        forHeaderFooterViewReuseIdentifier
                                        : NSString); cdecl;
                                        [MethodName
                                        ('registerClass:forHeaderFooterViewReuseIdentifier:')
                                        ]
                                        procedure registerClassForHeaderFooterViewReuseIdentifier
                                        (aClass: Pointer;
                                        forHeaderFooterViewReuseIdentifier
                                        : NSString); cdecl;
                                        procedure setRemembersLastFocusedIndexPath
                                        (remembersLastFocusedIndexPath
                                        : Boolean); cdecl;
                                        function remembersLastFocusedIndexPath
                                        : Boolean; cdecl;
                                        function section: NSInteger; cdecl;
                                        function row: NSInteger; cdecl;
                                        end;

                                        TUITableView = class
                                        (TOCGenericImport<UITableViewClass,
                                        UITableView>)
                                        end;
                                        PUITableView = Pointer;

                                        UILongPressGestureRecognizerClass =
                                        interface(UIGestureRecognizerClass)
                                        ['{CBCAA3FA-6251-417C-ACC6-651FACA2FD1E}']
                                        end;
                                        UILongPressGestureRecognizer = interface
                                        (UIGestureRecognizer)
                                        ['{656B940B-298E-46D8-8742-AB2BA48B2B3B}']
                                        procedure setNumberOfTapsRequired
                                        (numberOfTapsRequired: NSUInteger);
                                        cdecl;
                                        function numberOfTapsRequired
                                        : NSUInteger; cdecl;
                                        procedure setNumberOfTouchesRequired
                                        (numberOfTouchesRequired
                                        : NSUInteger); cdecl;
                                        function numberOfTouchesRequired
                                        : NSUInteger; cdecl;
                                        procedure setMinimumPressDuration
                                        (minimumPressDuration
                                        : CFTimeInterval); cdecl;
                                        function minimumPressDuration
                                        : CFTimeInterval; cdecl;
                                        procedure setAllowableMovement
                                        (allowableMovement: CGFloat); cdecl;
                                        function allowableMovement
                                        : CGFloat; cdecl;
                                        end;

                                        TUILongPressGestureRecognizer = class
                                        (TOCGenericImport<
                                        UILongPressGestureRecognizerClass,
                                        UILongPressGestureRecognizer>)
                                        end;
                                        PUILongPressGestureRecognizer = Pointer;

                                        UITableViewCellClass = interface
                                        (UIViewClass)
                                        ['{1CAD1F48-FDBB-426A-AADC-7E58FF05F485}']
                                        end;
                                        UITableViewCell = interface(UIView)
                                        ['{3E191499-FC5F-45AE-9A3C-24CC99842CE1}']
                                        function initWithStyle
                                        (style: UITableViewCellStyle;
                                        reuseIdentifier: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function imageView: UIImageView; cdecl;
                                        function textLabel: UILabel; cdecl;
                                        function detailTextLabel
                                        : UILabel; cdecl;
                                        function contentView: UIView; cdecl;
                                        procedure setBackgroundView
                                        (backgroundView: UIView); cdecl;
                                        function backgroundView: UIView; cdecl;
                                        procedure setSelectedBackgroundView
                                        (selectedBackgroundView: UIView); cdecl;
                                        function selectedBackgroundView
                                        : UIView; cdecl;
                                        procedure setMultipleSelectionBackgroundView
                                        (multipleSelectionBackgroundView
                                        : UIView); cdecl;
                                        function multipleSelectionBackgroundView
                                        : UIView; cdecl;
                                        function reuseIdentifier
                                        : NSString; cdecl;
                                        procedure prepareForReuse; cdecl;
                                        procedure setSelectionStyle
                                        (selectionStyle
                                        : UITableViewCellSelectionStyle); cdecl;
                                        function selectionStyle
                                        : UITableViewCellSelectionStyle; cdecl;
                                        [MethodName('setSelected:')]
                                        procedure setSelected
                                        (selected: Boolean); cdecl;
                                        function isSelected: Boolean; cdecl;
                                        [MethodName('setHighlighted:')]
                                        procedure setHighlighted
                                        (highlighted: Boolean); cdecl;
                                        function isHighlighted: Boolean; cdecl;
                                        [MethodName('setSelected:animated:')]
                                        procedure setSelectedAnimated
                                        (selected: Boolean;
                                        animated: Boolean); cdecl;
                                        [MethodName('setHighlighted:animated:')]
                                        procedure setHighlightedAnimated
                                        (highlighted: Boolean;
                                        animated: Boolean); cdecl;
                                        function editingStyle
                                        : UITableViewCellEditingStyle; cdecl;
                                        procedure setShowsReorderControl
                                        (showsReorderControl: Boolean); cdecl;
                                        function showsReorderControl
                                        : Boolean; cdecl;
                                        procedure setShouldIndentWhileEditing
                                        (shouldIndentWhileEditing
                                        : Boolean); cdecl;
                                        function shouldIndentWhileEditing
                                        : Boolean; cdecl;
                                        procedure setAccessoryType
                                        (accessoryType
                                        : UITableViewCellAccessoryType); cdecl;
                                        function accessoryType
                                        : UITableViewCellAccessoryType; cdecl;
                                        procedure setAccessoryView
                                        (accessoryView: UIView); cdecl;
                                        function accessoryView: UIView; cdecl;
                                        procedure setEditingAccessoryType
                                        (editingAccessoryType
                                        : UITableViewCellAccessoryType); cdecl;
                                        function editingAccessoryType
                                        : UITableViewCellAccessoryType; cdecl;
                                        procedure setEditingAccessoryView
                                        (editingAccessoryView: UIView); cdecl;
                                        function editingAccessoryView
                                        : UIView; cdecl;
                                        procedure setIndentationLevel
                                        (indentationLevel: NSInteger); cdecl;
                                        function indentationLevel
                                        : NSInteger; cdecl;
                                        procedure setIndentationWidth
                                        (indentationWidth: CGFloat); cdecl;
                                        function indentationWidth
                                        : CGFloat; cdecl;
                                        procedure setSeparatorInset
                                        (separatorInset: UIEdgeInsets); cdecl;
                                        function separatorInset
                                        : UIEdgeInsets; cdecl;
                                        [MethodName('setEditing:')]
                                        procedure setEditing
                                        (editing: Boolean); cdecl;
                                        function isEditing: Boolean; cdecl;
                                        [MethodName('setEditing:animated:')]
                                        procedure setEditingAnimated
                                        (editing: Boolean;
                                        animated: Boolean); cdecl;
                                        function showingDeleteConfirmation
                                        : Boolean; cdecl;
                                        procedure setFocusStyle
                                        (focusStyle
                                        : UITableViewCellFocusStyle); cdecl;
                                        function focusStyle
                                        : UITableViewCellFocusStyle; cdecl;
                                        procedure willTransitionToState
                                        (state: UITableViewCellStateMask);
                                        cdecl;
                                        procedure didTransitionToState
                                        (state: UITableViewCellStateMask);
                                        cdecl;
                                        function initWithFrame(frame: CGRect;
                                        reuseIdentifier: NSString)
                                        : Pointer; cdecl;
                                        procedure setText
                                        (text: NSString); cdecl;
                                        function text: NSString; cdecl;
                                        procedure setFont(font: UIFont); cdecl;
                                        function font: UIFont; cdecl;
                                        procedure setTextAlignment
                                        (textAlignment: NSTextAlignment); cdecl;
                                        function textAlignment
                                        : NSTextAlignment; cdecl;
                                        procedure setLineBreakMode
                                        (lineBreakMode: NSLineBreakMode); cdecl;
                                        function lineBreakMode
                                        : NSLineBreakMode; cdecl;
                                        procedure setTextColor
                                        (textColor: UIColor); cdecl;
                                        function textColor: UIColor; cdecl;
                                        procedure setSelectedTextColor
                                        (selectedTextColor: UIColor); cdecl;
                                        function selectedTextColor
                                        : UIColor; cdecl;
                                        procedure setImage
                                        (image: UIImage); cdecl;
                                        function image: UIImage; cdecl;
                                        procedure setSelectedImage
                                        (selectedImage: UIImage); cdecl;
                                        function selectedImage: UIImage; cdecl;
                                        procedure setHidesAccessoryWhenEditing
                                        (hidesAccessoryWhenEditing
                                        : Boolean); cdecl;
                                        function hidesAccessoryWhenEditing
                                        : Boolean; cdecl;
                                        procedure setTarget
                                        (target: Pointer); cdecl;
                                        function target: Pointer; cdecl;
                                        procedure setEditAction
                                        (editAction: SEL); cdecl;
                                        function editAction: SEL; cdecl;
                                        procedure setAccessoryAction
                                        (accessoryAction: SEL); cdecl;
                                        function accessoryAction: SEL; cdecl;
                                        end;

                                        TUITableViewCell = class
                                        (TOCGenericImport<UITableViewCellClass,
                                        UITableViewCell>)
                                        end;
                                        PUITableViewCell = Pointer;

                                        UINibClass = interface(NSObjectClass)
                                        ['{BE9355F0-7587-4EB8-8B96-C81839202639}']
                                        { class } function nibWithNibName
                                        (name: NSString;
                                        bundle: NSBundle): UINib;
                                        cdecl;
                                        { class } function nibWithData
                                        (data: NSData; bundle: NSBundle)
                                        : UINib; cdecl;
                                        end;
                                        UINib = interface(NSObject)
                                        ['{377D889C-15AB-4B10-BB7A-FDBCF4F7CA71}']
                                        function instantiateWithOwner
                                        (ownerOrNil: Pointer;
                                        options: NSDictionary): NSArray;
                                        cdecl;
                                        end;

                                        TUINib = class
                                        (TOCGenericImport<UINibClass, UINib>)
                                        end;
                                        PUINib = Pointer;

                                        UITableViewHeaderFooterViewClass =
                                        interface(UIViewClass)
                                        ['{FE4A581F-DE93-4D68-BE34-19CB95E8DCCD}']
                                        end;
                                        UITableViewHeaderFooterView = interface
                                        (UIView)['{2FC68A5F-394C-46F5-817D-E3D885289B77}']
                                        function initWithReuseIdentifier
                                        (reuseIdentifier: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        function textLabel: UILabel; cdecl;
                                        function detailTextLabel
                                        : UILabel; cdecl;
                                        function contentView: UIView; cdecl;
                                        procedure setBackgroundView
                                        (backgroundView: UIView); cdecl;
                                        function backgroundView: UIView; cdecl;
                                        function reuseIdentifier
                                        : NSString; cdecl;
                                        procedure prepareForReuse; cdecl;
                                        end;

                                        TUITableViewHeaderFooterView = class
                                        (TOCGenericImport<
                                        UITableViewHeaderFooterViewClass,
                                        UITableViewHeaderFooterView>)
                                        end;
                                        PUITableViewHeaderFooterView = Pointer;

                                        UIRefreshControlClass = interface
                                        (UIControlClass)
                                        ['{8F9330C3-C872-45BC-9438-F6130B5351DD}']
                                        end;
                                        UIRefreshControl = interface(UIControl)
                                        ['{5229CAD1-4653-48BD-80CD-EEE6517CE13E}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function isRefreshing: Boolean; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setAttributedTitle
                                        (attributedTitle
                                        : NSAttributedString); cdecl;
                                        function attributedTitle
                                        : NSAttributedString; cdecl;
                                        procedure beginRefreshing; cdecl;
                                        procedure endRefreshing; cdecl;
                                        end;

                                        TUIRefreshControl = class
                                        (TOCGenericImport<UIRefreshControlClass,
                                        UIRefreshControl>)
                                        end;
                                        PUIRefreshControl = Pointer;

                                        UIVisualEffectClass = interface
                                        (NSObjectClass)
                                        ['{11B07A2B-A58D-4E37-980A-97543695B34F}']
                                        end;
                                        UIVisualEffect = interface(NSObject)
                                        ['{EF868ECB-DD63-4DDB-ADF8-1D02CA84EAB9}']
                                        end;

                                        TUIVisualEffect = class
                                        (TOCGenericImport<UIVisualEffectClass,
                                        UIVisualEffect>)
                                        end;
                                        PUIVisualEffect = Pointer;

                                        UITableViewRowActionClass = interface
                                        (NSObjectClass)
                                        ['{3C527DC8-22A1-4356-935D-441E9423FF8E}']
                                        { class } function rowActionWithStyle
                                        (style: UITableViewRowActionStyle;
                                        title: NSString; handler: TUIKitHandler)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UITableViewRowAction = interface
                                        (NSObject)
                                        ['{5799696A-75DC-402A-A167-EFD4F26A4DFA}']
                                        function style
                                        : UITableViewRowActionStyle;
                                        cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setBackgroundColor
                                        (backgroundColor: UIColor); cdecl;
                                        function backgroundColor
                                        : UIColor; cdecl;
                                        procedure setBackgroundEffect
                                        (backgroundEffect
                                        : UIVisualEffect); cdecl;
                                        function backgroundEffect
                                        : UIVisualEffect; cdecl;
                                        end;

                                        TUITableViewRowAction = class
                                        (TOCGenericImport<
                                        UITableViewRowActionClass,
                                        UITableViewRowAction>)
                                        end;
                                        PUITableViewRowAction = Pointer;

                                        UITableViewFocusUpdateContextClass =
                                        interface(UIFocusUpdateContextClass)
                                        ['{FE703BF2-BC09-4C3A-A85B-2D40FEB364CB}']
                                        end;
                                        UITableViewFocusUpdateContext =
                                        interface(UIFocusUpdateContext)
                                        ['{6DF8B485-56FF-4C10-BD74-2CC187589AC7}']
                                        function previouslyFocusedIndexPath
                                        : NSIndexPath;
                                        cdecl;
                                        function nextFocusedIndexPath
                                        : NSIndexPath; cdecl;
                                        end;

                                        TUITableViewFocusUpdateContext = class
                                        (TOCGenericImport<
                                        UITableViewFocusUpdateContextClass,
                                        UITableViewFocusUpdateContext>)
                                        end;
                                        PUITableViewFocusUpdateContext =
                                        Pointer;

                                        UIPickerViewClass = interface
                                        (UIViewClass)
                                        ['{780A3E36-B64B-4D92-92E8-1F512752E8A6}']
                                        end;
                                        UIPickerView = interface(UIView)
                                        ['{115DDFC4-F408-4894-ACC5-CC41EB770AD1}']
                                        procedure setDataSource
                                        (dataSource: Pointer);
                                        cdecl;
                                        function dataSource: Pointer; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setShowsSelectionIndicator
                                        (showsSelectionIndicator
                                        : Boolean); cdecl;
                                        function showsSelectionIndicator
                                        : Boolean; cdecl;
                                        function numberOfComponents
                                        : NSInteger; cdecl;
                                        function numberOfRowsInComponent
                                        (component: NSInteger)
                                        : NSInteger; cdecl;
                                        function rowSizeForComponent
                                        (component: NSInteger): CGSize; cdecl;
                                        function viewForRow(row: NSInteger;
                                        forComponent: NSInteger): UIView; cdecl;
                                        procedure reloadAllComponents; cdecl;
                                        procedure reloadComponent
                                        (component: NSInteger); cdecl;
                                        procedure selectRow(row: NSInteger;
                                        inComponent: NSInteger;
                                        animated: Boolean); cdecl;
                                        function selectedRowInComponent
                                        (component: NSInteger)
                                        : NSInteger; cdecl;
                                        end;

                                        TUIPickerView = class
                                        (TOCGenericImport<UIPickerViewClass,
                                        UIPickerView>)
                                        end;
                                        PUIPickerView = Pointer;

                                        UIAccessibilityCustomActionClass =
                                        interface(NSObjectClass)
                                        ['{9976ADB4-6C58-4090-AA21-191ACE211BF0}']
                                        end;
                                        UIAccessibilityCustomAction = interface
                                        (NSObject)
                                        ['{4E8146EB-DEED-416F-988B-55ECA4F89CA9}']
                                        function initWithName(name: NSString;
                                        target: Pointer; selector: SEL)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setName
                                        (name: NSString); cdecl;
                                        function name: NSString; cdecl;
                                        procedure setTarget
                                        (target: Pointer); cdecl;
                                        function target: Pointer; cdecl;
                                        procedure setSelector
                                        (selector: SEL); cdecl;
                                        function selector: SEL; cdecl;
                                        end;

                                        TUIAccessibilityCustomAction = class
                                        (TOCGenericImport<
                                        UIAccessibilityCustomActionClass,
                                        UIAccessibilityCustomAction>)
                                        end;
                                        PUIAccessibilityCustomAction = Pointer;

                                        UIImageAssetClass = interface
                                        (NSObjectClass)
                                        ['{E318D8E2-B968-45E6-A737-112DC09E05D7}']
                                        end;
                                        UIImageAsset = interface(NSObject)
                                        ['{1794ED41-3F9E-4D78-A4C2-1DC0F7E68677}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function imageWithTraitCollection
                                        (traitCollection: UITraitCollection)
                                        : UIImage; cdecl;
                                        procedure registerImage(image: UIImage;
                                        withTraitCollection
                                        : UITraitCollection); cdecl;
                                        procedure unregisterImageWithTraitCollection
                                        (traitCollection
                                        : UITraitCollection); cdecl;
                                        end;

                                        TUIImageAsset = class
                                        (TOCGenericImport<UIImageAssetClass,
                                        UIImageAsset>)
                                        end;
                                        PUIImageAsset = Pointer;

                                        UIBarItemClass = interface
                                        (NSObjectClass)
                                        ['{1225ED53-30A7-46CE-A12F-5593E5607797}']
                                        end;
                                        UIBarItem = interface(NSObject)
                                        ['{965A5B8D-02F7-4523-BD25-50646498F51F}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setEnabled
                                        (enabled: Boolean); cdecl;
                                        function isEnabled: Boolean; cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setImage
                                        (image: UIImage); cdecl;
                                        function image: UIImage; cdecl;
                                        procedure setLandscapeImagePhone
                                        (landscapeImagePhone: UIImage); cdecl;
                                        function landscapeImagePhone
                                        : UIImage; cdecl;
                                        procedure setImageInsets
                                        (imageInsets: UIEdgeInsets); cdecl;
                                        function imageInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setLandscapeImagePhoneInsets
                                        (landscapeImagePhoneInsets
                                        : UIEdgeInsets); cdecl;
                                        function landscapeImagePhoneInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setTag(tag: NSInteger); cdecl;
                                        function tag: NSInteger; cdecl;
                                        procedure setTitleTextAttributes
                                        (attributes: NSDictionary;
                                        forState: UIControlState); cdecl;
                                        function titleTextAttributesForState
                                        (state: UIControlState)
                                        : NSDictionary; cdecl;
                                        end;

                                        TUIBarItem = class
                                        (TOCGenericImport<UIBarItemClass,
                                        UIBarItem>)
                                        end;
                                        PUIBarItem = Pointer;

                                        UIAccessibilityElementClass = interface
                                        (NSObjectClass)
                                        ['{D92C3349-5D37-44FD-9F87-C36A27808FC4}']
                                        end;
                                        UIAccessibilityElement = interface
                                        (NSObject)
                                        ['{F76FEBD5-3BCB-4060-8518-C8D4139B5EFB}']
                                        function initWithAccessibilityContainer
                                        (container: Pointer)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setAccessibilityContainer
                                        (accessibilityContainer
                                        : Pointer); cdecl;
                                        function accessibilityContainer
                                        : Pointer; cdecl;
                                        procedure setIsAccessibilityElement
                                        (isAccessibilityElement
                                        : Boolean); cdecl;
                                        function isAccessibilityElement
                                        : Boolean; cdecl;
                                        procedure setAccessibilityLabel
                                        (accessibilityLabel: NSString); cdecl;
                                        function accessibilityLabel
                                        : NSString; cdecl;
                                        procedure setAccessibilityHint
                                        (accessibilityHint: NSString); cdecl;
                                        function accessibilityHint
                                        : NSString; cdecl;
                                        procedure setAccessibilityValue
                                        (accessibilityValue: NSString); cdecl;
                                        function accessibilityValue
                                        : NSString; cdecl;
                                        procedure setAccessibilityFrame
                                        (accessibilityFrame: CGRect); cdecl;
                                        function accessibilityFrame
                                        : CGRect; cdecl;
                                        procedure setAccessibilityTraits
                                        (accessibilityTraits
                                        : UIAccessibilityTraits); cdecl;
                                        function accessibilityTraits
                                        : UIAccessibilityTraits; cdecl;
                                        end;

                                        TUIAccessibilityElement = class
                                        (TOCGenericImport<
                                        UIAccessibilityElementClass,
                                        UIAccessibilityElement>)
                                        end;
                                        PUIAccessibilityElement = Pointer;

                                        UIAccessibility = interface(IObjectiveC)
                                        ['{04BF31DF-EA3C-4DED-B150-23D03B3E496A}']
                                        procedure setIsAccessibilityElement
                                        (isAccessibilityElement: Boolean);
                                        cdecl;
                                        function isAccessibilityElement
                                        : Boolean; cdecl;
                                        procedure setAccessibilityLabel
                                        (accessibilityLabel: NSString); cdecl;
                                        function accessibilityLabel
                                        : NSString; cdecl;
                                        procedure setAccessibilityHint
                                        (accessibilityHint: NSString); cdecl;
                                        function accessibilityHint
                                        : NSString; cdecl;
                                        procedure setAccessibilityValue
                                        (accessibilityValue: NSString); cdecl;
                                        function accessibilityValue
                                        : NSString; cdecl;
                                        procedure setAccessibilityTraits
                                        (accessibilityTraits
                                        : UIAccessibilityTraits); cdecl;
                                        function accessibilityTraits
                                        : UIAccessibilityTraits; cdecl;
                                        procedure setAccessibilityFrame
                                        (accessibilityFrame: CGRect); cdecl;
                                        function accessibilityFrame
                                        : CGRect; cdecl;
                                        procedure setAccessibilityPath
                                        (accessibilityPath
                                        : UIBezierPath); cdecl;
                                        function accessibilityPath
                                        : UIBezierPath; cdecl;
                                        procedure setAccessibilityActivationPoint
                                        (accessibilityActivationPoint
                                        : CGPoint); cdecl;
                                        function accessibilityActivationPoint
                                        : CGPoint; cdecl;
                                        procedure setAccessibilityLanguage
                                        (accessibilityLanguage
                                        : NSString); cdecl;
                                        function accessibilityLanguage
                                        : NSString; cdecl;
                                        procedure setAccessibilityElementsHidden
                                        (accessibilityElementsHidden
                                        : Boolean); cdecl;
                                        function accessibilityElementsHidden
                                        : Boolean; cdecl;
                                        procedure setAccessibilityViewIsModal
                                        (accessibilityViewIsModal
                                        : Boolean); cdecl;
                                        function accessibilityViewIsModal
                                        : Boolean; cdecl;
                                        procedure setShouldGroupAccessibilityChildren
                                        (shouldGroupAccessibilityChildren
                                        : Boolean); cdecl;
                                        function shouldGroupAccessibilityChildren
                                        : Boolean; cdecl;
                                        procedure setAccessibilityNavigationStyle
                                        (accessibilityNavigationStyle
                                        : UIAccessibilityNavigationStyle);
                                        cdecl;
                                        function accessibilityNavigationStyle
                                        : UIAccessibilityNavigationStyle; cdecl;
                                        procedure setAccessibilityHeaderElements
                                        (accessibilityHeaderElements
                                        : NSArray); cdecl;
                                        function accessibilityHeaderElements
                                        : NSArray; cdecl;
                                        end;

                                        UIAccessibilityContainer = interface
                                        (IObjectiveC)
                                        ['{924E0EC6-4CC2-448F-87CA-24449E07F7F8}']
                                        function accessibilityElementCount
                                        : NSInteger;
                                        cdecl;
                                        function accessibilityElementAtIndex
                                        (index: NSInteger): Pointer; cdecl;
                                        function indexOfAccessibilityElement
                                        (element: Pointer): NSInteger; cdecl;
                                        procedure setAccessibilityElements
                                        (accessibilityElements: NSArray); cdecl;
                                        function accessibilityElements
                                        : NSArray; cdecl;
                                        end;

                                        UIAccessibilityFocus = interface
                                        (IObjectiveC)
                                        ['{3960A293-4067-4FA4-8C45-235FA8ABCC98}']
                                        procedure accessibilityElementDidBecomeFocused;
                                        cdecl;
                                        procedure accessibilityElementDidLoseFocus;
                                        cdecl;
                                        function accessibilityElementIsFocused
                                        : Boolean; cdecl;
                                        function accessibilityAssistiveTechnologyFocusedIdentifiers
                                        : NSSet; cdecl;
                                        end;

                                        UIAccessibilityAction = interface
                                        (IObjectiveC)
                                        ['{838B8CB5-0533-4579-847F-86A2E1AE6BE1}']
                                        function accessibilityActivate: Boolean;
                                        cdecl;
                                        procedure accessibilityIncrement; cdecl;
                                        procedure accessibilityDecrement; cdecl;
                                        function accessibilityScroll
                                        (direction
                                        : UIAccessibilityScrollDirection)
                                        : Boolean; cdecl;
                                        function accessibilityPerformEscape
                                        : Boolean; cdecl;
                                        function accessibilityPerformMagicTap
                                        : Boolean; cdecl;
                                        procedure setAccessibilityCustomActions
                                        (accessibilityCustomActions
                                        : NSArray); cdecl;
                                        function accessibilityCustomActions
                                        : NSArray; cdecl;
                                        end;

                                        UITextPositionClass = interface
                                        (NSObjectClass)
                                        ['{8A5D772F-D794-4D63-AF9B-696DEB3BEF80}']
                                        end;
                                        UITextPosition = interface(NSObject)
                                        ['{52B57391-E288-4A3E-B81A-5F9ADC999DB9}']
                                        end;

                                        TUITextPosition = class
                                        (TOCGenericImport<UITextPositionClass,
                                        UITextPosition>)
                                        end;
                                        PUITextPosition = Pointer;

                                        UITextRangeClass = interface
                                        (NSObjectClass)
                                        ['{20DB96E8-1EEC-4988-B879-AB1924E0F546}']
                                        end;
                                        UITextRange = interface(NSObject)
                                        ['{037765E0-3AE4-453D-A07A-DD3821F3F22C}']
                                        function isEmpty: Boolean;
                                        cdecl;
                                        function start: UITextPosition; cdecl;
                                        function &end: UITextPosition; cdecl;
                                        end;

                                        TUITextRange = class
                                        (TOCGenericImport<UITextRangeClass,
                                        UITextRange>)
                                        end;
                                        PUITextRange = Pointer;

                                        UITextSelectionRectClass = interface
                                        (NSObjectClass)
                                        ['{47885B0B-9DEA-4925-9B4C-D56A8B6877FA}']
                                        end;
                                        UITextSelectionRect = interface
                                        (NSObject)
                                        ['{3F5BB691-A6AC-4481-972F-C4B07CAD515F}']
                                        function rect: CGRect;
                                        cdecl;
                                        function writingDirection
                                        : UITextWritingDirection; cdecl;
                                        function containsStart: Boolean; cdecl;
                                        function containsEnd: Boolean; cdecl;
                                        function isVertical: Boolean; cdecl;
                                        end;

                                        TUITextSelectionRect = class
                                        (TOCGenericImport<
                                        UITextSelectionRectClass,
                                        UITextSelectionRect>)
                                        end;
                                        PUITextSelectionRect = Pointer;

                                        UIBarButtonItemGroupClass = interface
                                        (NSObjectClass)
                                        ['{3B3C9C03-3E56-4B07-BBB6-537E56D85343}']
                                        end;
                                        UIBarButtonItemGroup = interface
                                        (NSObject)
                                        ['{15CE139F-93E2-41A7-9709-9EDAA7CB904C}']
                                        function initWithBarButtonItems
                                        (barButtonItems: NSArray;
                                        representativeItem: UIBarButtonItem)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setBarButtonItems
                                        (barButtonItems: NSArray); cdecl;
                                        function barButtonItems: NSArray; cdecl;
                                        procedure setRepresentativeItem
                                        (representativeItem
                                        : UIBarButtonItem); cdecl;
                                        function representativeItem
                                        : UIBarButtonItem; cdecl;
                                        function isDisplayingRepresentativeItem
                                        : Boolean; cdecl;
                                        end;

                                        TUIBarButtonItemGroup = class
                                        (TOCGenericImport<
                                        UIBarButtonItemGroupClass,
                                        UIBarButtonItemGroup>)
                                        end;
                                        PUIBarButtonItemGroup = Pointer;

                                        UIDictationPhraseClass = interface
                                        (NSObjectClass)
                                        ['{5567FBFB-0C94-4135-A85B-7B8BDDC1CA1D}']
                                        end;
                                        UIDictationPhrase = interface(NSObject)
                                        ['{C35AA42D-CD83-480A-90C9-FB06950E4B27}']
                                        function text: NSString;
                                        cdecl;
                                        function alternativeInterpretations
                                        : NSArray; cdecl;
                                        end;

                                        TUIDictationPhrase = class
                                        (TOCGenericImport<
                                        UIDictationPhraseClass,
                                        UIDictationPhrase>)
                                        end;
                                        PUIDictationPhrase = Pointer;

                                        UITextInputStringTokenizerClass =
                                        interface(NSObjectClass)
                                        ['{918B91FD-F95B-47FB-BDE8-04C31AFD3932}']
                                        end;
                                        UITextInputStringTokenizer = interface
                                        (NSObject)
                                        ['{0E38CE82-CB08-4D6D-BA64-F6FD340BB266}']
                                        function initWithTextInput
                                        (textInput: UIResponder)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;

                                        TUITextInputStringTokenizer = class
                                        (TOCGenericImport<
                                        UITextInputStringTokenizerClass,
                                        UITextInputStringTokenizer>)
                                        end;
                                        PUITextInputStringTokenizer = Pointer;

                                        UIPopoverControllerClass = interface
                                        (NSObjectClass)
                                        ['{E337E9AD-8920-4D24-B895-8592DB53B340}']
                                        end;
                                        UIPopoverController = interface
                                        (NSObject)
                                        ['{B30F6087-CC82-471E-BD66-87267CC911DE}']
                                        function initWithContentViewController
                                        (viewController: UIViewController)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        [MethodName
                                        ('setContentViewController:')]
                                        procedure setContentViewController
                                        (contentViewController
                                        : UIViewController); cdecl;
                                        function contentViewController
                                        : UIViewController; cdecl;
                                        [MethodName
                                        ('setContentViewController:animated:')]
                                        procedure setContentViewControllerAnimated
                                        (viewController: UIViewController;
                                        animated: Boolean); cdecl;
                                        [MethodName('setPopoverContentSize:')]
                                        procedure setPopoverContentSize
                                        (popoverContentSize: CGSize); cdecl;
                                        function popoverContentSize
                                        : CGSize; cdecl;
                                        [MethodName
                                        ('setPopoverContentSize:animated:')]
                                        procedure setPopoverContentSizeAnimated
                                        (size: CGSize;
                                        animated: Boolean); cdecl;
                                        function isPopoverVisible
                                        : Boolean; cdecl;
                                        function popoverArrowDirection
                                        : UIPopoverArrowDirection; cdecl;
                                        procedure setPassthroughViews
                                        (passthroughViews: NSArray); cdecl;
                                        function passthroughViews
                                        : NSArray; cdecl;
                                        procedure presentPopoverFromRect
                                        (rect: CGRect; inView: UIView;
                                        permittedArrowDirections
                                        : UIPopoverArrowDirection;
                                        animated: Boolean); cdecl;
                                        procedure presentPopoverFromBarButtonItem
                                        (item: UIBarButtonItem;
                                        permittedArrowDirections
                                        : UIPopoverArrowDirection;
                                        animated: Boolean); cdecl;
                                        procedure dismissPopoverAnimated
                                        (animated: Boolean); cdecl;
                                        procedure setBackgroundColor
                                        (backgroundColor: UIColor); cdecl;
                                        function backgroundColor
                                        : UIColor; cdecl;
                                        procedure setPopoverLayoutMargins
                                        (popoverLayoutMargins
                                        : UIEdgeInsets); cdecl;
                                        function popoverLayoutMargins
                                        : UIEdgeInsets; cdecl;
                                        procedure setPopoverBackgroundViewClass
                                        (popoverBackgroundViewClass
                                        : Pointer); cdecl;
                                        function popoverBackgroundViewClass
                                        : Pointer; cdecl;
                                        end;

                                        TUIPopoverController = class
                                        (TOCGenericImport<
                                        UIPopoverControllerClass,
                                        UIPopoverController>)
                                        end;
                                        PUIPopoverController = Pointer;

                                        UIToolbarClass = interface(UIViewClass)
                                        ['{A4EF7BD2-F88D-4BD2-8BFF-79753522FB15}']
                                        end;
                                        UIToolbar = interface(UIView)
                                        ['{7EC5E26A-5D31-4058-BAAB-3FD1C2B49E1A}']
                                        procedure setBarStyle
                                        (barStyle: UIBarStyle);
                                        cdecl;
                                        function barStyle: UIBarStyle; cdecl;
                                        [MethodName('setItems:')]
                                        procedure setItems
                                        (items: NSArray); cdecl;
                                        function items: NSArray; cdecl;
                                        procedure setTranslucent
                                        (translucent: Boolean); cdecl;
                                        function isTranslucent: Boolean; cdecl;
                                        [MethodName('setItems:animated:')]
                                        procedure setItemsAnimated
                                        (items: NSArray;
                                        animated: Boolean); cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setBarTintColor
                                        (barTintColor: UIColor); cdecl;
                                        function barTintColor: UIColor; cdecl;
                                        procedure setBackgroundImage
                                        (backgroundImage: UIImage;
                                        forToolbarPosition: UIBarPosition;
                                        barMetrics: UIBarMetrics); cdecl;
                                        function backgroundImageForToolbarPosition
                                        (topOrBottom: UIBarPosition;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        procedure setShadowImage
                                        (shadowImage: UIImage;
                                        forToolbarPosition
                                        : UIBarPosition); cdecl;
                                        function shadowImageForToolbarPosition
                                        (topOrBottom: UIBarPosition)
                                        : UIImage; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        end;

                                        TUIToolbar = class
                                        (TOCGenericImport<UIToolbarClass,
                                        UIToolbar>)
                                        end;
                                        PUIToolbar = Pointer;

                                        UITabBarClass = interface(UIViewClass)
                                        ['{5A05A8B3-B412-470A-9091-63E4556EFC23}']
                                        end;
                                        UITabBar = interface(UIView)
                                        ['{5A5CD0F0-40FC-44E4-8C81-081D6DDAC80A}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        [MethodName('setItems:')]
                                        procedure setItems
                                        (items: NSArray); cdecl;
                                        function items: NSArray; cdecl;
                                        procedure setSelectedItem
                                        (selectedItem: UITabBarItem); cdecl;
                                        function selectedItem
                                        : UITabBarItem; cdecl;
                                        [MethodName('setItems:animated:')]
                                        procedure setItemsAnimated
                                        (items: NSArray;
                                        animated: Boolean); cdecl;
                                        procedure beginCustomizingItems
                                        (items: NSArray); cdecl;
                                        function endCustomizingAnimated
                                        (animated: Boolean): Boolean; cdecl;
                                        function isCustomizing: Boolean; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setBarTintColor
                                        (barTintColor: UIColor); cdecl;
                                        function barTintColor: UIColor; cdecl;
                                        procedure setSelectedImageTintColor
                                        (selectedImageTintColor
                                        : UIColor); cdecl;
                                        function selectedImageTintColor
                                        : UIColor; cdecl;
                                        procedure setBackgroundImage
                                        (backgroundImage: UIImage); cdecl;
                                        function backgroundImage
                                        : UIImage; cdecl;
                                        procedure setSelectionIndicatorImage
                                        (selectionIndicatorImage
                                        : UIImage); cdecl;
                                        function selectionIndicatorImage
                                        : UIImage; cdecl;
                                        procedure setShadowImage
                                        (shadowImage: UIImage); cdecl;
                                        function shadowImage: UIImage; cdecl;
                                        procedure setItemPositioning
                                        (itemPositioning
                                        : UITabBarItemPositioning); cdecl;
                                        function itemPositioning
                                        : UITabBarItemPositioning; cdecl;
                                        procedure setItemWidth
                                        (itemWidth: CGFloat); cdecl;
                                        function itemWidth: CGFloat; cdecl;
                                        procedure setItemSpacing
                                        (itemSpacing: CGFloat); cdecl;
                                        function itemSpacing: CGFloat; cdecl;
                                        procedure setBarStyle
                                        (barStyle: UIBarStyle); cdecl;
                                        function barStyle: UIBarStyle; cdecl;
                                        procedure setTranslucent
                                        (translucent: Boolean); cdecl;
                                        function isTranslucent: Boolean; cdecl;
                                        end;

                                        TUITabBar = class
                                        (TOCGenericImport<UITabBarClass,
                                        UITabBar>)
                                        end;
                                        PUITabBar = Pointer;

                                        UIBarButtonItemClass = interface
                                        (UIBarItemClass)
                                        ['{52720597-06A6-4E82-9C99-00FB488716F2}']
                                        end;
                                        UIBarButtonItem = interface(UIBarItem)
                                        ['{B69E9AAA-68C4-478A-B6EA-95A17C7F9C9A}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('initWithImage:style:target:action:')]
                                        function initWithImageStyleTargetAction
                                        (image: UIImage;
                                        style: UIBarButtonItemStyle;
                                        target: Pointer; action: SEL)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('initWithImage:landscapeImagePhone:style:target:action:')
                                        ]
                                        function initWithImageLandscapeImagePhoneStyleTargetAction
                                        (image: UIImage;
                                        landscapeImagePhone: UIImage;
                                        style: UIBarButtonItemStyle;
                                        target: Pointer; action: SEL)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithTitle(title: NSString;
                                        style: UIBarButtonItemStyle;
                                        target: Pointer; action: SEL)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithBarButtonSystemItem
                                        (systemItem: UIBarButtonSystemItem;
                                        target: Pointer; action: SEL)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCustomView
                                        (customView: UIView)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setStyle
                                        (style: UIBarButtonItemStyle); cdecl;
                                        function style
                                        : UIBarButtonItemStyle; cdecl;
                                        procedure setWidth
                                        (width: CGFloat); cdecl;
                                        function width: CGFloat; cdecl;
                                        procedure setPossibleTitles
                                        (possibleTitles: NSSet); cdecl;
                                        function possibleTitles: NSSet; cdecl;
                                        procedure setCustomView
                                        (customView: UIView); cdecl;
                                        function customView: UIView; cdecl;
                                        procedure setAction(action: SEL); cdecl;
                                        function action: SEL; cdecl;
                                        procedure setTarget
                                        (target: Pointer); cdecl;
                                        function target: Pointer; cdecl;
                                        [MethodName
                                        ('setBackgroundImage:forState:barMetrics:')
                                        ]
                                        procedure setBackgroundImageForStateBarMetrics
                                        (backgroundImage: UIImage;
                                        forState: UIControlState;
                                        barMetrics: UIBarMetrics); cdecl;
                                        [MethodName
                                        ('backgroundImageForState:barMetrics:')]
                                        function backgroundImageForStateBarMetrics
                                        (state: UIControlState;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        [MethodName
                                        ('setBackgroundImage:forState:style:barMetrics:')
                                        ]
                                        procedure setBackgroundImageForStateStyleBarMetrics
                                        (backgroundImage: UIImage;
                                        forState: UIControlState;
                                        style: UIBarButtonItemStyle;
                                        barMetrics: UIBarMetrics); cdecl;
                                        [MethodName
                                        ('backgroundImageForState:style:barMetrics:')
                                        ]
                                        function backgroundImageForStateStyleBarMetrics
                                        (state: UIControlState;
                                        style: UIBarButtonItemStyle;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setBackgroundVerticalPositionAdjustment
                                        (adjustment: CGFloat;
                                        forBarMetrics: UIBarMetrics); cdecl;
                                        function backgroundVerticalPositionAdjustmentForBarMetrics
                                        (barMetrics: UIBarMetrics)
                                        : CGFloat; cdecl;
                                        procedure setTitlePositionAdjustment
                                        (adjustment: UIOffset;
                                        forBarMetrics: UIBarMetrics); cdecl;
                                        function titlePositionAdjustmentForBarMetrics
                                        (barMetrics: UIBarMetrics)
                                        : UIOffset; cdecl;
                                        procedure setBackButtonBackgroundImage
                                        (backgroundImage: UIImage;
                                        forState: UIControlState;
                                        barMetrics: UIBarMetrics); cdecl;
                                        function backButtonBackgroundImageForState
                                        (state: UIControlState;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        procedure setBackButtonTitlePositionAdjustment
                                        (adjustment: UIOffset;
                                        forBarMetrics: UIBarMetrics); cdecl;
                                        function backButtonTitlePositionAdjustmentForBarMetrics
                                        (barMetrics: UIBarMetrics)
                                        : UIOffset; cdecl;
                                        procedure setBackButtonBackgroundVerticalPositionAdjustment
                                        (adjustment: CGFloat;
                                        forBarMetrics: UIBarMetrics); cdecl;
                                        function backButtonBackgroundVerticalPositionAdjustmentForBarMetrics
                                        (barMetrics: UIBarMetrics)
                                        : CGFloat; cdecl;
                                        function buttonGroup
                                        : UIBarButtonItemGroup; cdecl;
                                        end;

                                        TUIBarButtonItem = class
                                        (TOCGenericImport<UIBarButtonItemClass,
                                        UIBarButtonItem>)
                                        end;
                                        PUIBarButtonItem = Pointer;

                                        UIActionSheetClass = interface
                                        (UIViewClass)
                                        ['{6283EB8A-7EF4-4686-9655-752C07BADAF0}']
                                        end;
                                        UIActionSheet = interface(UIView)
                                        ['{1CA41136-7AED-4B6F-94DF-B1A4EC84D5AD}']
                                        function initWithTitle(title: NSString;
                                        delegate: Pointer;
                                        cancelButtonTitle: NSString;
                                        destructiveButtonTitle: NSString;
                                        otherButtonTitles: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setActionSheetStyle
                                        (actionSheetStyle
                                        : UIActionSheetStyle); cdecl;
                                        function actionSheetStyle
                                        : UIActionSheetStyle; cdecl;
                                        function addButtonWithTitle
                                        (title: NSString): NSInteger; cdecl;
                                        function buttonTitleAtIndex
                                        (buttonIndex: NSInteger)
                                        : NSString; cdecl;
                                        function numberOfButtons
                                        : NSInteger; cdecl;
                                        procedure setCancelButtonIndex
                                        (cancelButtonIndex: NSInteger); cdecl;
                                        function cancelButtonIndex
                                        : NSInteger; cdecl;
                                        procedure setDestructiveButtonIndex
                                        (destructiveButtonIndex
                                        : NSInteger); cdecl;
                                        function destructiveButtonIndex
                                        : NSInteger; cdecl;
                                        function firstOtherButtonIndex
                                        : NSInteger; cdecl;
                                        function isVisible: Boolean; cdecl;
                                        procedure showFromToolbar
                                        (view: UIToolbar); cdecl;
                                        procedure showFromTabBar
                                        (view: UITabBar); cdecl;
                                        procedure showFromBarButtonItem
                                        (item: UIBarButtonItem;
                                        animated: Boolean); cdecl;
                                        procedure showFromRect(rect: CGRect;
                                        inView: UIView;
                                        animated: Boolean); cdecl;
                                        procedure showInView
                                        (view: UIView); cdecl;
                                        procedure dismissWithClickedButtonIndex
                                        (buttonIndex: NSInteger;
                                        animated: Boolean); cdecl;
                                        end;

                                        TUIActionSheet = class
                                        (TOCGenericImport<UIActionSheetClass,
                                        UIActionSheet>)
                                        end;
                                        PUIActionSheet = Pointer;

                                        UIActivityClass = interface
                                        (NSObjectClass)
                                        ['{C09C4C70-0C7D-4D9F-8FF2-F5CF38B2C3EF}']
                                        { class } function activityCategory
                                        : UIActivityCategory;
                                        cdecl;
                                        end;
                                        UIActivity = interface(NSObject)
                                        ['{FFC15E91-A2F4-4049-8475-F6B143360FD6}']
                                        function activityType: NSString;
                                        cdecl;
                                        function activityTitle: NSString; cdecl;
                                        function activityImage: UIImage; cdecl;
                                        function canPerformWithActivityItems
                                        (activityItems: NSArray)
                                        : Boolean; cdecl;
                                        procedure prepareWithActivityItems
                                        (activityItems: NSArray); cdecl;
                                        function activityViewController
                                        : UIViewController; cdecl;
                                        procedure performActivity; cdecl;
                                        procedure activityDidFinish
                                        (completed: Boolean); cdecl;
                                        end;

                                        TUIActivity = class
                                        (TOCGenericImport<UIActivityClass,
                                        UIActivity>)
                                        end;
                                        PUIActivity = Pointer;

                                        UIActivityIndicatorViewClass = interface
                                        (UIViewClass)
                                        ['{2BBFC398-6A11-49CF-B40C-4E9E2F92A7E0}']
                                        end;
                                        UIActivityIndicatorView = interface
                                        (UIView)['{AB74DC0F-ED09-4AA1-BFDB-11A12CEED17A}']
                                        function initWithActivityIndicatorStyle
                                        (style: UIActivityIndicatorViewStyle)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithFrame(frame: CGRect)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder(coder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setActivityIndicatorViewStyle
                                        (activityIndicatorViewStyle
                                        : UIActivityIndicatorViewStyle); cdecl;
                                        function activityIndicatorViewStyle
                                        : UIActivityIndicatorViewStyle; cdecl;
                                        procedure setHidesWhenStopped
                                        (hidesWhenStopped: Boolean); cdecl;
                                        function hidesWhenStopped
                                        : Boolean; cdecl;
                                        procedure setColor
                                        (color: UIColor); cdecl;
                                        function color: UIColor; cdecl;
                                        procedure startAnimating; cdecl;
                                        procedure stopAnimating; cdecl;
                                        function isAnimating: Boolean; cdecl;
                                        end;

                                        TUIActivityIndicatorView = class
                                        (TOCGenericImport<
                                        UIActivityIndicatorViewClass,
                                        UIActivityIndicatorView>)
                                        end;
                                        PUIActivityIndicatorView = Pointer;

                                        UIActivityViewControllerClass =
                                        interface(UIViewControllerClass)
                                        ['{FE13CFC7-9C42-4215-857A-2136A7747B05}']
                                        end;
                                        UIActivityViewController = interface
                                        (UIViewController)
                                        ['{31C994FE-745C-4F71-B8C8-CB72F0B01B47}']
                                        function initWithActivityItems
                                        (activityItems: NSArray;
                                        applicationActivities: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setCompletionHandler
                                        (completionHandler
                                        : UIActivityViewControllerCompletionHandler);
                                        cdecl;
                                        function completionHandler
                                        : UIActivityViewControllerCompletionHandler;
                                        cdecl;
                                        procedure setCompletionWithItemsHandler
                                        (completionWithItemsHandler
                                        : UIActivityViewControllerCompletionWithItemsHandler);
                                        cdecl;
                                        function completionWithItemsHandler
                                        : UIActivityViewControllerCompletionWithItemsHandler;
                                        cdecl;
                                        procedure setExcludedActivityTypes
                                        (excludedActivityTypes: NSArray); cdecl;
                                        function excludedActivityTypes
                                        : NSArray; cdecl;
                                        end;

                                        TUIActivityViewController = class
                                        (TOCGenericImport<
                                        UIActivityViewControllerClass,
                                        UIActivityViewController>)
                                        end;
                                        PUIActivityViewController = Pointer;

                                        UIActivityItemProviderClass = interface
                                        (NSOperationClass)
                                        ['{4444A94F-70B6-4AC1-A651-6560AE22ECDF}']
                                        end;
                                        UIActivityItemProvider = interface
                                        (NSOperation)
                                        ['{58ACCD22-E1DC-4DB9-B7DA-1382D50E8F2E}']
                                        function initWithPlaceholderItem
                                        (placeholderItem: Pointer)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function placeholderItem
                                        : Pointer; cdecl;
                                        function activityType: NSString; cdecl;
                                        function item: Pointer; cdecl;
                                        end;

                                        TUIActivityItemProvider = class
                                        (TOCGenericImport<
                                        UIActivityItemProviderClass,
                                        UIActivityItemProvider>)
                                        end;
                                        PUIActivityItemProvider = Pointer;

                                        UIAlertViewClass = interface
                                        (UIViewClass)
                                        ['{8080AFC6-A57B-4915-B0DC-82B77027DEEC}']
                                        end;
                                        UIAlertView = interface(UIView)
                                        ['{4DC889EB-3B13-4435-B618-3D175CA4A387}']
                                        function initWithTitle(title: NSString;
                                        message: NSString; delegate: Pointer;
                                        cancelButtonTitle: NSString;
                                        otherButtonTitles: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithFrame(frame: CGRect)
                                        : Pointer; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setMessage
                                        (message: NSString); cdecl;
                                        function message: NSString; cdecl;
                                        function addButtonWithTitle
                                        (title: NSString): NSInteger; cdecl;
                                        function buttonTitleAtIndex
                                        (buttonIndex: NSInteger)
                                        : NSString; cdecl;
                                        function numberOfButtons
                                        : NSInteger; cdecl;
                                        procedure setCancelButtonIndex
                                        (cancelButtonIndex: NSInteger); cdecl;
                                        function cancelButtonIndex
                                        : NSInteger; cdecl;
                                        function firstOtherButtonIndex
                                        : NSInteger; cdecl;
                                        function isVisible: Boolean; cdecl;
                                        procedure show; cdecl;
                                        procedure dismissWithClickedButtonIndex
                                        (buttonIndex: NSInteger;
                                        animated: Boolean); cdecl;
                                        procedure setAlertViewStyle
                                        (alertViewStyle
                                        : UIAlertViewStyle); cdecl;
                                        function alertViewStyle
                                        : UIAlertViewStyle; cdecl;
                                        function textFieldAtIndex
                                        (textFieldIndex: NSInteger)
                                        : UITextField; cdecl;
                                        end;

                                        TUIAlertView = class
                                        (TOCGenericImport<UIAlertViewClass,
                                        UIAlertView>)
                                        end;
                                        PUIAlertView = Pointer;

                                        UILocalNotificationClass = interface
                                        (NSObjectClass)
                                        ['{2B028EE1-37AA-437D-8113-E9F39A6F38D8}']
                                        end;
                                        UILocalNotification = interface
                                        (NSObject)
                                        ['{9575DF83-2C94-4EA0-9678-D5085F85694A}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setFireDate
                                        (fireDate: NSDate); cdecl;
                                        function fireDate: NSDate; cdecl;
                                        procedure setTimeZone
                                        (timeZone: NSTimeZone); cdecl;
                                        function timeZone: NSTimeZone; cdecl;
                                        procedure setRepeatInterval
                                        (repeatInterval: NSCalendarUnit); cdecl;
                                        function repeatInterval
                                        : NSCalendarUnit; cdecl;
                                        procedure setRepeatCalendar
                                        (repeatCalendar: NSCalendar); cdecl;
                                        function repeatCalendar
                                        : NSCalendar; cdecl;
                                        procedure setRegion
                                        (region: CLRegion); cdecl;
                                        function region: CLRegion; cdecl;
                                        procedure setRegionTriggersOnce
                                        (regionTriggersOnce: Boolean); cdecl;
                                        function regionTriggersOnce
                                        : Boolean; cdecl;
                                        procedure setAlertBody
                                        (alertBody: NSString); cdecl;
                                        function alertBody: NSString; cdecl;
                                        procedure setHasAction
                                        (hasAction: Boolean); cdecl;
                                        function hasAction: Boolean; cdecl;
                                        procedure setAlertAction
                                        (alertAction: NSString); cdecl;
                                        function alertAction: NSString; cdecl;
                                        procedure setAlertLaunchImage
                                        (alertLaunchImage: NSString); cdecl;
                                        function alertLaunchImage
                                        : NSString; cdecl;
                                        procedure setAlertTitle
                                        (alertTitle: NSString); cdecl;
                                        function alertTitle: NSString; cdecl;
                                        procedure setSoundName
                                        (soundName: NSString); cdecl;
                                        function soundName: NSString; cdecl;
                                        procedure setApplicationIconBadgeNumber
                                        (applicationIconBadgeNumber
                                        : NSInteger); cdecl;
                                        function applicationIconBadgeNumber
                                        : NSInteger; cdecl;
                                        procedure setUserInfo
                                        (userInfo: NSDictionary); cdecl;
                                        function userInfo: NSDictionary; cdecl;
                                        procedure setCategory
                                        (category: NSString); cdecl;
                                        function category: NSString; cdecl;
                                        end;

                                        TUILocalNotification = class
                                        (TOCGenericImport<
                                        UILocalNotificationClass,
                                        UILocalNotification>)
                                        end;
                                        PUILocalNotification = Pointer;

                                        UIApplicationClass = interface
                                        (UIResponderClass)
                                        ['{7F6ACD5C-B198-44A9-A1D7-D0FB91D8D9CE}']
                                        { class } function sharedApplication
                                        : UIApplication;
                                        cdecl;
                                        { class } procedure
                                        registerObjectForStateRestoration
                                        (&object: Pointer;
                                        restorationIdentifier: NSString); cdecl;
                                        end;
                                        UIApplication = interface(UIResponder)
                                        ['{2AB2B312-5E3E-4B60-9519-EB53A65B784E}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure beginIgnoringInteractionEvents;
                                        cdecl;
                                        procedure endIgnoringInteractionEvents;
                                        cdecl;
                                        function isIgnoringInteractionEvents
                                        : Boolean; cdecl;
                                        procedure setIdleTimerDisabled
                                        (idleTimerDisabled: Boolean); cdecl;
                                        function isIdleTimerDisabled
                                        : Boolean; cdecl;
                                        function openURL(url: NSURL)
                                        : Boolean; cdecl;
                                        function canOpenURL(url: NSURL)
                                        : Boolean; cdecl;
                                        procedure sendEvent
                                        (event: UIEvent); cdecl;
                                        function keyWindow: UIWindow; cdecl;
                                        function windows: NSArray; cdecl;
                                        function sendAction(action: SEL;
                                        &to: Pointer; from: Pointer;
                                        forEvent: UIEvent): Boolean; cdecl;
                                        procedure setNetworkActivityIndicatorVisible
                                        (networkActivityIndicatorVisible
                                        : Boolean); cdecl;
                                        function isNetworkActivityIndicatorVisible
                                        : Boolean; cdecl;
                                        function statusBarStyle
                                        : UIStatusBarStyle; cdecl;
                                        function isStatusBarHidden
                                        : Boolean; cdecl;
                                        function statusBarOrientation
                                        : UIInterfaceOrientation; cdecl;
                                        function supportedInterfaceOrientationsForWindow
                                        (window: UIWindow)
                                        : UIInterfaceOrientationMask; cdecl;
                                        function statusBarOrientationAnimationDuration
                                        : NSTimeInterval; cdecl;
                                        function statusBarFrame: CGRect; cdecl;
                                        procedure setApplicationIconBadgeNumber
                                        (applicationIconBadgeNumber
                                        : NSInteger); cdecl;
                                        function applicationIconBadgeNumber
                                        : NSInteger; cdecl;
                                        procedure setApplicationSupportsShakeToEdit
                                        (applicationSupportsShakeToEdit
                                        : Boolean); cdecl;
                                        function applicationSupportsShakeToEdit
                                        : Boolean; cdecl;
                                        function applicationState
                                        : UIApplicationState; cdecl;
                                        function backgroundTimeRemaining
                                        : NSTimeInterval; cdecl;
                                        function beginBackgroundTaskWithExpirationHandler
                                        (handler: TUIKitAction)
                                        : UIBackgroundTaskIdentifier; cdecl;
                                        function beginBackgroundTaskWithName
                                        (taskName: NSString;
                                        expirationHandler: TUIKitAction)
                                        : UIBackgroundTaskIdentifier; cdecl;
                                        procedure endBackgroundTask
                                        (identifier
                                        : UIBackgroundTaskIdentifier); cdecl;
                                        procedure setMinimumBackgroundFetchInterval
                                        (minimumBackgroundFetchInterval
                                        : NSTimeInterval); cdecl;
                                        function backgroundRefreshStatus
                                        : UIBackgroundRefreshStatus; cdecl;
                                        function isProtectedDataAvailable
                                        : Boolean; cdecl;
                                        function userInterfaceLayoutDirection
                                        : UIUserInterfaceLayoutDirection; cdecl;
                                        function preferredContentSizeCategory
                                        : NSString; cdecl;
                                        procedure registerForRemoteNotifications;
                                        cdecl;
                                        procedure unregisterForRemoteNotifications;
                                        cdecl;
                                        function isRegisteredForRemoteNotifications
                                        : Boolean; cdecl;
                                        procedure registerForRemoteNotificationTypes
                                        (types: UIRemoteNotificationType);
                                        cdecl;
                                        function enabledRemoteNotificationTypes
                                        : UIRemoteNotificationType; cdecl;
                                        procedure presentLocalNotificationNow
                                        (notification
                                        : UILocalNotification); cdecl;
                                        procedure scheduleLocalNotification
                                        (notification
                                        : UILocalNotification); cdecl;
                                        procedure cancelLocalNotification
                                        (notification
                                        : UILocalNotification); cdecl;
                                        procedure cancelAllLocalNotifications;
                                        cdecl;
                                        procedure setScheduledLocalNotifications
                                        (scheduledLocalNotifications
                                        : NSArray); cdecl;
                                        function scheduledLocalNotifications
                                        : NSArray; cdecl;
                                        procedure registerUserNotificationSettings
                                        (notificationSettings
                                        : UIUserNotificationSettings); cdecl;
                                        function currentUserNotificationSettings
                                        : UIUserNotificationSettings; cdecl;
                                        procedure beginReceivingRemoteControlEvents;
                                        cdecl;
                                        procedure endReceivingRemoteControlEvents;
                                        cdecl;
                                        procedure setNewsstandIconImage
                                        (image: UIImage); cdecl;
                                        procedure setShortcutItems
                                        (shortcutItems: NSArray); cdecl;
                                        function shortcutItems: NSArray; cdecl;
                                        procedure extendStateRestoration; cdecl;
                                        procedure completeStateRestoration;
                                        cdecl;
                                        procedure ignoreSnapshotOnNextApplicationLaunch;
                                        cdecl;
                                        procedure setProximitySensingEnabled
                                        (proximitySensingEnabled
                                        : Boolean); cdecl;
                                        function isProximitySensingEnabled
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('setStatusBarHidden:animated:')]
                                        procedure setStatusBarHiddenAnimated
                                        (hidden: Boolean;
                                        animated: Boolean); cdecl;
                                        [MethodName('setStatusBarOrientation:')]
                                        procedure setStatusBarOrientation
                                        (statusBarOrientation
                                        : UIInterfaceOrientation); cdecl;
                                        [MethodName
                                        ('setStatusBarOrientation:animated:')]
                                        procedure setStatusBarOrientationAnimated
                                        (interfaceOrientation
                                        : UIInterfaceOrientation;
                                        animated: Boolean); cdecl;
                                        [MethodName('setStatusBarStyle:')]
                                        procedure setStatusBarStyle
                                        (statusBarStyle
                                        : UIStatusBarStyle); cdecl;
                                        [MethodName
                                        ('setStatusBarStyle:animated:')]
                                        procedure setStatusBarStyleAnimated
                                        (statusBarStyle: UIStatusBarStyle;
                                        animated: Boolean); cdecl;
                                        [MethodName('setStatusBarHidden:')]
                                        procedure setStatusBarHidden
                                        (statusBarHidden: Boolean); cdecl;
                                        [MethodName
                                        ('setStatusBarHidden:withAnimation:')]
                                        procedure setStatusBarHiddenWithAnimation
                                        (hidden: Boolean;
                                        withAnimation
                                        : UIStatusBarAnimation); cdecl;
                                        function setKeepAliveTimeout
                                        (timeout: NSTimeInterval;
                                        handler: TUIKitAction): Boolean; cdecl;
                                        procedure clearKeepAliveTimeout; cdecl;
                                        end;

                                        TUIApplication = class
                                        (TOCGenericImport<UIApplicationClass,
                                        UIApplication>)
                                        end;
                                        PUIApplication = Pointer;

                                        UIUserNotificationSettingsClass =
                                        interface(NSObjectClass)
                                        ['{53AF7F10-A699-4C42-BE6F-4175AB82567E}']
                                        { class } function settingsForTypes
                                        (types: UIUserNotificationType;
                                        categories: NSSet)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIUserNotificationSettings = interface
                                        (NSObject)
                                        ['{FD2418E5-4F25-4770-BF11-A8F455874F21}']
                                        function types: UIUserNotificationType;
                                        cdecl;
                                        function categories: NSSet; cdecl;
                                        end;

                                        TUIUserNotificationSettings = class
                                        (TOCGenericImport<
                                        UIUserNotificationSettingsClass,
                                        UIUserNotificationSettings>)
                                        end;
                                        PUIUserNotificationSettings = Pointer;

                                        UIApplicationShortcutItemClass =
                                        interface(NSObjectClass)
                                        ['{C94C7B8B-AAE0-4E30-96BA-D378DC89D04B}']
                                        end;
                                        UIApplicationShortcutItem = interface
                                        (NSObject)
                                        ['{DF6F21AD-B94A-421F-A2AA-A14AA35E3E44}']
                                        [MethodName
                                        ('initWithType:localizedTitle:localizedSubtitle:icon:userInfo:')
                                        ]
                                        function initWithTypeLocalizedTitleLocalizedSubtitleIconUserInfo
                                        (&type: NSString;
                                        localizedTitle: NSString;
                                        localizedSubtitle: NSString;
                                        icon: UIApplicationShortcutIcon;
                                        userInfo: NSDictionary)
                                        : Pointer { instancetype };
                                        cdecl;
                                        [MethodName
                                        ('initWithType:localizedTitle:')]
                                        function initWithTypeLocalizedTitle
                                        (&type: NSString;
                                        localizedTitle: NSString)
                                        : Pointer { instancetype }; cdecl;
                                        function &type: NSString; cdecl;
                                        function localizedTitle
                                        : NSString; cdecl;
                                        function localizedSubtitle
                                        : NSString; cdecl;
                                        function icon
                                        : UIApplicationShortcutIcon; cdecl;
                                        function userInfo: NSDictionary; cdecl;
                                        end;

                                        TUIApplicationShortcutItem = class
                                        (TOCGenericImport<
                                        UIApplicationShortcutItemClass,
                                        UIApplicationShortcutItem>)
                                        end;
                                        PUIApplicationShortcutItem = Pointer;

                                        UINavigationItemClass = interface
                                        (NSObjectClass)
                                        ['{AFB50097-272E-466A-9537-2A32844384F8}']
                                        end;
                                        UINavigationItem = interface(NSObject)
                                        ['{77AF638D-799B-4171-8318-B8188FEF3907}']
                                        function initWithTitle(title: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder(coder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setTitleView
                                        (titleView: UIView); cdecl;
                                        function titleView: UIView; cdecl;
                                        procedure setPrompt
                                        (prompt: NSString); cdecl;
                                        function prompt: NSString; cdecl;
                                        procedure setBackBarButtonItem
                                        (backBarButtonItem
                                        : UIBarButtonItem); cdecl;
                                        function backBarButtonItem
                                        : UIBarButtonItem; cdecl;
                                        [MethodName('setHidesBackButton:')]
                                        procedure setHidesBackButton
                                        (hidesBackButton: Boolean); cdecl;
                                        function hidesBackButton
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('setHidesBackButton:animated:')]
                                        procedure setHidesBackButtonAnimated
                                        (hidesBackButton: Boolean;
                                        animated: Boolean); cdecl;
                                        [MethodName('setLeftBarButtonItems:')]
                                        procedure setLeftBarButtonItems
                                        (leftBarButtonItems: NSArray); cdecl;
                                        function leftBarButtonItems
                                        : NSArray; cdecl;
                                        [MethodName('setRightBarButtonItems:')]
                                        procedure setRightBarButtonItems
                                        (rightBarButtonItems: NSArray); cdecl;
                                        function rightBarButtonItems
                                        : NSArray; cdecl;
                                        [MethodName
                                        ('setLeftBarButtonItems:animated:')]
                                        procedure setLeftBarButtonItemsAnimated
                                        (items: NSArray;
                                        animated: Boolean); cdecl;
                                        [MethodName
                                        ('setRightBarButtonItems:animated:')]
                                        procedure setRightBarButtonItemsAnimated
                                        (items: NSArray;
                                        animated: Boolean); cdecl;
                                        procedure setLeftItemsSupplementBackButton
                                        (leftItemsSupplementBackButton
                                        : Boolean); cdecl;
                                        function leftItemsSupplementBackButton
                                        : Boolean; cdecl;
                                        [MethodName('setLeftBarButtonItem:')]
                                        procedure setLeftBarButtonItem
                                        (leftBarButtonItem
                                        : UIBarButtonItem); cdecl;
                                        function leftBarButtonItem
                                        : UIBarButtonItem; cdecl;
                                        [MethodName('setRightBarButtonItem:')]
                                        procedure setRightBarButtonItem
                                        (rightBarButtonItem
                                        : UIBarButtonItem); cdecl;
                                        function rightBarButtonItem
                                        : UIBarButtonItem; cdecl;
                                        [MethodName
                                        ('setLeftBarButtonItem:animated:')]
                                        procedure setLeftBarButtonItemAnimated
                                        (item: UIBarButtonItem;
                                        animated: Boolean); cdecl;
                                        [MethodName
                                        ('setRightBarButtonItem:animated:')]
                                        procedure setRightBarButtonItemAnimated
                                        (item: UIBarButtonItem;
                                        animated: Boolean); cdecl;
                                        end;

                                        TUINavigationItem = class
                                        (TOCGenericImport<UINavigationItemClass,
                                        UINavigationItem>)
                                        end;
                                        PUINavigationItem = Pointer;

                                        UITabBarItemClass = interface
                                        (UIBarItemClass)
                                        ['{F506365B-E851-4EFE-8959-B771B604B2DA}']
                                        end;
                                        UITabBarItem = interface(UIBarItem)
                                        ['{3126B934-F4DA-4754-BE8F-B83F36F01989}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName('initWithTitle:image:tag:')]
                                        function initWithTitleImageTag
                                        (title: NSString; image: UIImage;
                                        tag: NSInteger)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('initWithTitle:image:selectedImage:')]
                                        function initWithTitleImageSelectedImage
                                        (title: NSString; image: UIImage;
                                        selectedImage: UIImage)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithTabBarSystemItem
                                        (systemItem: UITabBarSystemItem;
                                        tag: NSInteger)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setSelectedImage
                                        (selectedImage: UIImage); cdecl;
                                        function selectedImage: UIImage; cdecl;
                                        procedure setBadgeValue
                                        (badgeValue: NSString); cdecl;
                                        function badgeValue: NSString; cdecl;
                                        procedure setFinishedSelectedImage
                                        (selectedImage: UIImage;
                                        withFinishedUnselectedImage
                                        : UIImage); cdecl;
                                        function finishedSelectedImage
                                        : UIImage; cdecl;
                                        function finishedUnselectedImage
                                        : UIImage; cdecl;
                                        procedure setTitlePositionAdjustment
                                        (titlePositionAdjustment
                                        : UIOffset); cdecl;
                                        function titlePositionAdjustment
                                        : UIOffset; cdecl;
                                        end;

                                        TUITabBarItem = class
                                        (TOCGenericImport<UITabBarItemClass,
                                        UITabBarItem>)
                                        end;
                                        PUITabBarItem = Pointer;

                                        UISearchDisplayControllerClass =
                                        interface(NSObjectClass)
                                        ['{FF9C6CEB-196D-4BE2-B2B9-10384F43CE7C}']
                                        end;
                                        UISearchDisplayController = interface
                                        (NSObject)
                                        ['{A10687C2-D14A-442D-B374-34FED13D7341}']
                                        function initWithSearchBar
                                        (searchBar: UISearchBar;
                                        contentsController: UIViewController)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        [MethodName('setActive:')]
                                        procedure setActive
                                        (active: Boolean); cdecl;
                                        function isActive: Boolean; cdecl;
                                        [MethodName('setActive:animated:')]
                                        procedure setActiveAnimated
                                        (visible: Boolean;
                                        animated: Boolean); cdecl;
                                        function searchBar: UISearchBar; cdecl;
                                        function searchContentsController
                                        : UIViewController; cdecl;
                                        function searchResultsTableView
                                        : UITableView; cdecl;
                                        procedure setSearchResultsDataSource
                                        (searchResultsDataSource
                                        : Pointer); cdecl;
                                        function searchResultsDataSource
                                        : Pointer; cdecl;
                                        procedure setSearchResultsDelegate
                                        (searchResultsDelegate: Pointer); cdecl;
                                        function searchResultsDelegate
                                        : Pointer; cdecl;
                                        procedure setSearchResultsTitle
                                        (searchResultsTitle: NSString); cdecl;
                                        function searchResultsTitle
                                        : NSString; cdecl;
                                        procedure setDisplaysSearchBarInNavigationBar
                                        (displaysSearchBarInNavigationBar
                                        : Boolean); cdecl;
                                        function displaysSearchBarInNavigationBar
                                        : Boolean; cdecl;
                                        function navigationItem
                                        : UINavigationItem; cdecl;
                                        end;

                                        TUISearchDisplayController = class
                                        (TOCGenericImport<
                                        UISearchDisplayControllerClass,
                                        UISearchDisplayController>)
                                        end;
                                        PUISearchDisplayController = Pointer;

                                        UIStoryboardClass = interface
                                        (NSObjectClass)
                                        ['{ED302F25-1A1C-4035-99DE-96C6175C518F}']
                                        { class } function storyboardWithName
                                        (name: NSString; bundle: NSBundle)
                                        : UIStoryboard;
                                        cdecl;
                                        end;
                                        UIStoryboard = interface(NSObject)
                                        ['{49EA4124-20BD-46FA-AA0A-6ED2458EDC37}']
                                        function instantiateInitialViewController
                                        : UIViewController;
                                        cdecl;
                                        function instantiateViewControllerWithIdentifier
                                        (identifier: NSString)
                                        : UIViewController; cdecl;
                                        end;

                                        TUIStoryboard = class
                                        (TOCGenericImport<UIStoryboardClass,
                                        UIStoryboard>)
                                        end;
                                        PUIStoryboard = Pointer;

                                        UIStoryboardSegueClass = interface
                                        (NSObjectClass)
                                        ['{5925A0E5-3F16-47AB-8B12-400804AA6783}']
                                        { class } function segueWithIdentifier
                                        (identifier: NSString;
                                        source: UIViewController;
                                        destination: UIViewController;
                                        performHandler: TUIKitAction)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIStoryboardSegue = interface(NSObject)
                                        ['{103B38A9-7E84-4D74-BFEC-FC6267FD1E4E}']
                                        function initWithIdentifier
                                        (identifier: NSString;
                                        source: UIViewController;
                                        destination: UIViewController)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function identifier: NSString; cdecl;
                                        function sourceViewController
                                        : UIViewController; cdecl;
                                        function destinationViewController
                                        : UIViewController; cdecl;
                                        procedure perform; cdecl;
                                        end;

                                        TUIStoryboardSegue = class
                                        (TOCGenericImport<
                                        UIStoryboardSegueClass,
                                        UIStoryboardSegue>)
                                        end;
                                        PUIStoryboardSegue = Pointer;

                                        UIStoryboardUnwindSegueSourceClass =
                                        interface(NSObjectClass)
                                        ['{282341D2-F4CC-4F53-8118-A3A04313AA97}']
                                        end;
                                        UIStoryboardUnwindSegueSource =
                                        interface(NSObject)
                                        ['{081B5F94-27BF-47DC-B80F-96A3253D6D68}']
                                        function sourceViewController
                                        : UIViewController;
                                        cdecl;
                                        function unwindAction: SEL; cdecl;
                                        function sender: Pointer; cdecl;
                                        end;

                                        TUIStoryboardUnwindSegueSource = class
                                        (TOCGenericImport<
                                        UIStoryboardUnwindSegueSourceClass,
                                        UIStoryboardUnwindSegueSource>)
                                        end;
                                        PUIStoryboardUnwindSegueSource =
                                        Pointer;

                                        UIPresentationControllerClass =
                                        interface(NSObjectClass)
                                        ['{3F71CE47-1C8F-4173-8597-BDBE3A270E28}']
                                        end;
                                        UIPresentationController = interface
                                        (NSObject)
                                        ['{16A9C8B6-8CB2-45F9-BB8B-8279D6712024}']
                                        function presentingViewController
                                        : UIViewController;
                                        cdecl;
                                        function presentedViewController
                                        : UIViewController; cdecl;
                                        function presentationStyle
                                        : UIModalPresentationStyle; cdecl;
                                        function containerView: UIView; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        function initWithPresentedViewController
                                        (presentedViewController
                                        : UIViewController;
                                        presentingViewController
                                        : UIViewController)
                                        : Pointer { instancetype }; cdecl;
                                        function adaptivePresentationStyle
                                        : UIModalPresentationStyle; cdecl;
                                        function adaptivePresentationStyleForTraitCollection
                                        (traitCollection: UITraitCollection)
                                        : UIModalPresentationStyle; cdecl;
                                        procedure containerViewWillLayoutSubviews;
                                        cdecl;
                                        procedure containerViewDidLayoutSubviews;
                                        cdecl;
                                        function presentedView: UIView; cdecl;
                                        function frameOfPresentedViewInContainerView
                                        : CGRect; cdecl;
                                        function shouldPresentInFullscreen
                                        : Boolean; cdecl;
                                        function shouldRemovePresentersView
                                        : Boolean; cdecl;
                                        procedure presentationTransitionWillBegin;
                                        cdecl;
                                        procedure presentationTransitionDidEnd
                                        (completed: Boolean); cdecl;
                                        procedure dismissalTransitionWillBegin;
                                        cdecl;
                                        procedure dismissalTransitionDidEnd
                                        (completed: Boolean); cdecl;
                                        procedure setOverrideTraitCollection
                                        (overrideTraitCollection
                                        : UITraitCollection); cdecl;
                                        function overrideTraitCollection
                                        : UITraitCollection; cdecl;
                                        end;

                                        TUIPresentationController = class
                                        (TOCGenericImport<
                                        UIPresentationControllerClass,
                                        UIPresentationController>)
                                        end;
                                        PUIPresentationController = Pointer;

                                        UIPopoverPresentationControllerClass =
                                        interface(UIPresentationControllerClass)
                                        ['{460D0ACD-80DE-4670-A866-982856CB9256}']
                                        end;
                                        UIPopoverPresentationController =
                                        interface(UIPresentationController)
                                        ['{BA6361BC-92A5-4FB1-B5C1-E75259E3E718}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setPermittedArrowDirections
                                        (permittedArrowDirections
                                        : UIPopoverArrowDirection); cdecl;
                                        function permittedArrowDirections
                                        : UIPopoverArrowDirection; cdecl;
                                        procedure setSourceView
                                        (sourceView: UIView); cdecl;
                                        function sourceView: UIView; cdecl;
                                        procedure setSourceRect
                                        (sourceRect: CGRect); cdecl;
                                        function sourceRect: CGRect; cdecl;
                                        procedure setCanOverlapSourceViewRect
                                        (canOverlapSourceViewRect
                                        : Boolean); cdecl;
                                        function canOverlapSourceViewRect
                                        : Boolean; cdecl;
                                        procedure setBarButtonItem
                                        (barButtonItem: UIBarButtonItem); cdecl;
                                        function barButtonItem
                                        : UIBarButtonItem; cdecl;
                                        function arrowDirection
                                        : UIPopoverArrowDirection; cdecl;
                                        procedure setPassthroughViews
                                        (passthroughViews: NSArray); cdecl;
                                        function passthroughViews
                                        : NSArray; cdecl;
                                        procedure setBackgroundColor
                                        (backgroundColor: UIColor); cdecl;
                                        function backgroundColor
                                        : UIColor; cdecl;
                                        procedure setPopoverLayoutMargins
                                        (popoverLayoutMargins
                                        : UIEdgeInsets); cdecl;
                                        function popoverLayoutMargins
                                        : UIEdgeInsets; cdecl;
                                        procedure setPopoverBackgroundViewClass
                                        (popoverBackgroundViewClass
                                        : Pointer); cdecl;
                                        function popoverBackgroundViewClass
                                        : Pointer; cdecl;
                                        end;

                                        TUIPopoverPresentationController = class
                                        (TOCGenericImport<
                                        UIPopoverPresentationControllerClass,
                                        UIPopoverPresentationController>)
                                        end;
                                        PUIPopoverPresentationController =
                                        Pointer;

                                        UIPreviewActionClass = interface
                                        (NSObjectClass)
                                        ['{7BC1A1E3-31AC-45F4-ADC9-2090583BAAEC}']
                                        { class } function actionWithTitle
                                        (title: NSString;
                                        style: UIPreviewActionStyle;
                                        handler: TUIKitHandler2)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIPreviewAction = interface(NSObject)
                                        ['{16C4F5BA-E911-4223-88DE-947BDB103A1A}']
                                        function handler: TUIKitHandler1;
                                        cdecl;
                                        end;

                                        TUIPreviewAction = class
                                        (TOCGenericImport<UIPreviewActionClass,
                                        UIPreviewAction>)
                                        end;
                                        PUIPreviewAction = Pointer;

                                        UIPreviewActionGroupClass = interface
                                        (NSObjectClass)
                                        ['{4AC3DB3C-A205-42B6-B75E-0E67D6134EEE}']
                                        { class } function actionGroupWithTitle
                                        (title: NSString;
                                        style: UIPreviewActionStyle;
                                        actions: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIPreviewActionGroup = interface
                                        (NSObject)
                                        ['{6EABCA04-EDB0-4D42-8697-5C2DBF2A287E}']
                                        end;

                                        TUIPreviewActionGroup = class
                                        (TOCGenericImport<
                                        UIPreviewActionGroupClass,
                                        UIPreviewActionGroup>)
                                        end;
                                        PUIPreviewActionGroup = Pointer;

                                        UIAlertActionClass = interface
                                        (NSObjectClass)
                                        ['{C52701A3-7117-4008-8CED-AFA6D9821E1F}']
                                        { class } function actionWithTitle
                                        (title: NSString;
                                        style: UIAlertActionStyle;
                                        handler: TUIKitHandler3)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIAlertAction = interface(NSObject)
                                        ['{9A1E22C9-0C86-40AB-A26D-1387044DDED7}']
                                        function title: NSString;
                                        cdecl;
                                        function style
                                        : UIAlertActionStyle; cdecl;
                                        procedure setEnabled
                                        (enabled: Boolean); cdecl;
                                        function isEnabled: Boolean; cdecl;
                                        end;

                                        TUIAlertAction = class
                                        (TOCGenericImport<UIAlertActionClass,
                                        UIAlertAction>)
                                        end;
                                        PUIAlertAction = Pointer;

                                        UIAlertControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{8EB23EA0-8B3D-4F1E-B543-324EA9A38525}']
                                        { class } function
                                        alertControllerWithTitle
                                        (title: NSString; message: NSString;
                                        preferredStyle: UIAlertControllerStyle)
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIAlertController = interface
                                        (UIViewController)
                                        ['{D5FEDC17-3FBE-421C-A452-7EEE996A8CD2}']
                                        procedure addAction
                                        (action: UIAlertAction);
                                        cdecl;
                                        function actions: NSArray; cdecl;
                                        procedure setPreferredAction
                                        (preferredAction: UIAlertAction); cdecl;
                                        function preferredAction
                                        : UIAlertAction; cdecl;
                                        procedure addTextFieldWithConfigurationHandler
                                        (configurationHandler
                                        : TUIKitConfigurationHandler); cdecl;
                                        function textFields: NSArray; cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setMessage
                                        (message: NSString); cdecl;
                                        function message: NSString; cdecl;
                                        function preferredStyle
                                        : UIAlertControllerStyle; cdecl;
                                        end;

                                        TUIAlertController = class
                                        (TOCGenericImport<
                                        UIAlertControllerClass,
                                        UIAlertController>)
                                        end;
                                        PUIAlertController = Pointer;

                                        UIApplicationShortcutIconClass =
                                        interface(NSObjectClass)
                                        ['{7A35C212-BC4F-4661-90E3-9F34C8B0DC9E}']
                                        { class } function iconWithType
                                        (&type: UIApplicationShortcutIconType)
                                        : Pointer { instancetype };
                                        cdecl;
                                        { class } function
                                        iconWithTemplateImageName
                                        (templateImageName: NSString)
                                        : Pointer { instancetype }; cdecl;
                                        end;
                                        UIApplicationShortcutIcon = interface
                                        (NSObject)
                                        ['{A1151111-D66E-47D8-AF23-232FBBC2FF26}']
                                        end;

                                        TUIApplicationShortcutIcon = class
                                        (TOCGenericImport<
                                        UIApplicationShortcutIconClass,
                                        UIApplicationShortcutIcon>)
                                        end;
                                        PUIApplicationShortcutIcon = Pointer;

                                        UIMutableApplicationShortcutItemClass =
                                        interface(
                                        UIApplicationShortcutItemClass)
                                        ['{BDCF2A6A-F091-4E64-95AA-093AC3DD5ECA}']
                                        end;
                                        UIMutableApplicationShortcutItem =
                                        interface(UIApplicationShortcutItem)
                                        ['{BBA21A47-C174-4B0C-A01F-E71C85A26A19}']
                                        procedure setType(&type: NSString);
                                        cdecl;
                                        function &type: NSString; cdecl;
                                        procedure setLocalizedTitle
                                        (localizedTitle: NSString); cdecl;
                                        function localizedTitle
                                        : NSString; cdecl;
                                        procedure setLocalizedSubtitle
                                        (localizedSubtitle: NSString); cdecl;
                                        function localizedSubtitle
                                        : NSString; cdecl;
                                        procedure setIcon
                                        (icon: UIApplicationShortcutIcon);
                                        cdecl;
                                        function icon
                                        : UIApplicationShortcutIcon; cdecl;
                                        procedure setUserInfo
                                        (userInfo: NSDictionary); cdecl;
                                        function userInfo: NSDictionary; cdecl;
                                        end;

                                        TUIMutableApplicationShortcutItem =
                                        class(TOCGenericImport<
                                        UIMutableApplicationShortcutItemClass,
                                        UIMutableApplicationShortcutItem>)
                                        end;
                                        PUIMutableApplicationShortcutItem =
                                        Pointer;

                                        UIAttachmentBehaviorClass = interface
                                        (UIDynamicBehaviorClass)
                                        ['{AC708B43-9B11-4C43-AFDD-41EC75C81C5D}']
                                        [MethodName
                                        ('slidingAttachmentWithItem:attachedToItem:attachmentAnchor:axisOfTranslation:')
                                        ]
                                        { class } function
                                        slidingAttachmentWithItemAttachedToItemAttachmentAnchorAxisOfTranslation
                                        (item1: Pointer;
                                        attachedToItem: Pointer;
                                        attachmentAnchor: CGPoint;
                                        axisOfTranslation: CGVector)
                                        : Pointer { instancetype };
                                        cdecl;
                                        [MethodName
                                        ('slidingAttachmentWithItem:attachmentAnchor:axisOfTranslation:')
                                        ]
                                        { class } function
                                        slidingAttachmentWithItemAttachmentAnchorAxisOfTranslation
                                        (item: Pointer;
                                        attachmentAnchor: CGPoint;
                                        axisOfTranslation: CGVector)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('limitAttachmentWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:')
                                        ]
                                        { class } function
                                        limitAttachmentWithItem(item1: Pointer;
                                        offsetFromCenter: UIOffset;
                                        attachedToItem: Pointer;
                                        offsetFromCenter1: UIOffset)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        fixedAttachmentWithItem(item1: Pointer;
                                        attachedToItem: Pointer;
                                        attachmentAnchor: CGPoint)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function pinAttachmentWithItem
                                        (item1: Pointer;
                                        attachedToItem: Pointer;
                                        attachmentAnchor: CGPoint)
                                        : Pointer { instancetype }; cdecl;
                                        end;
                                        UIAttachmentBehavior = interface
                                        (UIDynamicBehavior)
                                        ['{95E68F3E-D586-405A-889D-E3EE3F9F12BD}']
                                        [MethodName
                                        ('initWithItem:attachedToAnchor:')]
                                        function initWithItemAttachedToAnchor
                                        (item: Pointer;
                                        attachedToAnchor: CGPoint)
                                        : Pointer { instancetype };
                                        cdecl;
                                        [MethodName
                                        ('initWithItem:offsetFromCenter:attachedToAnchor:')
                                        ]
                                        function initWithItemOffsetFromCenterAttachedToAnchor
                                        (item: Pointer;
                                        offsetFromCenter: UIOffset;
                                        attachedToAnchor: CGPoint)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('initWithItem:attachedToItem:')]
                                        function initWithItemAttachedToItem
                                        (item1: Pointer;
                                        attachedToItem: Pointer)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:')
                                        ]
                                        function initWithItemOffsetFromCenterAttachedToItemOffsetFromCenter
                                        (item1: Pointer;
                                        offsetFromCenter: UIOffset;
                                        attachedToItem: Pointer;
                                        offsetFromCenter1: UIOffset)
                                        : Pointer { instancetype }; cdecl;
                                        function items: NSArray; cdecl;
                                        function attachedBehaviorType
                                        : UIAttachmentBehaviorType; cdecl;
                                        procedure setAnchorPoint
                                        (anchorPoint: CGPoint); cdecl;
                                        function anchorPoint: CGPoint; cdecl;
                                        procedure setLength
                                        (length: CGFloat); cdecl;
                                        function length: CGFloat; cdecl;
                                        procedure setDamping
                                        (damping: CGFloat); cdecl;
                                        function damping: CGFloat; cdecl;
                                        procedure setFrequency
                                        (frequency: CGFloat); cdecl;
                                        function frequency: CGFloat; cdecl;
                                        procedure setFrictionTorque
                                        (frictionTorque: CGFloat); cdecl;
                                        function frictionTorque: CGFloat; cdecl;
                                        procedure setAttachmentRange
                                        (attachmentRange: UIFloatRange); cdecl;
                                        function attachmentRange
                                        : UIFloatRange; cdecl;
                                        end;

                                        TUIAttachmentBehavior = class
                                        (TOCGenericImport<
                                        UIAttachmentBehaviorClass,
                                        UIAttachmentBehavior>)
                                        end;
                                        PUIAttachmentBehavior = Pointer;

                                        UICollectionViewClass = interface
                                        (UIScrollViewClass)
                                        ['{3CE174D1-222A-4845-AC79-F6F7096D6BC3}']
                                        end;
                                        UICollectionView = interface
                                        (UIScrollView)
                                        ['{AF09FFE2-94A2-49CF-B8D6-693C1C93245B}']
                                        function initWithFrame(frame: CGRect;
                                        collectionViewLayout
                                        : UICollectionViewLayout)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName('setCollectionViewLayout:')]
                                        procedure setCollectionViewLayout
                                        (collectionViewLayout
                                        : UICollectionViewLayout); cdecl;
                                        function collectionViewLayout
                                        : UICollectionViewLayout; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setDataSource
                                        (dataSource: Pointer); cdecl;
                                        function dataSource: Pointer; cdecl;
                                        procedure setBackgroundView
                                        (backgroundView: UIView); cdecl;
                                        function backgroundView: UIView; cdecl;
                                        [MethodName
                                        ('registerClass:forCellWithReuseIdentifier:')
                                        ]
                                        procedure registerClassForCellWithReuseIdentifier
                                        (cellClass: Pointer;
                                        forCellWithReuseIdentifier
                                        : NSString); cdecl;
                                        [MethodName
                                        ('registerNib:forCellWithReuseIdentifier:')
                                        ]
                                        procedure registerNibForCellWithReuseIdentifier
                                        (nib: UINib;
                                        forCellWithReuseIdentifier
                                        : NSString); cdecl;
                                        [MethodName
                                        ('registerClass:forSupplementaryViewOfKind:withReuseIdentifier:')
                                        ]
                                        procedure registerClassForSupplementaryViewOfKindWithReuseIdentifier
                                        (viewClass: Pointer;
                                        forSupplementaryViewOfKind: NSString;
                                        withReuseIdentifier: NSString); cdecl;
                                        [MethodName
                                        ('registerNib:forSupplementaryViewOfKind:withReuseIdentifier:')
                                        ]
                                        procedure registerNibForSupplementaryViewOfKindWithReuseIdentifier
                                        (nib: UINib;
                                        forSupplementaryViewOfKind: NSString;
                                        withReuseIdentifier: NSString); cdecl;
                                        function dequeueReusableCellWithReuseIdentifier
                                        (identifier: NSString;
                                        forIndexPath: NSIndexPath)
                                        : UICollectionViewCell; cdecl;
                                        function dequeueReusableSupplementaryViewOfKind
                                        (elementKind: NSString;
                                        withReuseIdentifier: NSString;
                                        forIndexPath: NSIndexPath)
                                        : UICollectionReusableView; cdecl;
                                        procedure setAllowsSelection
                                        (allowsSelection: Boolean); cdecl;
                                        function allowsSelection
                                        : Boolean; cdecl;
                                        procedure setAllowsMultipleSelection
                                        (allowsMultipleSelection
                                        : Boolean); cdecl;
                                        function allowsMultipleSelection
                                        : Boolean; cdecl;
                                        function indexPathsForSelectedItems
                                        : NSArray; cdecl;
                                        procedure selectItemAtIndexPath
                                        (indexPath: NSIndexPath;
                                        animated: Boolean;
                                        scrollPosition
                                        : UICollectionViewScrollPosition);
                                        cdecl;
                                        procedure deselectItemAtIndexPath
                                        (indexPath: NSIndexPath;
                                        animated: Boolean); cdecl;
                                        procedure reloadData; cdecl;
                                        [MethodName
                                        ('setCollectionViewLayout:animated:')]
                                        procedure setCollectionViewLayoutAnimated
                                        (layout: UICollectionViewLayout;
                                        animated: Boolean); cdecl;
                                        [MethodName
                                        ('setCollectionViewLayout:animated:completion:')
                                        ]
                                        procedure setCollectionViewLayoutAnimatedCompletion
                                        (layout: UICollectionViewLayout;
                                        animated: Boolean;
                                        completion: TUIKitCompletion); cdecl;
                                        function startInteractiveTransitionToCollectionViewLayout
                                        (layout: UICollectionViewLayout;
                                        completion
                                        : UICollectionViewLayoutInteractiveTransitionCompletion)
                                        : UICollectionViewTransitionLayout;
                                        cdecl;
                                        procedure finishInteractiveTransition;
                                        cdecl;
                                        procedure cancelInteractiveTransition;
                                        cdecl;
                                        function numberOfSections
                                        : NSInteger; cdecl;
                                        function numberOfItemsInSection
                                        (section: NSInteger): NSInteger; cdecl;
                                        function layoutAttributesForItemAtIndexPath
                                        (indexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function layoutAttributesForSupplementaryElementOfKind
                                        (kind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function indexPathForItemAtPoint
                                        (point: CGPoint): NSIndexPath; cdecl;
                                        function indexPathForCell
                                        (cell: UICollectionViewCell)
                                        : NSIndexPath; cdecl;
                                        function cellForItemAtIndexPath
                                        (indexPath: NSIndexPath)
                                        : UICollectionViewCell; cdecl;
                                        function visibleCells: NSArray; cdecl;
                                        function indexPathsForVisibleItems
                                        : NSArray; cdecl;
                                        function supplementaryViewForElementKind
                                        (elementKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionReusableView; cdecl;
                                        function visibleSupplementaryViewsOfKind
                                        (elementKind: NSString): NSArray; cdecl;
                                        function indexPathsForVisibleSupplementaryElementsOfKind
                                        (elementKind: NSString): NSArray; cdecl;
                                        procedure scrollToItemAtIndexPath
                                        (indexPath: NSIndexPath;
                                        atScrollPosition
                                        : UICollectionViewScrollPosition;
                                        animated: Boolean); cdecl;
                                        procedure insertSections
                                        (sections: NSIndexSet); cdecl;
                                        procedure deleteSections
                                        (sections: NSIndexSet); cdecl;
                                        procedure reloadSections
                                        (sections: NSIndexSet); cdecl;
                                        procedure moveSection
                                        (section: NSInteger;
                                        toSection: NSInteger); cdecl;
                                        procedure insertItemsAtIndexPaths
                                        (indexPaths: NSArray); cdecl;
                                        procedure deleteItemsAtIndexPaths
                                        (indexPaths: NSArray); cdecl;
                                        procedure reloadItemsAtIndexPaths
                                        (indexPaths: NSArray); cdecl;
                                        procedure moveItemAtIndexPath
                                        (indexPath: NSIndexPath;
                                        toIndexPath: NSIndexPath); cdecl;
                                        procedure performBatchUpdates
                                        (updates: TUIKitAction;
                                        completion: TUIKitCompletion); cdecl;
                                        function beginInteractiveMovementForItemAtIndexPath
                                        (indexPath: NSIndexPath)
                                        : Boolean; cdecl;
                                        procedure updateInteractiveMovementTargetPosition
                                        (targetPosition: CGPoint); cdecl;
                                        procedure endInteractiveMovement; cdecl;
                                        procedure cancelInteractiveMovement;
                                        cdecl;
                                        procedure setRemembersLastFocusedIndexPath
                                        (remembersLastFocusedIndexPath
                                        : Boolean); cdecl;
                                        function remembersLastFocusedIndexPath
                                        : Boolean; cdecl;
                                        end;

                                        TUICollectionView = class
                                        (TOCGenericImport<UICollectionViewClass,
                                        UICollectionView>)
                                        end;
                                        PUICollectionView = Pointer;

                                        UICollectionReusableViewClass =
                                        interface(UIViewClass)
                                        ['{3539BC77-78E8-4E0E-9F83-2B0BA68D5D89}']
                                        end;
                                        UICollectionReusableView = interface
                                        (UIView)['{FABE228C-81AE-4081-AF61-CBD2CE8B68A6}']
                                        function reuseIdentifier: NSString;
                                        cdecl;
                                        procedure prepareForReuse; cdecl;
                                        procedure applyLayoutAttributes
                                        (layoutAttributes
                                        : UICollectionViewLayoutAttributes);
                                        cdecl;
                                        procedure willTransitionFromLayout
                                        (oldLayout: UICollectionViewLayout;
                                        toLayout: UICollectionViewLayout);
                                        cdecl;
                                        procedure didTransitionFromLayout
                                        (oldLayout: UICollectionViewLayout;
                                        toLayout: UICollectionViewLayout);
                                        cdecl;
                                        function preferredLayoutAttributesFittingAttributes
                                        (layoutAttributes
                                        : UICollectionViewLayoutAttributes)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        end;

                                        TUICollectionReusableView = class
                                        (TOCGenericImport<
                                        UICollectionReusableViewClass,
                                        UICollectionReusableView>)
                                        end;
                                        PUICollectionReusableView = Pointer;

                                        UICollectionViewCellClass = interface
                                        (UICollectionReusableViewClass)
                                        ['{99C4D638-9F90-4F96-996C-6748906D52DC}']
                                        end;
                                        UICollectionViewCell = interface
                                        (UICollectionReusableView)
                                        ['{E1F54165-25DA-4C79-9724-7CF26600962E}']
                                        function contentView: UIView;
                                        cdecl;
                                        procedure setSelected
                                        (selected: Boolean); cdecl;
                                        function isSelected: Boolean; cdecl;
                                        procedure setHighlighted
                                        (highlighted: Boolean); cdecl;
                                        function isHighlighted: Boolean; cdecl;
                                        procedure setBackgroundView
                                        (backgroundView: UIView); cdecl;
                                        function backgroundView: UIView; cdecl;
                                        procedure setSelectedBackgroundView
                                        (selectedBackgroundView: UIView); cdecl;
                                        function selectedBackgroundView
                                        : UIView; cdecl;
                                        end;

                                        TUICollectionViewCell = class
                                        (TOCGenericImport<
                                        UICollectionViewCellClass,
                                        UICollectionViewCell>)
                                        end;
                                        PUICollectionViewCell = Pointer;

                                        UICollectionViewLayoutClass = interface
                                        (NSObjectClass)
                                        ['{5889D8B9-B369-4EBA-A140-6C8BCCC6637B}']
                                        { class } function layoutAttributesClass
                                        : Pointer;
                                        cdecl;
                                        { class } function
                                        invalidationContextClass
                                        : Pointer; cdecl;
                                        end;
                                        UICollectionViewLayout = interface
                                        (NSObject)
                                        ['{6A1130A4-1068-4944-8C23-E532400C2558}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function collectionView
                                        : UICollectionView; cdecl;
                                        procedure invalidateLayout; cdecl;
                                        procedure invalidateLayoutWithContext
                                        (context: UICollectionViewLayoutInvalidationContext);
                                        cdecl;
                                        procedure registerClass
                                        (viewClass: Pointer;
                                        forDecorationViewOfKind
                                        : NSString); cdecl;
                                        procedure registerNib(nib: UINib;
                                        forDecorationViewOfKind
                                        : NSString); cdecl;
                                        procedure prepareLayout; cdecl;
                                        function layoutAttributesForElementsInRect
                                        (rect: CGRect): NSArray; cdecl;
                                        function layoutAttributesForItemAtIndexPath
                                        (indexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function layoutAttributesForSupplementaryViewOfKind
                                        (elementKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function layoutAttributesForDecorationViewOfKind
                                        (elementKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function shouldInvalidateLayoutForBoundsChange
                                        (newBounds: CGRect): Boolean; cdecl;
                                        function invalidationContextForBoundsChange
                                        (newBounds: CGRect)
                                        : UICollectionViewLayoutInvalidationContext;
                                        cdecl;
                                        function shouldInvalidateLayoutForPreferredLayoutAttributes
                                        (preferredAttributes
                                        : UICollectionViewLayoutAttributes;
                                        withOriginalAttributes
                                        : UICollectionViewLayoutAttributes)
                                        : Boolean; cdecl;
                                        function invalidationContextForPreferredLayoutAttributes
                                        (preferredAttributes
                                        : UICollectionViewLayoutAttributes;
                                        withOriginalAttributes
                                        : UICollectionViewLayoutAttributes)
                                        : UICollectionViewLayoutInvalidationContext;
                                        cdecl;
                                        [MethodName
                                        ('targetContentOffsetForProposedContentOffset:withScrollingVelocity:')
                                        ]
                                        function targetContentOffsetForProposedContentOffsetWithScrollingVelocity
                                        (proposedContentOffset: CGPoint;
                                        withScrollingVelocity: CGPoint)
                                        : CGPoint; cdecl;
                                        [MethodName
                                        ('targetContentOffsetForProposedContentOffset:')
                                        ]
                                        function targetContentOffsetForProposedContentOffset
                                        (proposedContentOffset: CGPoint)
                                        : CGPoint; cdecl;
                                        function collectionViewContentSize
                                        : CGSize; cdecl;
                                        procedure prepareForCollectionViewUpdates
                                        (updateItems: NSArray); cdecl;
                                        procedure finalizeCollectionViewUpdates;
                                        cdecl;
                                        procedure prepareForAnimatedBoundsChange
                                        (oldBounds: CGRect); cdecl;
                                        procedure finalizeAnimatedBoundsChange;
                                        cdecl;
                                        procedure prepareForTransitionToLayout
                                        (newLayout
                                        : UICollectionViewLayout); cdecl;
                                        procedure prepareForTransitionFromLayout
                                        (oldLayout
                                        : UICollectionViewLayout); cdecl;
                                        procedure finalizeLayoutTransition;
                                        cdecl;
                                        function initialLayoutAttributesForAppearingItemAtIndexPath
                                        (itemIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function finalLayoutAttributesForDisappearingItemAtIndexPath
                                        (itemIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function initialLayoutAttributesForAppearingSupplementaryElementOfKind
                                        (elementKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function finalLayoutAttributesForDisappearingSupplementaryElementOfKind
                                        (elementKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function initialLayoutAttributesForAppearingDecorationElementOfKind
                                        (elementKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function finalLayoutAttributesForDisappearingDecorationElementOfKind
                                        (elementKind: NSString;
                                        atIndexPath: NSIndexPath)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function indexPathsToDeleteForSupplementaryViewOfKind
                                        (elementKind: NSString): NSArray; cdecl;
                                        function indexPathsToDeleteForDecorationViewOfKind
                                        (elementKind: NSString): NSArray; cdecl;
                                        function indexPathsToInsertForSupplementaryViewOfKind
                                        (elementKind: NSString): NSArray; cdecl;
                                        function indexPathsToInsertForDecorationViewOfKind
                                        (elementKind: NSString): NSArray; cdecl;
                                        function targetIndexPathForInteractivelyMovingItem
                                        (previousIndexPath: NSIndexPath;
                                        withPosition: CGPoint)
                                        : NSIndexPath; cdecl;
                                        function layoutAttributesForInteractivelyMovingItemAtIndexPath
                                        (indexPath: NSIndexPath;
                                        withTargetPosition: CGPoint)
                                        : UICollectionViewLayoutAttributes;
                                        cdecl;
                                        function invalidationContextForInteractivelyMovingItems
                                        (targetIndexPaths: NSArray;
                                        withTargetPosition: CGPoint;
                                        previousIndexPaths: NSArray;
                                        previousPosition: CGPoint)
                                        : UICollectionViewLayoutInvalidationContext;
                                        cdecl;
                                        function invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths
                                        (indexPaths: NSArray;
                                        previousIndexPaths: NSArray;
                                        movementCancelled: Boolean)
                                        : UICollectionViewLayoutInvalidationContext;
                                        cdecl;
                                        end;

                                        TUICollectionViewLayout = class
                                        (TOCGenericImport<
                                        UICollectionViewLayoutClass,
                                        UICollectionViewLayout>)
                                        end;
                                        PUICollectionViewLayout = Pointer;

                                        UICollectionViewTransitionLayoutClass =
                                        interface(UICollectionViewLayoutClass)
                                        ['{64CBBF35-AF5A-4767-AADA-8F7BBBC1EB76}']
                                        end;
                                        UICollectionViewTransitionLayout =
                                        interface(UICollectionViewLayout)
                                        ['{3FAED3C2-471B-4520-ABC3-50BEB4B89B72}']
                                        procedure setTransitionProgress
                                        (transitionProgress: CGFloat);
                                        cdecl;
                                        function transitionProgress
                                        : CGFloat; cdecl;
                                        function currentLayout
                                        : UICollectionViewLayout; cdecl;
                                        function nextLayout
                                        : UICollectionViewLayout; cdecl;
                                        function initWithCurrentLayout
                                        (currentLayout: UICollectionViewLayout;
                                        nextLayout: UICollectionViewLayout)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure updateValue(value: CGFloat;
                                        forAnimatedKey: NSString); cdecl;
                                        function valueForAnimatedKey
                                        (key: NSString): CGFloat; cdecl;
                                        end;

                                        TUICollectionViewTransitionLayout =
                                        class(TOCGenericImport<
                                        UICollectionViewTransitionLayoutClass,
                                        UICollectionViewTransitionLayout>)
                                        end;
                                        PUICollectionViewTransitionLayout =
                                        Pointer;

                                        UICollectionViewLayoutAttributesClass =
                                        interface(NSObjectClass)
                                        ['{1804F590-673A-450D-82DF-11901BABB1DC}']
                                        { class } function
                                        layoutAttributesForCellWithIndexPath
                                        (indexPath: NSIndexPath)
                                        : Pointer { instancetype };
                                        cdecl;
                                        { class } function
                                        layoutAttributesForSupplementaryViewOfKind
                                        (elementKind: NSString;
                                        withIndexPath: NSIndexPath)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        layoutAttributesForDecorationViewOfKind
                                        (decorationViewKind: NSString;
                                        withIndexPath: NSIndexPath)
                                        : Pointer { instancetype }; cdecl;
                                        end;
                                        UICollectionViewLayoutAttributes =
                                        interface(NSObject)
                                        ['{94BBC0E7-AE0E-479C-8707-B2BE5756D40B}']
                                        procedure setFrame(frame: CGRect);
                                        cdecl;
                                        function frame: CGRect; cdecl;
                                        procedure setCenter
                                        (center: CGPoint); cdecl;
                                        function center: CGPoint; cdecl;
                                        procedure setSize(size: CGSize); cdecl;
                                        function size: CGSize; cdecl;
                                        procedure setTransform3D
                                        (transform3D: CATransform3D); cdecl;
                                        function transform3D
                                        : CATransform3D; cdecl;
                                        procedure setBounds
                                        (bounds: CGRect); cdecl;
                                        function bounds: CGRect; cdecl;
                                        procedure setTransform
                                        (transform: CGAffineTransform); cdecl;
                                        function transform
                                        : CGAffineTransform; cdecl;
                                        procedure setAlpha
                                        (alpha: CGFloat); cdecl;
                                        function alpha: CGFloat; cdecl;
                                        procedure setZIndex
                                        (zIndex: NSInteger); cdecl;
                                        function zIndex: NSInteger; cdecl;
                                        procedure setHidden
                                        (hidden: Boolean); cdecl;
                                        function isHidden: Boolean; cdecl;
                                        procedure setIndexPath
                                        (indexPath: NSIndexPath); cdecl;
                                        function indexPath: NSIndexPath; cdecl;
                                        function representedElementCategory
                                        : UICollectionElementCategory; cdecl;
                                        function representedElementKind
                                        : NSString; cdecl;
                                        end;

                                        TUICollectionViewLayoutAttributes =
                                        class(TOCGenericImport<
                                        UICollectionViewLayoutAttributesClass,
                                        UICollectionViewLayoutAttributes>)
                                        end;
                                        PUICollectionViewLayoutAttributes =
                                        Pointer;

                                        UICollectionViewFocusUpdateContextClass =
                                        interface(UIFocusUpdateContextClass)
                                        ['{8797A538-3073-402F-9DF3-A1182C6F4442}']
                                        end;
                                        UICollectionViewFocusUpdateContext =
                                        interface(UIFocusUpdateContext)
                                        ['{E2F68DB4-F8B2-4E0F-A5E2-0B1EA139C8E0}']
                                        function previouslyFocusedIndexPath
                                        : NSIndexPath;
                                        cdecl;
                                        function nextFocusedIndexPath
                                        : NSIndexPath; cdecl;
                                        end;

                                        TUICollectionViewFocusUpdateContext =
                                        class(TOCGenericImport<
                                        UICollectionViewFocusUpdateContextClass,
                                        UICollectionViewFocusUpdateContext>)
                                        end;
                                        PUICollectionViewFocusUpdateContext =
                                        Pointer;

                                        UICollectionViewAdditions = interface
                                        (IObjectiveC)
                                        ['{163728F0-7ED8-44B6-A8D5-E744ED404C56}']
                                        function indexPathForItem
                                        (item: NSInteger; inSection: NSInteger)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function item: NSInteger; cdecl;
                                        end;

                                        UICollectionViewControllerClass =
                                        interface(UIViewControllerClass)
                                        ['{811DF511-211A-4A7D-9B57-795604D5B94A}']
                                        end;
                                        UICollectionViewController = interface
                                        (UIViewController)
                                        ['{5936D13B-5CA3-4A01-971A-2BE90FC77B3A}']
                                        function initWithCollectionViewLayout
                                        (layout: UICollectionViewLayout)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithNibName
                                        (nibNameOrNil: NSString;
                                        bundle: NSBundle)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setCollectionView
                                        (collectionView
                                        : UICollectionView); cdecl;
                                        function collectionView
                                        : UICollectionView; cdecl;
                                        procedure setClearsSelectionOnViewWillAppear
                                        (clearsSelectionOnViewWillAppear
                                        : Boolean); cdecl;
                                        function clearsSelectionOnViewWillAppear
                                        : Boolean; cdecl;
                                        procedure setUseLayoutToLayoutNavigationTransitions
                                        (useLayoutToLayoutNavigationTransitions
                                        : Boolean); cdecl;
                                        function useLayoutToLayoutNavigationTransitions
                                        : Boolean; cdecl;
                                        function collectionViewLayout
                                        : UICollectionViewLayout; cdecl;
                                        procedure setInstallsStandardGestureForInteractiveMovement
                                        (installsStandardGestureForInteractiveMovement
                                        : Boolean); cdecl;
                                        function installsStandardGestureForInteractiveMovement
                                        : Boolean; cdecl;
                                        end;

                                        TUICollectionViewController = class
                                        (TOCGenericImport<
                                        UICollectionViewControllerClass,
                                        UICollectionViewController>)
                                        end;
                                        PUICollectionViewController = Pointer;

                                        UICollectionViewUpdateItemClass =
                                        interface(NSObjectClass)
                                        ['{DBCCB3CF-37BB-427A-9E3E-30B83387BA93}']
                                        end;
                                        UICollectionViewUpdateItem = interface
                                        (NSObject)
                                        ['{C80E26EA-28E4-41AC-A4CC-572A4799BB68}']
                                        function indexPathBeforeUpdate
                                        : NSIndexPath;
                                        cdecl;
                                        function indexPathAfterUpdate
                                        : NSIndexPath; cdecl;
                                        function updateAction
                                        : UICollectionUpdateAction; cdecl;
                                        end;

                                        TUICollectionViewUpdateItem = class
                                        (TOCGenericImport<
                                        UICollectionViewUpdateItemClass,
                                        UICollectionViewUpdateItem>)
                                        end;
                                        PUICollectionViewUpdateItem = Pointer;

                                        UICollectionViewLayoutInvalidationContextClass =
                                        interface(NSObjectClass)
                                        ['{99E3E94C-E950-4A59-B5C5-23FC67449069}']
                                        end;
                                        UICollectionViewLayoutInvalidationContext =
                                        interface(NSObject)
                                        ['{1361396D-CA1E-4AA4-A943-04972C7B5EF2}']
                                        function invalidateEverything: Boolean;
                                        cdecl;
                                        function invalidateDataSourceCounts
                                        : Boolean; cdecl;
                                        procedure invalidateItemsAtIndexPaths
                                        (indexPaths: NSArray); cdecl;
                                        procedure invalidateSupplementaryElementsOfKind
                                        (elementKind: NSString;
                                        atIndexPaths: NSArray); cdecl;
                                        procedure invalidateDecorationElementsOfKind
                                        (elementKind: NSString;
                                        atIndexPaths: NSArray); cdecl;
                                        function invalidatedItemIndexPaths
                                        : NSArray; cdecl;
                                        function invalidatedSupplementaryIndexPaths
                                        : NSDictionary; cdecl;
                                        function invalidatedDecorationIndexPaths
                                        : NSDictionary; cdecl;
                                        procedure setContentOffsetAdjustment
                                        (contentOffsetAdjustment
                                        : CGPoint); cdecl;
                                        function contentOffsetAdjustment
                                        : CGPoint; cdecl;
                                        procedure setContentSizeAdjustment
                                        (contentSizeAdjustment: CGSize); cdecl;
                                        function contentSizeAdjustment
                                        : CGSize; cdecl;
                                        function previousIndexPathsForInteractivelyMovingItems
                                        : NSArray; cdecl;
                                        function targetIndexPathsForInteractivelyMovingItems
                                        : NSArray; cdecl;
                                        function interactiveMovementTarget
                                        : CGPoint; cdecl;
                                        end;

                                        TUICollectionViewLayoutInvalidationContext =
                                        class(TOCGenericImport<
                                        UICollectionViewLayoutInvalidationContextClass,
                                        UICollectionViewLayoutInvalidationContext>)
                                        end;
                                        PUICollectionViewLayoutInvalidationContext =
                                        Pointer;

                                        UICollectionViewFlowLayoutInvalidationContextClass =
                                        interface(
                                        UICollectionViewLayoutInvalidationContextClass)
                                        ['{C1C7CC82-A969-415A-8B54-BC7E410D376D}']
                                        end;
                                        UICollectionViewFlowLayoutInvalidationContext =
                                        interface(
                                        UICollectionViewLayoutInvalidationContext)
                                        ['{F193C2D9-4A89-4C45-8D78-80E8B443471B}']
                                        procedure setInvalidateFlowLayoutDelegateMetrics
                                        (invalidateFlowLayoutDelegateMetrics
                                        : Boolean);
                                        cdecl;
                                        function invalidateFlowLayoutDelegateMetrics
                                        : Boolean; cdecl;
                                        procedure setInvalidateFlowLayoutAttributes
                                        (invalidateFlowLayoutAttributes
                                        : Boolean); cdecl;
                                        function invalidateFlowLayoutAttributes
                                        : Boolean; cdecl;
                                        end;

                                        TUICollectionViewFlowLayoutInvalidationContext =
                                        class(TOCGenericImport<
                                        UICollectionViewFlowLayoutInvalidationContextClass,
                                        UICollectionViewFlowLayoutInvalidationContext>)
                                        end;
                                        PUICollectionViewFlowLayoutInvalidationContext =
                                        Pointer;

                                        UICollectionViewFlowLayoutClass =
                                        interface(UICollectionViewLayoutClass)
                                        ['{AA7A2378-6400-4809-8AAB-80BAE63E6E8D}']
                                        end;
                                        UICollectionViewFlowLayout = interface
                                        (UICollectionViewLayout)
                                        ['{54E8D9CB-95FD-4ACD-A974-0CE5824105C1}']
                                        procedure setMinimumLineSpacing
                                        (minimumLineSpacing: CGFloat);
                                        cdecl;
                                        function minimumLineSpacing
                                        : CGFloat; cdecl;
                                        procedure setMinimumInteritemSpacing
                                        (minimumInteritemSpacing
                                        : CGFloat); cdecl;
                                        function minimumInteritemSpacing
                                        : CGFloat; cdecl;
                                        procedure setItemSize
                                        (itemSize: CGSize); cdecl;
                                        function itemSize: CGSize; cdecl;
                                        procedure setEstimatedItemSize
                                        (estimatedItemSize: CGSize); cdecl;
                                        function estimatedItemSize
                                        : CGSize; cdecl;
                                        procedure setScrollDirection
                                        (scrollDirection
                                        : UICollectionViewScrollDirection);
                                        cdecl;
                                        function scrollDirection
                                        : UICollectionViewScrollDirection;
                                        cdecl;
                                        procedure setHeaderReferenceSize
                                        (headerReferenceSize: CGSize); cdecl;
                                        function headerReferenceSize
                                        : CGSize; cdecl;
                                        procedure setFooterReferenceSize
                                        (footerReferenceSize: CGSize); cdecl;
                                        function footerReferenceSize
                                        : CGSize; cdecl;
                                        procedure setSectionInset
                                        (sectionInset: UIEdgeInsets); cdecl;
                                        function sectionInset
                                        : UIEdgeInsets; cdecl;
                                        procedure setSectionHeadersPinToVisibleBounds
                                        (sectionHeadersPinToVisibleBounds
                                        : Boolean); cdecl;
                                        function sectionHeadersPinToVisibleBounds
                                        : Boolean; cdecl;
                                        procedure setSectionFootersPinToVisibleBounds
                                        (sectionFootersPinToVisibleBounds
                                        : Boolean); cdecl;
                                        function sectionFootersPinToVisibleBounds
                                        : Boolean; cdecl;
                                        end;

                                        TUICollectionViewFlowLayout = class
                                        (TOCGenericImport<
                                        UICollectionViewFlowLayoutClass,
                                        UICollectionViewFlowLayout>)
                                        end;
                                        PUICollectionViewFlowLayout = Pointer;

                                        UIDatePickerClass = interface
                                        (UIControlClass)
                                        ['{BAD7FDEA-E869-416D-908F-9CE739A31770}']
                                        end;
                                        UIDatePicker = interface(UIControl)
                                        ['{92736F4E-A3B3-422A-A53A-33542EA3548D}']
                                        procedure setDatePickerMode
                                        (datePickerMode: UIDatePickerMode);
                                        cdecl;
                                        function datePickerMode
                                        : UIDatePickerMode; cdecl;
                                        procedure setLocale
                                        (locale: NSLocale); cdecl;
                                        function locale: NSLocale; cdecl;
                                        procedure setCalendar
                                        (calendar: NSCalendar); cdecl;
                                        function calendar: NSCalendar; cdecl;
                                        procedure setTimeZone
                                        (timeZone: NSTimeZone); cdecl;
                                        function timeZone: NSTimeZone; cdecl;
                                        [MethodName('setDate:')]
                                        procedure setDate(date: NSDate); cdecl;
                                        function date: NSDate; cdecl;
                                        procedure setMinimumDate
                                        (minimumDate: NSDate); cdecl;
                                        function minimumDate: NSDate; cdecl;
                                        procedure setMaximumDate
                                        (maximumDate: NSDate); cdecl;
                                        function maximumDate: NSDate; cdecl;
                                        procedure setCountDownDuration
                                        (countDownDuration
                                        : NSTimeInterval); cdecl;
                                        function countDownDuration
                                        : NSTimeInterval; cdecl;
                                        procedure setMinuteInterval
                                        (minuteInterval: NSInteger); cdecl;
                                        function minuteInterval
                                        : NSInteger; cdecl;
                                        [MethodName('setDate:animated:')]
                                        procedure setDateAnimated(date: NSDate;
                                        animated: Boolean); cdecl;
                                        end;

                                        TUIDatePicker = class
                                        (TOCGenericImport<UIDatePickerClass,
                                        UIDatePicker>)
                                        end;
                                        PUIDatePicker = Pointer;

                                        UIDocumentClass = interface
                                        (NSObjectClass)
                                        ['{E81BF9DA-7667-4686-A255-1362787236AB}']
                                        end;
                                        UIDocument = interface(NSObject)
                                        ['{E77B003E-7448-49C0-8521-A0866BCC67A9}']
                                        function initWithFileURL(url: NSURL)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function fileURL: NSURL; cdecl;
                                        function localizedName: NSString; cdecl;
                                        function fileType: NSString; cdecl;
                                        procedure setFileModificationDate
                                        (fileModificationDate: NSDate); cdecl;
                                        function fileModificationDate
                                        : NSDate; cdecl;
                                        function documentState
                                        : UIDocumentState; cdecl;
                                        procedure openWithCompletionHandler
                                        (completionHandler
                                        : TUIKitCompletion); cdecl;
                                        procedure closeWithCompletionHandler
                                        (completionHandler
                                        : TUIKitCompletion); cdecl;
                                        function loadFromContents
                                        (contents: Pointer; ofType: NSString;
                                        error: NSError): Boolean; cdecl;
                                        function contentsForType
                                        (typeName: NSString; error: NSError)
                                        : Pointer; cdecl;
                                        procedure disableEditing; cdecl;
                                        procedure enableEditing; cdecl;
                                        procedure setUndoManager
                                        (undoManager: NSUndoManager); cdecl;
                                        function undoManager
                                        : NSUndoManager; cdecl;
                                        function hasUnsavedChanges
                                        : Boolean; cdecl;
                                        procedure updateChangeCount
                                        (change: UIDocumentChangeKind); cdecl;
                                        function changeCountTokenForSaveOperation
                                        (saveOperation: UIDocumentSaveOperation)
                                        : Pointer; cdecl;
                                        procedure updateChangeCountWithToken
                                        (changeCountToken: Pointer;
                                        forSaveOperation
                                        : UIDocumentSaveOperation); cdecl;
                                        procedure saveToURL(url: NSURL;
                                        forSaveOperation
                                        : UIDocumentSaveOperation;
                                        completionHandler
                                        : TUIKitCompletion); cdecl;
                                        procedure autosaveWithCompletionHandler
                                        (completionHandler
                                        : TUIKitCompletion); cdecl;
                                        function savingFileType
                                        : NSString; cdecl;
                                        function fileNameExtensionForType
                                        (typeName: NSString;
                                        saveOperation: UIDocumentSaveOperation)
                                        : NSString; cdecl;
                                        [MethodName
                                        ('writeContents:andAttributes:safelyToURL:forSaveOperation:error:')
                                        ]
                                        function writeContentsAndAttributesSafelyToURLForSaveOperationError
                                        (contents: Pointer;
                                        andAttributes: NSDictionary;
                                        safelyToURL: NSURL;
                                        forSaveOperation
                                        : UIDocumentSaveOperation;
                                        error: NSError): Boolean; cdecl;
                                        [MethodName
                                        ('writeContents:toURL:forSaveOperation:originalContentsURL:error:')
                                        ]
                                        function writeContentsToURLForSaveOperationOriginalContentsURLError
                                        (contents: Pointer; toURL: NSURL;
                                        forSaveOperation
                                        : UIDocumentSaveOperation;
                                        originalContentsURL: NSURL;
                                        error: NSError): Boolean; cdecl;
                                        function fileAttributesToWriteToURL
                                        (url: NSURL;
                                        forSaveOperation
                                        : UIDocumentSaveOperation;
                                        error: NSError): NSDictionary; cdecl;
                                        function readFromURL(url: NSURL;
                                        error: NSError): Boolean; cdecl;
                                        procedure performAsynchronousFileAccessUsingBlock
                                        (block: TUIKitAction); cdecl;
                                        procedure handleError(error: NSError;
                                        userInteractionPermitted
                                        : Boolean); cdecl;
                                        procedure finishedHandlingError
                                        (error: NSError;
                                        recovered: Boolean); cdecl;
                                        procedure userInteractionNoLongerPermittedForError
                                        (error: NSError); cdecl;
                                        procedure revertToContentsOfURL
                                        (url: NSURL;
                                        completionHandler
                                        : TUIKitCompletion); cdecl;
                                        procedure setUserActivity
                                        (userActivity: NSUserActivity); cdecl;
                                        function userActivity
                                        : NSUserActivity; cdecl;
                                        procedure updateUserActivityState
                                        (userActivity: NSUserActivity); cdecl;
                                        procedure restoreUserActivityState
                                        (userActivity: NSUserActivity); cdecl;
                                        end;

                                        TUIDocument = class
                                        (TOCGenericImport<UIDocumentClass,
                                        UIDocument>)
                                        end;
                                        PUIDocument = Pointer;

                                        UIDocumentInteractionControllerClass =
                                        interface(NSObjectClass)
                                        ['{60C7D4EB-277D-46DC-A5D7-1716C38641BD}']
                                        { class } function
                                        interactionControllerWithURL(url: NSURL)
                                        : UIDocumentInteractionController;
                                        cdecl;
                                        end;
                                        UIDocumentInteractionController =
                                        interface(NSObject)
                                        ['{98CE7264-38CE-4725-BE12-F7BBD58AC687}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setURL(url: NSURL); cdecl;
                                        function url: NSURL; cdecl;
                                        procedure setUTI(UTI: NSString); cdecl;
                                        function UTI: NSString; cdecl;
                                        procedure setName
                                        (name: NSString); cdecl;
                                        function name: NSString; cdecl;
                                        function icons: NSArray; cdecl;
                                        procedure setAnnotation
                                        (annotation: Pointer); cdecl;
                                        function annotation: Pointer; cdecl;
                                        function presentOptionsMenuFromRect
                                        (rect: CGRect; inView: UIView;
                                        animated: Boolean): Boolean; cdecl;
                                        function presentOptionsMenuFromBarButtonItem
                                        (item: UIBarButtonItem;
                                        animated: Boolean): Boolean; cdecl;
                                        function presentPreviewAnimated
                                        (animated: Boolean): Boolean; cdecl;
                                        function presentOpenInMenuFromRect
                                        (rect: CGRect; inView: UIView;
                                        animated: Boolean): Boolean; cdecl;
                                        function presentOpenInMenuFromBarButtonItem
                                        (item: UIBarButtonItem;
                                        animated: Boolean): Boolean; cdecl;
                                        procedure dismissPreviewAnimated
                                        (animated: Boolean); cdecl;
                                        procedure dismissMenuAnimated
                                        (animated: Boolean); cdecl;
                                        function gestureRecognizers
                                        : NSArray; cdecl;
                                        end;

                                        TUIDocumentInteractionController = class
                                        (TOCGenericImport<
                                        UIDocumentInteractionControllerClass,
                                        UIDocumentInteractionController>)
                                        end;
                                        PUIDocumentInteractionController =
                                        Pointer;

                                        UIDocumentPickerViewControllerClass =
                                        interface(UIViewControllerClass)
                                        ['{62E4D365-C809-421A-93E8-9A5E2598B50C}']
                                        end;
                                        UIDocumentPickerViewController =
                                        interface(UIViewController)
                                        ['{39690FC6-6738-479D-8A14-142F19ED16F4}']
                                        function initWithDocumentTypes
                                        (allowedUTIs: NSArray;
                                        inMode: UIDocumentPickerMode)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithURL(url: NSURL;
                                        inMode: UIDocumentPickerMode)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        function documentPickerMode
                                        : UIDocumentPickerMode; cdecl;
                                        end;

                                        TUIDocumentPickerViewController = class
                                        (TOCGenericImport<
                                        UIDocumentPickerViewControllerClass,
                                        UIDocumentPickerViewController>)
                                        end;
                                        PUIDocumentPickerViewController =
                                        Pointer;

                                        UIDocumentMenuViewControllerClass =
                                        interface(UIViewControllerClass)
                                        ['{4844E55F-5FA5-40B9-96A3-288D86A7E5CF}']
                                        end;
                                        UIDocumentMenuViewController = interface
                                        (UIViewController)
                                        ['{F75FBA1C-3F17-44D9-A6DF-B7F89E9B05DB}']
                                        function initWithDocumentTypes
                                        (allowedUTIs: NSArray;
                                        inMode: UIDocumentPickerMode)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithURL(url: NSURL;
                                        inMode: UIDocumentPickerMode)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure addOptionWithTitle
                                        (title: NSString; image: UIImage;
                                        order: UIDocumentMenuOrder;
                                        handler: TUIKitAction); cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        end;

                                        TUIDocumentMenuViewController = class
                                        (TOCGenericImport<
                                        UIDocumentMenuViewControllerClass,
                                        UIDocumentMenuViewController>)
                                        end;
                                        PUIDocumentMenuViewController = Pointer;

                                        UIDocumentPickerExtensionViewControllerClass =
                                        interface(UIViewControllerClass)
                                        ['{8E3869D3-4C3B-4EBB-8077-8E9354A1EA94}']
                                        end;
                                        UIDocumentPickerExtensionViewController =
                                        interface(UIViewController)
                                        ['{5AE9B233-B97E-4543-BF92-FB17F4D87CF2}']
                                        procedure dismissGrantingAccessToURL
                                        (url: NSURL);
                                        cdecl;
                                        procedure prepareForPresentationInMode
                                        (mode: UIDocumentPickerMode); cdecl;
                                        function documentPickerMode
                                        : UIDocumentPickerMode; cdecl;
                                        function originalURL: NSURL; cdecl;
                                        function validTypes: NSArray; cdecl;
                                        function providerIdentifier
                                        : NSString; cdecl;
                                        function documentStorageURL
                                        : NSURL; cdecl;
                                        end;

                                        TUIDocumentPickerExtensionViewController =
                                        class(TOCGenericImport<
                                        UIDocumentPickerExtensionViewControllerClass,
                                        UIDocumentPickerExtensionViewController>)
                                        end;
                                        PUIDocumentPickerExtensionViewController =
                                        Pointer;

                                        UIBlurEffectClass = interface
                                        (UIVisualEffectClass)
                                        ['{452972C2-30B0-4741-A21C-EAD3DF89FEE3}']
                                        { class } function effectWithStyle
                                        (style: UIBlurEffectStyle)
                                        : UIBlurEffect;
                                        cdecl;
                                        end;
                                        UIBlurEffect = interface(UIVisualEffect)
                                        ['{0D548507-A2CE-44E6-AE4B-2E6DC75C2684}']
                                        end;

                                        TUIBlurEffect = class
                                        (TOCGenericImport<UIBlurEffectClass,
                                        UIBlurEffect>)
                                        end;
                                        PUIBlurEffect = Pointer;

                                        UIVibrancyEffectClass = interface
                                        (UIVisualEffectClass)
                                        ['{CDAE54A3-81B4-4A45-AD0C-5EFD2A52419E}']
                                        { class } function effectForBlurEffect
                                        (blurEffect: UIBlurEffect)
                                        : UIVibrancyEffect;
                                        cdecl;
                                        end;
                                        UIVibrancyEffect = interface
                                        (UIVisualEffect)
                                        ['{6B20EFDA-F8D8-476A-84AB-2762DB8CBEBE}']
                                        end;

                                        TUIVibrancyEffect = class
                                        (TOCGenericImport<UIVibrancyEffectClass,
                                        UIVibrancyEffect>)
                                        end;
                                        PUIVibrancyEffect = Pointer;

                                        UIVisualEffectViewClass = interface
                                        (UIViewClass)
                                        ['{5C4BCE35-73CA-45BB-B76F-D0AB51679D4C}']
                                        end;
                                        UIVisualEffectView = interface(UIView)
                                        ['{1A518FFC-DBB5-4313-93D9-D700C715CA82}']
                                        function contentView: UIView;
                                        cdecl;
                                        procedure setEffect
                                        (effect: UIVisualEffect); cdecl;
                                        function effect: UIVisualEffect; cdecl;
                                        function initWithEffect
                                        (effect: UIVisualEffect)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        end;

                                        TUIVisualEffectView = class
                                        (TOCGenericImport<
                                        UIVisualEffectViewClass,
                                        UIVisualEffectView>)
                                        end;
                                        PUIVisualEffectView = Pointer;

                                        UITapGestureRecognizerClass = interface
                                        (UIGestureRecognizerClass)
                                        ['{949F92E8-82E4-43CD-A708-3641965C46A3}']
                                        end;
                                        UITapGestureRecognizer = interface
                                        (UIGestureRecognizer)
                                        ['{B6540B0F-2246-4A5D-8617-EE083318D94C}']
                                        procedure setNumberOfTapsRequired
                                        (numberOfTapsRequired: NSUInteger);
                                        cdecl;
                                        function numberOfTapsRequired
                                        : NSUInteger; cdecl;
                                        procedure setNumberOfTouchesRequired
                                        (numberOfTouchesRequired
                                        : NSUInteger); cdecl;
                                        function numberOfTouchesRequired
                                        : NSUInteger; cdecl;
                                        end;

                                        TUITapGestureRecognizer = class
                                        (TOCGenericImport<
                                        UITapGestureRecognizerClass,
                                        UITapGestureRecognizer>)
                                        end;
                                        PUITapGestureRecognizer = Pointer;

                                        UINavigationBarClass = interface
                                        (UIViewClass)
                                        ['{37BD7633-3956-406D-983C-B599DDD782F6}']
                                        end;
                                        UINavigationBar = interface(UIView)
                                        ['{9A4FFE6D-5A50-44AA-B1C2-48357AFDEBC7}']
                                        procedure setBarStyle
                                        (barStyle: UIBarStyle);
                                        cdecl;
                                        function barStyle: UIBarStyle; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setTranslucent
                                        (translucent: Boolean); cdecl;
                                        function isTranslucent: Boolean; cdecl;
                                        procedure pushNavigationItem
                                        (item: UINavigationItem;
                                        animated: Boolean); cdecl;
                                        function popNavigationItemAnimated
                                        (animated: Boolean)
                                        : UINavigationItem; cdecl;
                                        function topItem
                                        : UINavigationItem; cdecl;
                                        function backItem
                                        : UINavigationItem; cdecl;
                                        [MethodName('setItems:')]
                                        procedure setItems
                                        (items: NSArray); cdecl;
                                        function items: NSArray; cdecl;
                                        [MethodName('setItems:animated:')]
                                        procedure setItemsAnimated
                                        (items: NSArray;
                                        animated: Boolean); cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setBarTintColor
                                        (barTintColor: UIColor); cdecl;
                                        function barTintColor: UIColor; cdecl;
                                        [MethodName
                                        ('setBackgroundImage:forBarPosition:barMetrics:')
                                        ]
                                        procedure setBackgroundImageForBarPositionBarMetrics
                                        (backgroundImage: UIImage;
                                        forBarPosition: UIBarPosition;
                                        barMetrics: UIBarMetrics); cdecl;
                                        function backgroundImageForBarPosition
                                        (barPosition: UIBarPosition;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        [MethodName
                                        ('setBackgroundImage:forBarMetrics:')]
                                        procedure setBackgroundImageForBarMetrics
                                        (backgroundImage: UIImage;
                                        forBarMetrics: UIBarMetrics); cdecl;
                                        function backgroundImageForBarMetrics
                                        (barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        procedure setShadowImage
                                        (shadowImage: UIImage); cdecl;
                                        function shadowImage: UIImage; cdecl;
                                        procedure setTitleTextAttributes
                                        (titleTextAttributes
                                        : NSDictionary); cdecl;
                                        function titleTextAttributes
                                        : NSDictionary; cdecl;
                                        procedure setTitleVerticalPositionAdjustment
                                        (adjustment: CGFloat;
                                        forBarMetrics: UIBarMetrics); cdecl;
                                        function titleVerticalPositionAdjustmentForBarMetrics
                                        (barMetrics: UIBarMetrics)
                                        : CGFloat; cdecl;
                                        procedure setBackIndicatorImage
                                        (backIndicatorImage: UIImage); cdecl;
                                        function backIndicatorImage
                                        : UIImage; cdecl;
                                        procedure setBackIndicatorTransitionMaskImage
                                        (backIndicatorTransitionMaskImage
                                        : UIImage); cdecl;
                                        function backIndicatorTransitionMaskImage
                                        : UIImage; cdecl;
                                        end;

                                        TUINavigationBar = class
                                        (TOCGenericImport<UINavigationBarClass,
                                        UINavigationBar>)
                                        end;
                                        PUINavigationBar = Pointer;

                                        UINavigationControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{B5A72A80-5CD7-420E-9CF9-A3F362314783}']
                                        end;
                                        UINavigationController = interface
                                        (UIViewController)
                                        ['{B9481FD8-2E43-4505-B00D-E4047085E9B3}']
                                        function initWithNavigationBarClass
                                        (navigationBarClass: Pointer;
                                        toolbarClass: Pointer)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithRootViewController
                                        (rootViewController: UIViewController)
                                        : Pointer { instancetype }; cdecl;
                                        procedure pushViewController
                                        (viewController: UIViewController;
                                        animated: Boolean); cdecl;
                                        function popViewControllerAnimated
                                        (animated: Boolean)
                                        : UIViewController; cdecl;
                                        function popToViewController
                                        (viewController: UIViewController;
                                        animated: Boolean): NSArray; cdecl;
                                        function popToRootViewControllerAnimated
                                        (animated: Boolean): NSArray; cdecl;
                                        function topViewController
                                        : UIViewController; cdecl;
                                        function visibleViewController
                                        : UIViewController; cdecl;
                                        [MethodName('setViewControllers:')]
                                        procedure setViewControllers
                                        (viewControllers: NSArray); cdecl;
                                        function viewControllers
                                        : NSArray; cdecl;
                                        [MethodName
                                        ('setViewControllers:animated:')]
                                        procedure setViewControllersAnimated
                                        (viewControllers: NSArray;
                                        animated: Boolean); cdecl;
                                        [MethodName('setNavigationBarHidden:')]
                                        procedure setNavigationBarHidden
                                        (navigationBarHidden: Boolean); cdecl;
                                        function isNavigationBarHidden
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('setNavigationBarHidden:animated:')]
                                        procedure setNavigationBarHiddenAnimated
                                        (hidden: Boolean;
                                        animated: Boolean); cdecl;
                                        function navigationBar
                                        : UINavigationBar; cdecl;
                                        [MethodName('setToolbarHidden:')]
                                        procedure setToolbarHidden
                                        (toolbarHidden: Boolean); cdecl;
                                        function isToolbarHidden
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('setToolbarHidden:animated:')]
                                        procedure setToolbarHiddenAnimated
                                        (hidden: Boolean;
                                        animated: Boolean); cdecl;
                                        function toolbar: UIToolbar; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        function interactivePopGestureRecognizer
                                        : UIGestureRecognizer; cdecl;
                                        procedure showViewController
                                        (vc: UIViewController;
                                        sender: Pointer); cdecl;
                                        procedure setHidesBarsWhenKeyboardAppears
                                        (hidesBarsWhenKeyboardAppears
                                        : Boolean); cdecl;
                                        function hidesBarsWhenKeyboardAppears
                                        : Boolean; cdecl;
                                        procedure setHidesBarsOnSwipe
                                        (hidesBarsOnSwipe: Boolean); cdecl;
                                        function hidesBarsOnSwipe
                                        : Boolean; cdecl;
                                        function barHideOnSwipeGestureRecognizer
                                        : UIPanGestureRecognizer; cdecl;
                                        procedure setHidesBarsWhenVerticallyCompact
                                        (hidesBarsWhenVerticallyCompact
                                        : Boolean); cdecl;
                                        function hidesBarsWhenVerticallyCompact
                                        : Boolean; cdecl;
                                        procedure setHidesBarsOnTap
                                        (hidesBarsOnTap: Boolean); cdecl;
                                        function hidesBarsOnTap: Boolean; cdecl;
                                        function barHideOnTapGestureRecognizer
                                        : UITapGestureRecognizer; cdecl;
                                        end;

                                        TUINavigationController = class
                                        (TOCGenericImport<
                                        UINavigationControllerClass,
                                        UINavigationController>)
                                        end;
                                        PUINavigationController = Pointer;

                                        UIImagePickerControllerClass = interface
                                        (UINavigationControllerClass)
                                        ['{DE8D36A8-D849-4EA0-90DF-56B8B19EDD0D}']
                                        { class } function isSourceTypeAvailable
                                        (sourceType
                                        : UIImagePickerControllerSourceType)
                                        : Boolean;
                                        cdecl;
                                        { class } function
                                        availableMediaTypesForSourceType
                                        (sourceType
                                        : UIImagePickerControllerSourceType)
                                        : NSArray; cdecl;
                                        { class } function
                                        isCameraDeviceAvailable
                                        (cameraDevice
                                        : UIImagePickerControllerCameraDevice)
                                        : Boolean; cdecl;
                                        { class } function
                                        isFlashAvailableForCameraDevice
                                        (cameraDevice
                                        : UIImagePickerControllerCameraDevice)
                                        : Boolean; cdecl;
                                        { class } function
                                        availableCaptureModesForCameraDevice
                                        (cameraDevice
                                        : UIImagePickerControllerCameraDevice)
                                        : NSArray; cdecl;
                                        end;
                                        UIImagePickerController = interface
                                        (UINavigationController)
                                        ['{04ECEDA5-6937-442A-BEEF-5BCE8FFA274A}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setSourceType
                                        (sourceType
                                        : UIImagePickerControllerSourceType);
                                        cdecl;
                                        function sourceType
                                        : UIImagePickerControllerSourceType;
                                        cdecl;
                                        procedure setMediaTypes
                                        (mediaTypes: NSArray); cdecl;
                                        function mediaTypes: NSArray; cdecl;
                                        procedure setAllowsEditing
                                        (allowsEditing: Boolean); cdecl;
                                        function allowsEditing: Boolean; cdecl;
                                        procedure setAllowsImageEditing
                                        (allowsImageEditing: Boolean); cdecl;
                                        function allowsImageEditing
                                        : Boolean; cdecl;
                                        procedure setVideoMaximumDuration
                                        (videoMaximumDuration
                                        : NSTimeInterval); cdecl;
                                        function videoMaximumDuration
                                        : NSTimeInterval; cdecl;
                                        procedure setVideoQuality
                                        (videoQuality
                                        : UIImagePickerControllerQualityType);
                                        cdecl;
                                        function videoQuality
                                        : UIImagePickerControllerQualityType;
                                        cdecl;
                                        procedure setShowsCameraControls
                                        (showsCameraControls: Boolean); cdecl;
                                        function showsCameraControls
                                        : Boolean; cdecl;
                                        procedure setCameraOverlayView
                                        (cameraOverlayView: UIView); cdecl;
                                        function cameraOverlayView
                                        : UIView; cdecl;
                                        procedure setCameraViewTransform
                                        (cameraViewTransform
                                        : CGAffineTransform); cdecl;
                                        function cameraViewTransform
                                        : CGAffineTransform; cdecl;
                                        procedure takePicture; cdecl;
                                        function startVideoCapture
                                        : Boolean; cdecl;
                                        procedure stopVideoCapture; cdecl;
                                        procedure setCameraCaptureMode
                                        (cameraCaptureMode
                                        : UIImagePickerControllerCameraCaptureMode);
                                        cdecl;
                                        function cameraCaptureMode
                                        : UIImagePickerControllerCameraCaptureMode;
                                        cdecl;
                                        procedure setCameraDevice
                                        (cameraDevice
                                        : UIImagePickerControllerCameraDevice);
                                        cdecl;
                                        function cameraDevice
                                        : UIImagePickerControllerCameraDevice;
                                        cdecl;
                                        procedure setCameraFlashMode
                                        (cameraFlashMode
                                        : UIImagePickerControllerCameraFlashMode);
                                        cdecl;
                                        function cameraFlashMode
                                        : UIImagePickerControllerCameraFlashMode;
                                        cdecl;
                                        end;

                                        TUIImagePickerController = class
                                        (TOCGenericImport<
                                        UIImagePickerControllerClass,
                                        UIImagePickerController>)
                                        end;
                                        PUIImagePickerController = Pointer;

                                        UIInputViewClass = interface
                                        (UIViewClass)
                                        ['{D1669289-6E83-4094-9E13-D3D2BEDCCC1D}']
                                        end;
                                        UIInputView = interface(UIView)
                                        ['{648A014A-585B-40BA-85AF-550AC6BC1798}']
                                        function inputViewStyle
                                        : UIInputViewStyle;
                                        cdecl;
                                        procedure setAllowsSelfSizing
                                        (allowsSelfSizing: Boolean); cdecl;
                                        function allowsSelfSizing
                                        : Boolean; cdecl;
                                        function initWithFrame(frame: CGRect;
                                        inputViewStyle: UIInputViewStyle)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        end;

                                        TUIInputView = class
                                        (TOCGenericImport<UIInputViewClass,
                                        UIInputView>)
                                        end;
                                        PUIInputView = Pointer;

                                        UILexiconClass = interface
                                        (NSObjectClass)
                                        ['{425BF1CA-0EF6-4C31-94AD-E7CC7EB30A2B}']
                                        end;
                                        UILexicon = interface(NSObject)
                                        ['{51AB04DC-4D4B-4DF4-9CCF-5B47CC227D00}']
                                        function entries: NSArray;
                                        cdecl;
                                        end;

                                        TUILexicon = class
                                        (TOCGenericImport<UILexiconClass,
                                        UILexicon>)
                                        end;
                                        PUILexicon = Pointer;

                                        UILexiconEntryClass = interface
                                        (NSObjectClass)
                                        ['{EDE87EA6-6D8E-48F6-90DF-EF5AE131D99F}']
                                        end;
                                        UILexiconEntry = interface(NSObject)
                                        ['{EC52CC18-62D3-4FC3-83CC-D1E64529DB5A}']
                                        function documentText: NSString;
                                        cdecl;
                                        function userInput: NSString; cdecl;
                                        end;

                                        TUILexiconEntry = class
                                        (TOCGenericImport<UILexiconEntryClass,
                                        UILexiconEntry>)
                                        end;
                                        PUILexiconEntry = Pointer;

                                        UIUserNotificationCategoryClass =
                                        interface(NSObjectClass)
                                        ['{806181D7-BA12-4FB8-8B4A-A10084511DB6}']
                                        end;
                                        UIUserNotificationCategory = interface
                                        (NSObject)
                                        ['{6B837083-C9CC-4F60-912C-1451ADCD7A37}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function identifier: NSString; cdecl;
                                        function actionsForContext
                                        (context: UIUserNotificationActionContext)
                                        : NSArray; cdecl;
                                        end;

                                        TUIUserNotificationCategory = class
                                        (TOCGenericImport<
                                        UIUserNotificationCategoryClass,
                                        UIUserNotificationCategory>)
                                        end;
                                        PUIUserNotificationCategory = Pointer;

                                        UIUserNotificationActionClass =
                                        interface(NSObjectClass)
                                        ['{BFF6A8C5-9F4B-4E0E-A01D-177D47A2DF67}']
                                        end;
                                        UIUserNotificationAction = interface
                                        (NSObject)
                                        ['{7D7BA697-91B9-479A-9F00-BE73B3FC6DF4}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function identifier: NSString; cdecl;
                                        function title: NSString; cdecl;
                                        function behavior
                                        : UIUserNotificationActionBehavior;
                                        cdecl;
                                        function parameters
                                        : NSDictionary; cdecl;
                                        function activationMode
                                        : UIUserNotificationActivationMode;
                                        cdecl;
                                        function isAuthenticationRequired
                                        : Boolean; cdecl;
                                        function isDestructive: Boolean; cdecl;
                                        end;

                                        TUIUserNotificationAction = class
                                        (TOCGenericImport<
                                        UIUserNotificationActionClass,
                                        UIUserNotificationAction>)
                                        end;
                                        PUIUserNotificationAction = Pointer;

                                        UIMutableUserNotificationCategoryClass =
                                        interface(
                                        UIUserNotificationCategoryClass)
                                        ['{B9720FE9-5713-4A59-939A-3638EBBE6056}']
                                        end;
                                        UIMutableUserNotificationCategory =
                                        interface(UIUserNotificationCategory)
                                        ['{1CCB5D15-CD4D-4734-80F5-B21A80E20DAB}']
                                        procedure setIdentifier
                                        (identifier: NSString);
                                        cdecl;
                                        function identifier: NSString; cdecl;
                                        procedure setActions(actions: NSArray;
                                        forContext
                                        : UIUserNotificationActionContext);
                                        cdecl;
                                        end;

                                        TUIMutableUserNotificationCategory =
                                        class(TOCGenericImport<
                                        UIMutableUserNotificationCategoryClass,
                                        UIMutableUserNotificationCategory>)
                                        end;
                                        PUIMutableUserNotificationCategory =
                                        Pointer;

                                        UIMutableUserNotificationActionClass =
                                        interface(UIUserNotificationActionClass)
                                        ['{5EB6B37A-A6B7-4625-9691-C6A88ED4ED07}']
                                        end;
                                        UIMutableUserNotificationAction =
                                        interface(UIUserNotificationAction)
                                        ['{C1E1362F-2954-413C-B1B1-4645F37B6567}']
                                        procedure setIdentifier
                                        (identifier: NSString);
                                        cdecl;
                                        function identifier: NSString; cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setBehavior
                                        (behavior:
                                        UIUserNotificationActionBehavior);
                                        cdecl;
                                        function behavior
                                        : UIUserNotificationActionBehavior;
                                        cdecl;
                                        procedure setParameters
                                        (parameters: NSDictionary); cdecl;
                                        function parameters
                                        : NSDictionary; cdecl;
                                        procedure setActivationMode
                                        (activationMode
                                        : UIUserNotificationActivationMode);
                                        cdecl;
                                        function activationMode
                                        : UIUserNotificationActivationMode;
                                        cdecl;
                                        procedure setAuthenticationRequired
                                        (authenticationRequired
                                        : Boolean); cdecl;
                                        function isAuthenticationRequired
                                        : Boolean; cdecl;
                                        procedure setDestructive
                                        (destructive: Boolean); cdecl;
                                        function isDestructive: Boolean; cdecl;
                                        end;

                                        TUIMutableUserNotificationAction = class
                                        (TOCGenericImport<
                                        UIMutableUserNotificationActionClass,
                                        UIMutableUserNotificationAction>)
                                        end;
                                        PUIMutableUserNotificationAction =
                                        Pointer;

                                        UILocalizedIndexedCollationClass =
                                        interface(NSObjectClass)
                                        ['{6628DAC3-9690-4BED-B515-1A8DA6581152}']
                                        { class } function currentCollation
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UILocalizedIndexedCollation = interface
                                        (NSObject)
                                        ['{6965BC7D-676B-407A-8B33-9FF1A2A8BDAF}']
                                        function sectionTitles: NSArray;
                                        cdecl;
                                        function sectionIndexTitles
                                        : NSArray; cdecl;
                                        function sectionForSectionIndexTitleAtIndex
                                        (indexTitleIndex: NSInteger)
                                        : NSInteger; cdecl;
                                        function sectionForObject
                                        (&object: Pointer;
                                        collationStringSelector: SEL)
                                        : NSInteger; cdecl;
                                        function sortedArrayFromArray
                                        (&array: NSArray;
                                        collationStringSelector: SEL)
                                        : NSArray; cdecl;
                                        end;

                                        TUILocalizedIndexedCollation = class
                                        (TOCGenericImport<
                                        UILocalizedIndexedCollationClass,
                                        UILocalizedIndexedCollation>)
                                        end;
                                        PUILocalizedIndexedCollation = Pointer;

                                        UIManagedDocumentClass = interface
                                        (UIDocumentClass)
                                        ['{099DD7D0-1DAF-4676-8349-DC84FAF3DF28}']
                                        { class } function persistentStoreName
                                        : NSString;
                                        cdecl;
                                        end;
                                        UIManagedDocument = interface
                                        (UIDocument)
                                        ['{5D8E16FE-34E7-42EF-ADFB-000DB78DAFEA}']
                                        function managedObjectContext
                                        : NSManagedObjectContext;
                                        cdecl;
                                        function managedObjectModel
                                        : NSManagedObjectModel; cdecl;
                                        procedure setPersistentStoreOptions
                                        (persistentStoreOptions
                                        : NSDictionary); cdecl;
                                        function persistentStoreOptions
                                        : NSDictionary; cdecl;
                                        procedure setModelConfiguration
                                        (modelConfiguration: NSString); cdecl;
                                        function modelConfiguration
                                        : NSString; cdecl;
                                        function configurePersistentStoreCoordinatorForURL
                                        (storeURL: NSURL; ofType: NSString;
                                        modelConfiguration: NSString;
                                        storeOptions: NSDictionary;
                                        error: NSError): Boolean; cdecl;
                                        function persistentStoreTypeForFileType
                                        (fileType: NSString): NSString; cdecl;
                                        function readAdditionalContentFromURL
                                        (absoluteURL: NSURL; error: NSError)
                                        : Boolean; cdecl;
                                        function additionalContentForURL
                                        (absoluteURL: NSURL; error: NSError)
                                        : Pointer; cdecl;
                                        function writeAdditionalContent
                                        (content: Pointer; toURL: NSURL;
                                        originalContentsURL: NSURL;
                                        error: NSError): Boolean; cdecl;
                                        end;

                                        TUIManagedDocument = class
                                        (TOCGenericImport<
                                        UIManagedDocumentClass,
                                        UIManagedDocument>)
                                        end;
                                        PUIManagedDocument = Pointer;

                                        UIMenuItemClass = interface
                                        (NSObjectClass)
                                        ['{3AB50ED7-24E1-475A-B741-C0C816A15121}']
                                        end;
                                        UIMenuItem = interface(NSObject)
                                        ['{B619C5EB-82FC-4D13-9BD0-3699DB941FB5}']
                                        function initWithTitle(title: NSString;
                                        action: SEL): Pointer { instancetype };
                                        cdecl;
                                        procedure setTitle
                                        (title: NSString); cdecl;
                                        function title: NSString; cdecl;
                                        procedure setAction(action: SEL); cdecl;
                                        function action: SEL; cdecl;
                                        end;

                                        TUIMenuItem = class
                                        (TOCGenericImport<UIMenuItemClass,
                                        UIMenuItem>)
                                        end;
                                        PUIMenuItem = Pointer;

                                        UIMenuControllerClass = interface
                                        (NSObjectClass)
                                        ['{264BF5EF-446C-4870-8191-F41CECCFEA29}']
                                        { class } function sharedMenuController
                                        : UIMenuController;
                                        cdecl;
                                        end;
                                        UIMenuController = interface(NSObject)
                                        ['{CC928057-70A0-4837-9C56-C8BEBD52BC46}']
                                        [MethodName('setMenuVisible:')]
                                        procedure setMenuVisible
                                        (menuVisible: Boolean);
                                        cdecl;
                                        function isMenuVisible: Boolean; cdecl;
                                        [MethodName('setMenuVisible:animated:')]
                                        procedure setMenuVisibleAnimated
                                        (menuVisible: Boolean;
                                        animated: Boolean); cdecl;
                                        procedure setTargetRect
                                        (targetRect: CGRect;
                                        inView: UIView); cdecl;
                                        procedure setArrowDirection
                                        (arrowDirection
                                        : UIMenuControllerArrowDirection);
                                        cdecl;
                                        function arrowDirection
                                        : UIMenuControllerArrowDirection; cdecl;
                                        procedure setMenuItems
                                        (menuItems: NSArray); cdecl;
                                        function menuItems: NSArray; cdecl;
                                        procedure update; cdecl;
                                        function menuFrame: CGRect; cdecl;
                                        end;

                                        TUIMenuController = class
                                        (TOCGenericImport<UIMenuControllerClass,
                                        UIMenuController>)
                                        end;
                                        PUIMenuController = Pointer;

                                        UIInterpolatingMotionEffectClass =
                                        interface(UIMotionEffectClass)
                                        ['{895BDE2E-95BD-4C9F-829C-A7D0A7A7647A}']
                                        end;
                                        UIInterpolatingMotionEffect = interface
                                        (UIMotionEffect)
                                        ['{59DE2AC4-73A2-45B7-86C4-AA7233E7CE6D}']
                                        function initWithKeyPath
                                        (keyPath: NSString;
                                        &type: UIInterpolatingMotionEffectType)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function keyPath: NSString; cdecl;
                                        function &type
                                        : UIInterpolatingMotionEffectType;
                                        cdecl;
                                        procedure setMinimumRelativeValue
                                        (minimumRelativeValue: Pointer); cdecl;
                                        function minimumRelativeValue
                                        : Pointer; cdecl;
                                        procedure setMaximumRelativeValue
                                        (maximumRelativeValue: Pointer); cdecl;
                                        function maximumRelativeValue
                                        : Pointer; cdecl;
                                        end;

                                        TUIInterpolatingMotionEffect = class
                                        (TOCGenericImport<
                                        UIInterpolatingMotionEffectClass,
                                        UIInterpolatingMotionEffect>)
                                        end;
                                        PUIInterpolatingMotionEffect = Pointer;

                                        UIMotionEffectGroupClass = interface
                                        (UIMotionEffectClass)
                                        ['{6461C501-70B9-4780-BE3C-BE143C38A97A}']
                                        end;
                                        UIMotionEffectGroup = interface
                                        (UIMotionEffect)
                                        ['{1C028E92-C98D-43A6-A1F8-1CE3F3859D38}']
                                        procedure setMotionEffects
                                        (motionEffects: NSArray);
                                        cdecl;
                                        function motionEffects: NSArray; cdecl;
                                        end;

                                        TUIMotionEffectGroup = class
                                        (TOCGenericImport<
                                        UIMotionEffectGroupClass,
                                        UIMotionEffectGroup>)
                                        end;
                                        PUIMotionEffectGroup = Pointer;

                                        UINibLoadingAdditions = interface
                                        (IObjectiveC)
                                        ['{D7BB6BA7-8792-4676-8BD4-88B79671D710}']
                                        function loadNibNamed(name: NSString;
                                        owner: Pointer; options: NSDictionary)
                                        : NSArray;
                                        cdecl;
                                        procedure awakeFromNib; cdecl;
                                        procedure prepareForInterfaceBuilder;
                                        cdecl;
                                        end;

                                        UIPageControlClass = interface
                                        (UIControlClass)
                                        ['{DA1CCFFF-61CB-4754-AEDA-129FB098BD22}']
                                        end;
                                        UIPageControl = interface(UIControl)
                                        ['{DD781D0D-3689-439A-A42A-FF82F3080C7C}']
                                        procedure setNumberOfPages
                                        (numberOfPages: NSInteger);
                                        cdecl;
                                        function numberOfPages
                                        : NSInteger; cdecl;
                                        procedure setCurrentPage
                                        (currentPage: NSInteger); cdecl;
                                        function currentPage: NSInteger; cdecl;
                                        procedure setHidesForSinglePage
                                        (hidesForSinglePage: Boolean); cdecl;
                                        function hidesForSinglePage
                                        : Boolean; cdecl;
                                        procedure setDefersCurrentPageDisplay
                                        (defersCurrentPageDisplay
                                        : Boolean); cdecl;
                                        function defersCurrentPageDisplay
                                        : Boolean; cdecl;
                                        procedure updateCurrentPageDisplay;
                                        cdecl;
                                        function sizeForNumberOfPages
                                        (pageCount: NSInteger): CGSize; cdecl;
                                        procedure setPageIndicatorTintColor
                                        (pageIndicatorTintColor
                                        : UIColor); cdecl;
                                        function pageIndicatorTintColor
                                        : UIColor; cdecl;
                                        procedure setCurrentPageIndicatorTintColor
                                        (currentPageIndicatorTintColor
                                        : UIColor); cdecl;
                                        function currentPageIndicatorTintColor
                                        : UIColor; cdecl;
                                        end;

                                        TUIPageControl = class
                                        (TOCGenericImport<UIPageControlClass,
                                        UIPageControl>)
                                        end;
                                        PUIPageControl = Pointer;

                                        UIPageViewControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{E7071373-08C8-4475-8DA7-A4FB10559174}']
                                        end;
                                        UIPageViewController = interface
                                        (UIViewController)
                                        ['{3EA468E7-AC3F-462F-9049-1006ABC08031}']
                                        function initWithTransitionStyle
                                        (style: UIPageViewControllerTransitionStyle;
                                        navigationOrientation
                                        : UIPageViewControllerNavigationOrientation;
                                        options: NSDictionary)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder(coder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setDataSource
                                        (dataSource: Pointer); cdecl;
                                        function dataSource: Pointer; cdecl;
                                        function transitionStyle
                                        : UIPageViewControllerTransitionStyle;
                                        cdecl;
                                        function navigationOrientation
                                        : UIPageViewControllerNavigationOrientation;
                                        cdecl;
                                        function spineLocation
                                        : UIPageViewControllerSpineLocation;
                                        cdecl;
                                        procedure setDoubleSided
                                        (doubleSided: Boolean); cdecl;
                                        function isDoubleSided: Boolean; cdecl;
                                        function gestureRecognizers
                                        : NSArray; cdecl;
                                        function viewControllers
                                        : NSArray; cdecl;
                                        procedure setViewControllers
                                        (viewControllers: NSArray;
                                        direction:
                                        UIPageViewControllerNavigationDirection;
                                        animated: Boolean;
                                        completion: TUIKitCompletion); cdecl;
                                        end;

                                        TUIPageViewController = class
                                        (TOCGenericImport<
                                        UIPageViewControllerClass,
                                        UIPageViewController>)
                                        end;
                                        PUIPageViewController = Pointer;

                                        UIPasteboardClass = interface
                                        (NSObjectClass)
                                        ['{6CB7ED7C-45C9-4C8E-B32E-25148BE26D5E}']
                                        { class } function generalPasteboard
                                        : UIPasteboard;
                                        cdecl;
                                        { class } function pasteboardWithName
                                        (pasteboardName: NSString;
                                        create: Boolean): UIPasteboard; cdecl;
                                        { class } function
                                        pasteboardWithUniqueName
                                        : UIPasteboard; cdecl;
                                        { class } procedure
                                        removePasteboardWithName
                                        (pasteboardName: NSString); cdecl;
                                        end;
                                        UIPasteboard = interface(NSObject)
                                        ['{E6AC4874-428F-45C2-89B0-5EE52AFCF5C3}']
                                        function name: NSString;
                                        cdecl;
                                        procedure setPersistent
                                        (persistent: Boolean); cdecl;
                                        function isPersistent: Boolean; cdecl;
                                        function changeCount: NSInteger; cdecl;
                                        function pasteboardTypes
                                        : NSArray; cdecl;
                                        [MethodName('containsPasteboardTypes:')]
                                        function containsPasteboardTypes
                                        (pasteboardTypes: NSArray)
                                        : Boolean; cdecl;
                                        [MethodName('dataForPasteboardType:')]
                                        function dataForPasteboardType
                                        (pasteboardType: NSString)
                                        : NSData; cdecl;
                                        function valueForPasteboardType
                                        (pasteboardType: NSString)
                                        : Pointer; cdecl;
                                        procedure setValue(value: Pointer;
                                        forPasteboardType: NSString); cdecl;
                                        procedure setData(data: NSData;
                                        forPasteboardType: NSString); cdecl;
                                        function numberOfItems
                                        : NSInteger; cdecl;
                                        function pasteboardTypesForItemSet
                                        (itemSet: NSIndexSet): NSArray; cdecl;
                                        [MethodName
                                        ('containsPasteboardTypes:inItemSet:')]
                                        function containsPasteboardTypesInItemSet
                                        (pasteboardTypes: NSArray;
                                        inItemSet: NSIndexSet): Boolean; cdecl;
                                        function itemSetWithPasteboardTypes
                                        (pasteboardTypes: NSArray)
                                        : NSIndexSet; cdecl;
                                        function valuesForPasteboardType
                                        (pasteboardType: NSString;
                                        inItemSet: NSIndexSet): NSArray; cdecl;
                                        [MethodName
                                        ('dataForPasteboardType:inItemSet:')]
                                        function dataForPasteboardTypeInItemSet
                                        (pasteboardType: NSString;
                                        inItemSet: NSIndexSet): NSArray; cdecl;
                                        procedure setItems
                                        (items: NSArray); cdecl;
                                        function items: NSArray; cdecl;
                                        procedure addItems
                                        (items: NSArray); cdecl;
                                        procedure setString
                                        (&string: NSString); cdecl;
                                        function &string: NSString; cdecl;
                                        procedure setStrings
                                        (strings: NSArray); cdecl;
                                        function strings: NSArray; cdecl;
                                        procedure setURL(url: NSURL); cdecl;
                                        function url: NSURL; cdecl;
                                        procedure setURLs(URLs: NSArray); cdecl;
                                        function URLs: NSArray; cdecl;
                                        procedure setImage
                                        (image: UIImage); cdecl;
                                        function image: UIImage; cdecl;
                                        procedure setImages
                                        (images: NSArray); cdecl;
                                        function images: NSArray; cdecl;
                                        procedure setColor
                                        (color: UIColor); cdecl;
                                        function color: UIColor; cdecl;
                                        procedure setColors
                                        (colors: NSArray); cdecl;
                                        function colors: NSArray; cdecl;
                                        end;

                                        TUIPasteboard = class
                                        (TOCGenericImport<UIPasteboardClass,
                                        UIPasteboard>)
                                        end;
                                        PUIPasteboard = Pointer;

                                        UIPopoverBackgroundViewClass = interface
                                        (UIViewClass)
                                        ['{C42B0AC2-8BCC-4E88-9475-645B6F4DB429}']
                                        { class } function
                                        wantsDefaultContentAppearance: Boolean;
                                        cdecl;
                                        end;
                                        UIPopoverBackgroundView = interface
                                        (UIView)['{3B852400-6780-41DA-AA7A-D24BE6F98267}']
                                        procedure setArrowOffset
                                        (arrowOffset: CGFloat);
                                        cdecl;
                                        function arrowOffset: CGFloat; cdecl;
                                        procedure setArrowDirection
                                        (arrowDirection
                                        : UIPopoverArrowDirection); cdecl;
                                        function arrowDirection
                                        : UIPopoverArrowDirection; cdecl;
                                        end;

                                        TUIPopoverBackgroundView = class
                                        (TOCGenericImport<
                                        UIPopoverBackgroundViewClass,
                                        UIPopoverBackgroundView>)
                                        end;
                                        PUIPopoverBackgroundView = Pointer;

                                        UIPrinterClass = interface
                                        (NSObjectClass)
                                        ['{9D776073-93BD-49E8-8061-A9F3840469D3}']
                                        { class } function printerWithURL
                                        (url: NSURL): UIPrinter;
                                        cdecl;
                                        end;
                                        UIPrinter = interface(NSObject)
                                        ['{35F4B141-9CC7-42F6-A03B-575BE1724E0A}']
                                        function url: NSURL;
                                        cdecl;
                                        function displayName: NSString; cdecl;
                                        function displayLocation
                                        : NSString; cdecl;
                                        function supportedJobTypes
                                        : UIPrinterJobTypes; cdecl;
                                        function makeAndModel: NSString; cdecl;
                                        function supportsColor: Boolean; cdecl;
                                        function supportsDuplex: Boolean; cdecl;
                                        procedure contactPrinter
                                        (completionHandler
                                        : TUIKitCompletion); cdecl;
                                        end;

                                        TUIPrinter = class
                                        (TOCGenericImport<UIPrinterClass,
                                        UIPrinter>)
                                        end;
                                        PUIPrinter = Pointer;

                                        UIPrinterPickerControllerClass =
                                        interface(NSObjectClass)
                                        ['{FB696680-C207-4553-A435-BBB1A3430731}']
                                        { class } function
                                        printerPickerControllerWithInitiallySelectedPrinter
                                        (printer: UIPrinter)
                                        : UIPrinterPickerController;
                                        cdecl;
                                        end;
                                        UIPrinterPickerController = interface
                                        (NSObject)
                                        ['{ED9E5F01-B52C-416F-AB42-683C17FD703A}']
                                        function selectedPrinter: UIPrinter;
                                        cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        function presentAnimated
                                        (animated: Boolean;
                                        completionHandler
                                        : UIPrinterPickerCompletionHandler)
                                        : Boolean; cdecl;
                                        function presentFromRect(rect: CGRect;
                                        inView: UIView; animated: Boolean;
                                        completionHandler
                                        : UIPrinterPickerCompletionHandler)
                                        : Boolean; cdecl;
                                        function presentFromBarButtonItem
                                        (item: UIBarButtonItem;
                                        animated: Boolean;
                                        completionHandler
                                        : UIPrinterPickerCompletionHandler)
                                        : Boolean; cdecl;
                                        procedure dismissAnimated
                                        (animated: Boolean); cdecl;
                                        end;

                                        TUIPrinterPickerController = class
                                        (TOCGenericImport<
                                        UIPrinterPickerControllerClass,
                                        UIPrinterPickerController>)
                                        end;
                                        PUIPrinterPickerController = Pointer;

                                        UIPrintPageRendererClass = interface
                                        (NSObjectClass)
                                        ['{731E8690-4220-43A1-A1C0-B04D2F9F865B}']
                                        end;
                                        UIPrintPageRenderer = interface
                                        (NSObject)
                                        ['{582032A7-69EA-49B4-95DF-F7413452BAB0}']
                                        procedure setHeaderHeight
                                        (headerHeight: CGFloat);
                                        cdecl;
                                        function headerHeight: CGFloat; cdecl;
                                        procedure setFooterHeight
                                        (footerHeight: CGFloat); cdecl;
                                        function footerHeight: CGFloat; cdecl;
                                        function paperRect: CGRect; cdecl;
                                        function printableRect: CGRect; cdecl;
                                        procedure setPrintFormatters
                                        (printFormatters: NSArray); cdecl;
                                        function printFormatters
                                        : NSArray; cdecl;
                                        function printFormattersForPageAtIndex
                                        (pageIndex: NSInteger): NSArray; cdecl;
                                        procedure addPrintFormatter
                                        (formatter: UIPrintFormatter;
                                        startingAtPageAtIndex
                                        : NSInteger); cdecl;
                                        function numberOfPages
                                        : NSInteger; cdecl;
                                        procedure prepareForDrawingPages
                                        (range: NSRange); cdecl;
                                        procedure drawPageAtIndex
                                        (pageIndex: NSInteger;
                                        inRect: CGRect); cdecl;
                                        procedure drawPrintFormatter
                                        (printFormatter: UIPrintFormatter;
                                        forPageAtIndex: NSInteger); cdecl;
                                        procedure drawHeaderForPageAtIndex
                                        (pageIndex: NSInteger;
                                        inRect: CGRect); cdecl;
                                        procedure drawContentForPageAtIndex
                                        (pageIndex: NSInteger;
                                        inRect: CGRect); cdecl;
                                        procedure drawFooterForPageAtIndex
                                        (pageIndex: NSInteger;
                                        inRect: CGRect); cdecl;
                                        end;

                                        TUIPrintPageRenderer = class
                                        (TOCGenericImport<
                                        UIPrintPageRendererClass,
                                        UIPrintPageRenderer>)
                                        end;
                                        PUIPrintPageRenderer = Pointer;

                                        UIPrintFormatterClass = interface
                                        (NSObjectClass)
                                        ['{0728FF71-4C11-4529-9BB1-61CE762EA71C}']
                                        end;
                                        UIPrintFormatter = interface(NSObject)
                                        ['{A471E782-64D2-4F89-8D8F-B75EC99061C7}']
                                        function printPageRenderer
                                        : UIPrintPageRenderer;
                                        cdecl;
                                        procedure removeFromPrintPageRenderer;
                                        cdecl;
                                        procedure setMaximumContentHeight
                                        (maximumContentHeight: CGFloat); cdecl;
                                        function maximumContentHeight
                                        : CGFloat; cdecl;
                                        procedure setMaximumContentWidth
                                        (maximumContentWidth: CGFloat); cdecl;
                                        function maximumContentWidth
                                        : CGFloat; cdecl;
                                        procedure setContentInsets
                                        (contentInsets: UIEdgeInsets); cdecl;
                                        function contentInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setPerPageContentInsets
                                        (perPageContentInsets
                                        : UIEdgeInsets); cdecl;
                                        function perPageContentInsets
                                        : UIEdgeInsets; cdecl;
                                        procedure setStartPage
                                        (startPage: NSInteger); cdecl;
                                        function startPage: NSInteger; cdecl;
                                        function pageCount: NSInteger; cdecl;
                                        function rectForPageAtIndex
                                        (pageIndex: NSInteger): CGRect; cdecl;
                                        procedure drawInRect(rect: CGRect;
                                        forPageAtIndex: NSInteger); cdecl;
                                        end;

                                        TUIPrintFormatter = class
                                        (TOCGenericImport<UIPrintFormatterClass,
                                        UIPrintFormatter>)
                                        end;
                                        PUIPrintFormatter = Pointer;

                                        UISimpleTextPrintFormatterClass =
                                        interface(UIPrintFormatterClass)
                                        ['{CBAEC656-09C2-48DD-AEA7-583FBEFEC452}']
                                        end;
                                        UISimpleTextPrintFormatter = interface
                                        (UIPrintFormatter)
                                        ['{7C568533-18EC-4439-95F3-5F4F532DD0A3}']
                                        function initWithText(text: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithAttributedText
                                        (attributedText: NSAttributedString)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setText
                                        (text: NSString); cdecl;
                                        function text: NSString; cdecl;
                                        procedure setAttributedText
                                        (attributedText
                                        : NSAttributedString); cdecl;
                                        function attributedText
                                        : NSAttributedString; cdecl;
                                        procedure setFont(font: UIFont); cdecl;
                                        function font: UIFont; cdecl;
                                        procedure setColor
                                        (color: UIColor); cdecl;
                                        function color: UIColor; cdecl;
                                        procedure setTextAlignment
                                        (textAlignment: NSTextAlignment); cdecl;
                                        function textAlignment
                                        : NSTextAlignment; cdecl;
                                        end;

                                        TUISimpleTextPrintFormatter = class
                                        (TOCGenericImport<
                                        UISimpleTextPrintFormatterClass,
                                        UISimpleTextPrintFormatter>)
                                        end;
                                        PUISimpleTextPrintFormatter = Pointer;

                                        UIMarkupTextPrintFormatterClass =
                                        interface(UIPrintFormatterClass)
                                        ['{726702B1-4015-4849-BF36-669C5AE3AAE7}']
                                        end;
                                        UIMarkupTextPrintFormatter = interface
                                        (UIPrintFormatter)
                                        ['{57A78061-3DCA-4F1F-A9BD-49091D6CABF1}']
                                        function initWithMarkupText
                                        (markupText: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setMarkupText
                                        (markupText: NSString); cdecl;
                                        function markupText: NSString; cdecl;
                                        end;

                                        TUIMarkupTextPrintFormatter = class
                                        (TOCGenericImport<
                                        UIMarkupTextPrintFormatterClass,
                                        UIMarkupTextPrintFormatter>)
                                        end;
                                        PUIMarkupTextPrintFormatter = Pointer;

                                        UIViewPrintFormatterClass = interface
                                        (UIPrintFormatterClass)
                                        ['{CB21FD9A-E06D-4A51-8049-70A3F486904C}']
                                        end;
                                        UIViewPrintFormatter = interface
                                        (UIPrintFormatter)
                                        ['{2ADF5170-19BE-44E8-9823-6BCDC9722D76}']
                                        function view: UIView;
                                        cdecl;
                                        end;

                                        TUIViewPrintFormatter = class
                                        (TOCGenericImport<
                                        UIViewPrintFormatterClass,
                                        UIViewPrintFormatter>)
                                        end;
                                        PUIViewPrintFormatter = Pointer;

                                        UIPrintInfoClass = interface
                                        (NSObjectClass)
                                        ['{502CC672-4EFC-41F6-95BD-DF77786A97E5}']
                                        { class } function printInfo
                                        : UIPrintInfo;
                                        cdecl;
                                        { class } function
                                        printInfoWithDictionary
                                        (dictionary: NSDictionary)
                                        : UIPrintInfo; cdecl;
                                        end;
                                        UIPrintInfo = interface(NSObject)
                                        ['{E3B76B75-3F0A-4C02-BE76-87611398B8D6}']
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function dictionaryRepresentation
                                        : NSDictionary; cdecl;
                                        procedure setPrinterID
                                        (printerID: NSString); cdecl;
                                        function printerID: NSString; cdecl;
                                        procedure setJobName
                                        (jobName: NSString); cdecl;
                                        function jobName: NSString; cdecl;
                                        procedure setOutputType
                                        (outputType
                                        : UIPrintInfoOutputType); cdecl;
                                        function outputType
                                        : UIPrintInfoOutputType; cdecl;
                                        procedure setOrientation
                                        (orientation
                                        : UIPrintInfoOrientation); cdecl;
                                        function orientation
                                        : UIPrintInfoOrientation; cdecl;
                                        procedure setDuplex
                                        (duplex: UIPrintInfoDuplex); cdecl;
                                        function duplex
                                        : UIPrintInfoDuplex; cdecl;
                                        end;

                                        TUIPrintInfo = class
                                        (TOCGenericImport<UIPrintInfoClass,
                                        UIPrintInfo>)
                                        end;
                                        PUIPrintInfo = Pointer;

                                        UIPrintInteractionControllerClass =
                                        interface(NSObjectClass)
                                        ['{F895DAFD-18E7-4454-9817-02640E9FD478}']
                                        { class } function isPrintingAvailable
                                        : Boolean;
                                        cdecl;
                                        { class } function printableUTIs
                                        : NSSet; cdecl;
                                        { class } function canPrintURL
                                        (url: NSURL): Boolean; cdecl;
                                        { class } function canPrintData
                                        (data: NSData): Boolean; cdecl;
                                        { class } function sharedPrintController
                                        : UIPrintInteractionController; cdecl;
                                        end;
                                        UIPrintInteractionController = interface
                                        (NSObject)
                                        ['{86AC0581-76EE-41F0-A5D7-76CE1759A9B1}']
                                        procedure setPrintInfo
                                        (printInfo: UIPrintInfo);
                                        cdecl;
                                        function printInfo: UIPrintInfo; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setShowsPageRange
                                        (showsPageRange: Boolean); cdecl;
                                        function showsPageRange: Boolean; cdecl;
                                        procedure setShowsNumberOfCopies
                                        (showsNumberOfCopies: Boolean); cdecl;
                                        function showsNumberOfCopies
                                        : Boolean; cdecl;
                                        procedure setShowsPaperSelectionForLoadedPapers
                                        (showsPaperSelectionForLoadedPapers
                                        : Boolean); cdecl;
                                        function showsPaperSelectionForLoadedPapers
                                        : Boolean; cdecl;
                                        function printPaper
                                        : UIPrintPaper; cdecl;
                                        procedure setPrintPageRenderer
                                        (printPageRenderer
                                        : UIPrintPageRenderer); cdecl;
                                        function printPageRenderer
                                        : UIPrintPageRenderer; cdecl;
                                        procedure setPrintFormatter
                                        (printFormatter
                                        : UIPrintFormatter); cdecl;
                                        function printFormatter
                                        : UIPrintFormatter; cdecl;
                                        procedure setPrintingItem
                                        (printingItem: Pointer); cdecl;
                                        function printingItem: Pointer; cdecl;
                                        procedure setPrintingItems
                                        (printingItems: NSArray); cdecl;
                                        function printingItems: NSArray; cdecl;
                                        function presentAnimated
                                        (animated: Boolean;
                                        completionHandler
                                        : UIPrintInteractionCompletionHandler)
                                        : Boolean; cdecl;
                                        function presentFromRect(rect: CGRect;
                                        inView: UIView; animated: Boolean;
                                        completionHandler
                                        : UIPrintInteractionCompletionHandler)
                                        : Boolean; cdecl;
                                        function presentFromBarButtonItem
                                        (item: UIBarButtonItem;
                                        animated: Boolean;
                                        completionHandler
                                        : UIPrintInteractionCompletionHandler)
                                        : Boolean; cdecl;
                                        function printToPrinter
                                        (printer: UIPrinter;
                                        completionHandler
                                        : UIPrintInteractionCompletionHandler)
                                        : Boolean; cdecl;
                                        procedure dismissAnimated
                                        (animated: Boolean); cdecl;
                                        end;

                                        TUIPrintInteractionController = class
                                        (TOCGenericImport<
                                        UIPrintInteractionControllerClass,
                                        UIPrintInteractionController>)
                                        end;
                                        PUIPrintInteractionController = Pointer;

                                        UIPrintPaperClass = interface
                                        (NSObjectClass)
                                        ['{0002D2A0-28EB-4883-B10C-FADB3E3AF5EF}']
                                        { class } function bestPaperForPageSize
                                        (contentSize: CGSize;
                                        withPapersFromArray: NSArray)
                                        : UIPrintPaper;
                                        cdecl;
                                        end;
                                        UIPrintPaper = interface(NSObject)
                                        ['{B1EE3039-022D-4FEB-8772-B49D9DF5C3CD}']
                                        function paperSize: CGSize;
                                        cdecl;
                                        function printableRect: CGRect; cdecl;
                                        function printRect: CGRect; cdecl;
                                        end;

                                        TUIPrintPaper = class
                                        (TOCGenericImport<UIPrintPaperClass,
                                        UIPrintPaper>)
                                        end;
                                        PUIPrintPaper = Pointer;

                                        UIProgressViewClass = interface
                                        (UIViewClass)
                                        ['{01B68480-1295-4950-B4B0-768FC6C1BAAC}']
                                        end;
                                        UIProgressView = interface(UIView)
                                        ['{C3981A3F-50D2-4D8E-9460-F92175ECB613}']
                                        function initWithFrame(frame: CGRect)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithProgressViewStyle
                                        (style: UIProgressViewStyle)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setProgressViewStyle
                                        (progressViewStyle
                                        : UIProgressViewStyle); cdecl;
                                        function progressViewStyle
                                        : UIProgressViewStyle; cdecl;
                                        [MethodName('setProgress:')]
                                        procedure setProgress
                                        (progress: Single); cdecl;
                                        function progress: Single; cdecl;
                                        procedure setProgressTintColor
                                        (progressTintColor: UIColor); cdecl;
                                        function progressTintColor
                                        : UIColor; cdecl;
                                        procedure setTrackTintColor
                                        (trackTintColor: UIColor); cdecl;
                                        function trackTintColor: UIColor; cdecl;
                                        procedure setProgressImage
                                        (progressImage: UIImage); cdecl;
                                        function progressImage: UIImage; cdecl;
                                        procedure setTrackImage
                                        (trackImage: UIImage); cdecl;
                                        function trackImage: UIImage; cdecl;
                                        [MethodName('setProgress:animated:')]
                                        procedure setProgressAnimated
                                        (progress: Single;
                                        animated: Boolean); cdecl;
                                        procedure setObservedProgress
                                        (observedProgress: NSProgress); cdecl;
                                        function observedProgress
                                        : NSProgress; cdecl;
                                        end;

                                        TUIProgressView = class
                                        (TOCGenericImport<UIProgressViewClass,
                                        UIProgressView>)
                                        end;
                                        PUIProgressView = Pointer;

                                        UIReferenceLibraryViewControllerClass =
                                        interface(UIViewControllerClass)
                                        ['{7709300B-B6C1-4200-82D6-240BE11B27FF}']
                                        { class } function
                                        dictionaryHasDefinitionForTerm
                                        (term: NSString): Boolean;
                                        cdecl;
                                        end;
                                        UIReferenceLibraryViewController =
                                        interface(UIViewController)
                                        ['{1A0C9AB9-8E49-46BA-88C4-3A13122A84B1}']
                                        function initWithTerm(term: NSString)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        end;

                                        TUIReferenceLibraryViewController =
                                        class(TOCGenericImport<
                                        UIReferenceLibraryViewControllerClass,
                                        UIReferenceLibraryViewController>)
                                        end;
                                        PUIReferenceLibraryViewController =
                                        Pointer;

                                        UIRotationGestureRecognizerClass =
                                        interface(UIGestureRecognizerClass)
                                        ['{22C75CA5-2AD9-46B1-AA23-4746A5876063}']
                                        end;
                                        UIRotationGestureRecognizer = interface
                                        (UIGestureRecognizer)
                                        ['{14011F26-0AFC-4B71-864B-ED29232B135B}']
                                        procedure setRotation
                                        (rotation: CGFloat);
                                        cdecl;
                                        function rotation: CGFloat; cdecl;
                                        function velocity: CGFloat; cdecl;
                                        end;

                                        TUIRotationGestureRecognizer = class
                                        (TOCGenericImport<
                                        UIRotationGestureRecognizerClass,
                                        UIRotationGestureRecognizer>)
                                        end;
                                        PUIRotationGestureRecognizer = Pointer;

                                        UIScreenModeClass = interface
                                        (NSObjectClass)
                                        ['{E84C6849-E82B-4203-BA5C-E9BD2D89FCAE}']
                                        end;
                                        UIScreenMode = interface(NSObject)
                                        ['{10BE19AC-B453-4761-B4EF-5778E2643170}']
                                        function size: CGSize;
                                        cdecl;
                                        function pixelAspectRatio
                                        : CGFloat; cdecl;
                                        end;

                                        TUIScreenMode = class
                                        (TOCGenericImport<UIScreenModeClass,
                                        UIScreenMode>)
                                        end;
                                        PUIScreenMode = Pointer;

                                        UIScreenClass = interface(NSObjectClass)
                                        ['{FE57B03C-0F5C-475E-8E51-FD58CC5D0F62}']
                                        { class } function screens: NSArray;
                                        cdecl;
                                        { class } function mainScreen
                                        : UIScreen; cdecl;
                                        end;
                                        UIScreen = interface(NSObject)
                                        ['{8CE78ECB-5F5F-47D5-9560-5FB13E101D4C}']
                                        function bounds: CGRect;
                                        cdecl;
                                        function scale: CGFloat; cdecl;
                                        function availableModes: NSArray; cdecl;
                                        function preferredMode
                                        : UIScreenMode; cdecl;
                                        procedure setCurrentMode
                                        (currentMode: UIScreenMode); cdecl;
                                        function currentMode
                                        : UIScreenMode; cdecl;
                                        procedure setOverscanCompensation
                                        (overscanCompensation
                                        : UIScreenOverscanCompensation); cdecl;
                                        function overscanCompensation
                                        : UIScreenOverscanCompensation; cdecl;
                                        function overscanCompensationInsets
                                        : UIEdgeInsets; cdecl;
                                        function mirroredScreen
                                        : UIScreen; cdecl;
                                        procedure setBrightness
                                        (brightness: CGFloat); cdecl;
                                        function brightness: CGFloat; cdecl;
                                        procedure setWantsSoftwareDimming
                                        (wantsSoftwareDimming: Boolean); cdecl;
                                        function wantsSoftwareDimming
                                        : Boolean; cdecl;
                                        function coordinateSpace
                                        : Pointer; cdecl;
                                        function fixedCoordinateSpace
                                        : Pointer; cdecl;
                                        function nativeBounds: CGRect; cdecl;
                                        function nativeScale: CGFloat; cdecl;
                                        function displayLinkWithTarget
                                        (target: Pointer; selector: SEL)
                                        : CADisplayLink; cdecl;
                                        function focusedView: UIView; cdecl;
                                        function supportsFocus: Boolean; cdecl;
                                        function applicationFrame
                                        : CGRect; cdecl;
                                        function snapshotViewAfterScreenUpdates
                                        (afterUpdates: Boolean): UIView; cdecl;
                                        end;

                                        TUIScreen = class
                                        (TOCGenericImport<UIScreenClass,
                                        UIScreen>)
                                        end;
                                        PUIScreen = Pointer;

                                        UIScreenEdgePanGestureRecognizerClass =
                                        interface(UIPanGestureRecognizerClass)
                                        ['{FA9B3A80-417E-46ED-BEA5-CB3BE3DD00BB}']
                                        end;
                                        UIScreenEdgePanGestureRecognizer =
                                        interface(UIPanGestureRecognizer)
                                        ['{84408D6D-78D4-4FB1-A0A1-5C287466AC50}']
                                        procedure setEdges(edges: UIRectEdge);
                                        cdecl;
                                        function edges: UIRectEdge; cdecl;
                                        end;

                                        TUIScreenEdgePanGestureRecognizer =
                                        class(TOCGenericImport<
                                        UIScreenEdgePanGestureRecognizerClass,
                                        UIScreenEdgePanGestureRecognizer>)
                                        end;
                                        PUIScreenEdgePanGestureRecognizer =
                                        Pointer;

                                        UISearchBarClass = interface
                                        (UIViewClass)
                                        ['{B5021252-0818-4CCA-8449-BA96B4F3320A}']
                                        end;
                                        UISearchBar = interface(UIView)
                                        ['{B5C2F604-8DD1-4F8C-8A9E-401A9D72B30C}']
                                        function init: Pointer { instancetype };
                                        cdecl;
                                        function initWithFrame(frame: CGRect)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setBarStyle
                                        (barStyle: UIBarStyle); cdecl;
                                        function barStyle: UIBarStyle; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setText
                                        (text: NSString); cdecl;
                                        function text: NSString; cdecl;
                                        procedure setPrompt
                                        (prompt: NSString); cdecl;
                                        function prompt: NSString; cdecl;
                                        procedure setPlaceholder
                                        (placeholder: NSString); cdecl;
                                        function placeholder: NSString; cdecl;
                                        procedure setShowsBookmarkButton
                                        (showsBookmarkButton: Boolean); cdecl;
                                        function showsBookmarkButton
                                        : Boolean; cdecl;
                                        [MethodName('setShowsCancelButton:')]
                                        procedure setShowsCancelButton
                                        (showsCancelButton: Boolean); cdecl;
                                        function showsCancelButton
                                        : Boolean; cdecl;
                                        procedure setShowsSearchResultsButton
                                        (showsSearchResultsButton
                                        : Boolean); cdecl;
                                        function showsSearchResultsButton
                                        : Boolean; cdecl;
                                        procedure setSearchResultsButtonSelected
                                        (searchResultsButtonSelected
                                        : Boolean); cdecl;
                                        function isSearchResultsButtonSelected
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('setShowsCancelButton:animated:')]
                                        procedure setShowsCancelButtonAnimated
                                        (showsCancelButton: Boolean;
                                        animated: Boolean); cdecl;
                                        function inputAssistantItem
                                        : UITextInputAssistantItem; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setBarTintColor
                                        (barTintColor: UIColor); cdecl;
                                        function barTintColor: UIColor; cdecl;
                                        procedure setSearchBarStyle
                                        (searchBarStyle
                                        : UISearchBarStyle); cdecl;
                                        function searchBarStyle
                                        : UISearchBarStyle; cdecl;
                                        procedure setTranslucent
                                        (translucent: Boolean); cdecl;
                                        function isTranslucent: Boolean; cdecl;
                                        procedure setScopeButtonTitles
                                        (scopeButtonTitles: NSArray); cdecl;
                                        function scopeButtonTitles
                                        : NSArray; cdecl;
                                        procedure setSelectedScopeButtonIndex
                                        (selectedScopeButtonIndex
                                        : NSInteger); cdecl;
                                        function selectedScopeButtonIndex
                                        : NSInteger; cdecl;
                                        procedure setShowsScopeBar
                                        (showsScopeBar: Boolean); cdecl;
                                        function showsScopeBar: Boolean; cdecl;
                                        procedure setInputAccessoryView
                                        (inputAccessoryView: UIView); cdecl;
                                        function inputAccessoryView
                                        : UIView; cdecl;
                                        [MethodName('setBackgroundImage:')]
                                        procedure setBackgroundImage
                                        (backgroundImage: UIImage); cdecl;
                                        function backgroundImage
                                        : UIImage; cdecl;
                                        procedure setScopeBarBackgroundImage
                                        (scopeBarBackgroundImage
                                        : UIImage); cdecl;
                                        function scopeBarBackgroundImage
                                        : UIImage; cdecl;
                                        [MethodName
                                        ('setBackgroundImage:forBarPosition:barMetrics:')
                                        ]
                                        procedure setBackgroundImageForBarPositionBarMetrics
                                        (backgroundImage: UIImage;
                                        forBarPosition: UIBarPosition;
                                        barMetrics: UIBarMetrics); cdecl;
                                        function backgroundImageForBarPosition
                                        (barPosition: UIBarPosition;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        procedure setSearchFieldBackgroundImage
                                        (backgroundImage: UIImage;
                                        forState: UIControlState); cdecl;
                                        function searchFieldBackgroundImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        procedure setImage(iconImage: UIImage;
                                        forSearchBarIcon: UISearchBarIcon;
                                        state: UIControlState); cdecl;
                                        function imageForSearchBarIcon
                                        (icon: UISearchBarIcon;
                                        state: UIControlState): UIImage; cdecl;
                                        procedure setScopeBarButtonBackgroundImage
                                        (backgroundImage: UIImage;
                                        forState: UIControlState); cdecl;
                                        function scopeBarButtonBackgroundImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        procedure setScopeBarButtonDividerImage
                                        (dividerImage: UIImage;
                                        forLeftSegmentState: UIControlState;
                                        rightSegmentState
                                        : UIControlState); cdecl;
                                        function scopeBarButtonDividerImageForLeftSegmentState
                                        (leftState: UIControlState;
                                        rightSegmentState: UIControlState)
                                        : UIImage; cdecl;
                                        procedure setScopeBarButtonTitleTextAttributes
                                        (attributes: NSDictionary;
                                        forState: UIControlState); cdecl;
                                        function scopeBarButtonTitleTextAttributesForState
                                        (state: UIControlState)
                                        : NSDictionary; cdecl;
                                        procedure setSearchFieldBackgroundPositionAdjustment
                                        (searchFieldBackgroundPositionAdjustment
                                        : UIOffset); cdecl;
                                        function searchFieldBackgroundPositionAdjustment
                                        : UIOffset; cdecl;
                                        procedure setSearchTextPositionAdjustment
                                        (searchTextPositionAdjustment
                                        : UIOffset); cdecl;
                                        function searchTextPositionAdjustment
                                        : UIOffset; cdecl;
                                        procedure setPositionAdjustment
                                        (adjustment: UIOffset;
                                        forSearchBarIcon
                                        : UISearchBarIcon); cdecl;
                                        function positionAdjustmentForSearchBarIcon
                                        (icon: UISearchBarIcon)
                                        : UIOffset; cdecl;
                                        end;

                                        TUISearchBar = class
                                        (TOCGenericImport<UISearchBarClass,
                                        UISearchBar>)
                                        end;
                                        PUISearchBar = Pointer;

                                        UISearchControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{AC191BCD-4C9F-49B5-9FFC-7E92054A9AC3}']
                                        end;
                                        UISearchController = interface
                                        (UIViewController)
                                        ['{9FE4FAD8-9F43-4FD5-A8AF-7451A49C480E}']
                                        function initWithSearchResultsController
                                        (searchResultsController
                                        : UIViewController)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setSearchResultsUpdater
                                        (searchResultsUpdater: Pointer); cdecl;
                                        function searchResultsUpdater
                                        : Pointer; cdecl;
                                        procedure setActive
                                        (active: Boolean); cdecl;
                                        function isActive: Boolean; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setDimsBackgroundDuringPresentation
                                        (dimsBackgroundDuringPresentation
                                        : Boolean); cdecl;
                                        function dimsBackgroundDuringPresentation
                                        : Boolean; cdecl;
                                        procedure setObscuresBackgroundDuringPresentation
                                        (obscuresBackgroundDuringPresentation
                                        : Boolean); cdecl;
                                        function obscuresBackgroundDuringPresentation
                                        : Boolean; cdecl;
                                        procedure setHidesNavigationBarDuringPresentation
                                        (hidesNavigationBarDuringPresentation
                                        : Boolean); cdecl;
                                        function hidesNavigationBarDuringPresentation
                                        : Boolean; cdecl;
                                        function searchResultsController
                                        : UIViewController; cdecl;
                                        function searchBar: UISearchBar; cdecl;
                                        end;

                                        TUISearchController = class
                                        (TOCGenericImport<
                                        UISearchControllerClass,
                                        UISearchController>)
                                        end;
                                        PUISearchController = Pointer;

                                        UISearchContainerViewControllerClass =
                                        interface(UIViewControllerClass)
                                        ['{16077F87-7164-4993-8973-5BE38F7C09AA}']
                                        end;
                                        UISearchContainerViewController =
                                        interface(UIViewController)
                                        ['{7457F790-432F-4809-BDB1-80292DFE85FA}']
                                        function searchController
                                        : UISearchController;
                                        cdecl;
                                        function initWithSearchController
                                        (searchController: UISearchController)
                                        : Pointer { instancetype }; cdecl;
                                        end;

                                        TUISearchContainerViewController = class
                                        (TOCGenericImport<
                                        UISearchContainerViewControllerClass,
                                        UISearchContainerViewController>)
                                        end;
                                        PUISearchContainerViewController =
                                        Pointer;

                                        UIPercentDrivenInteractiveTransitionClass =
                                        interface(NSObjectClass)
                                        ['{9E30466C-94CC-4856-AF29-2A32E3A1B212}']
                                        end;
                                        UIPercentDrivenInteractiveTransition =
                                        interface(NSObject)
                                        ['{2154D59C-3988-4E1B-B91B-329E9AA7A37B}']
                                        function duration: CGFloat;
                                        cdecl;
                                        function percentComplete
                                        : CGFloat; cdecl;
                                        procedure setCompletionSpeed
                                        (completionSpeed: CGFloat); cdecl;
                                        function completionSpeed
                                        : CGFloat; cdecl;
                                        procedure setCompletionCurve
                                        (completionCurve
                                        : UIViewAnimationCurve); cdecl;
                                        function completionCurve
                                        : UIViewAnimationCurve; cdecl;
                                        procedure updateInteractiveTransition
                                        (percentComplete: CGFloat); cdecl;
                                        procedure cancelInteractiveTransition;
                                        cdecl;
                                        procedure finishInteractiveTransition;
                                        cdecl;
                                        end;

                                        TUIPercentDrivenInteractiveTransition =
                                        class(TOCGenericImport<
                                        UIPercentDrivenInteractiveTransitionClass,
                                        UIPercentDrivenInteractiveTransition>)
                                        end;
                                        PUIPercentDrivenInteractiveTransition =
                                        Pointer;

                                        UISegmentedControlClass = interface
                                        (UIControlClass)
                                        ['{CB067B55-46D5-444A-ACA9-6F0945DC0C80}']
                                        end;
                                        UISegmentedControl = interface
                                        (UIControl)
                                        ['{07221497-89C9-49FC-8FE8-CF2DE96D78A3}']
                                        function initWithItems(items: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setSegmentedControlStyle
                                        (segmentedControlStyle
                                        : UISegmentedControlStyle); cdecl;
                                        function segmentedControlStyle
                                        : UISegmentedControlStyle; cdecl;
                                        procedure setMomentary
                                        (momentary: Boolean); cdecl;
                                        function isMomentary: Boolean; cdecl;
                                        function numberOfSegments
                                        : NSUInteger; cdecl;
                                        procedure setApportionsSegmentWidthsByContent
                                        (apportionsSegmentWidthsByContent
                                        : Boolean); cdecl;
                                        function apportionsSegmentWidthsByContent
                                        : Boolean; cdecl;
                                        procedure insertSegmentWithTitle
                                        (title: NSString; atIndex: NSUInteger;
                                        animated: Boolean); cdecl;
                                        procedure insertSegmentWithImage
                                        (image: UIImage; atIndex: NSUInteger;
                                        animated: Boolean); cdecl;
                                        procedure removeSegmentAtIndex
                                        (segment: NSUInteger;
                                        animated: Boolean); cdecl;
                                        procedure removeAllSegments; cdecl;
                                        procedure setTitle(title: NSString;
                                        forSegmentAtIndex: NSUInteger); cdecl;
                                        function titleForSegmentAtIndex
                                        (segment: NSUInteger): NSString; cdecl;
                                        procedure setImage(image: UIImage;
                                        forSegmentAtIndex: NSUInteger); cdecl;
                                        function imageForSegmentAtIndex
                                        (segment: NSUInteger): UIImage; cdecl;
                                        procedure setWidth(width: CGFloat;
                                        forSegmentAtIndex: NSUInteger); cdecl;
                                        function widthForSegmentAtIndex
                                        (segment: NSUInteger): CGFloat; cdecl;
                                        procedure setContentOffset
                                        (offset: CGSize;
                                        forSegmentAtIndex: NSUInteger); cdecl;
                                        function contentOffsetForSegmentAtIndex
                                        (segment: NSUInteger): CGSize; cdecl;
                                        procedure setEnabled(enabled: Boolean;
                                        forSegmentAtIndex: NSUInteger); cdecl;
                                        function isEnabledForSegmentAtIndex
                                        (segment: NSUInteger): Boolean; cdecl;
                                        procedure setSelectedSegmentIndex
                                        (selectedSegmentIndex
                                        : NSInteger); cdecl;
                                        function selectedSegmentIndex
                                        : NSInteger; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setBackgroundImage
                                        (backgroundImage: UIImage;
                                        forState: UIControlState;
                                        barMetrics: UIBarMetrics); cdecl;
                                        function backgroundImageForState
                                        (state: UIControlState;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        procedure setDividerImage
                                        (dividerImage: UIImage;
                                        forLeftSegmentState: UIControlState;
                                        rightSegmentState: UIControlState;
                                        barMetrics: UIBarMetrics); cdecl;
                                        function dividerImageForLeftSegmentState
                                        (leftState: UIControlState;
                                        rightSegmentState: UIControlState;
                                        barMetrics: UIBarMetrics)
                                        : UIImage; cdecl;
                                        procedure setTitleTextAttributes
                                        (attributes: NSDictionary;
                                        forState: UIControlState); cdecl;
                                        function titleTextAttributesForState
                                        (state: UIControlState)
                                        : NSDictionary; cdecl;
                                        procedure setContentPositionAdjustment
                                        (adjustment: UIOffset;
                                        forSegmentType
                                        : UISegmentedControlSegment;
                                        barMetrics: UIBarMetrics); cdecl;
                                        function contentPositionAdjustmentForSegmentType
                                        (leftCenterRightOrAlone
                                        : UISegmentedControlSegment;
                                        barMetrics: UIBarMetrics)
                                        : UIOffset; cdecl;
                                        end;

                                        TUISegmentedControl = class
                                        (TOCGenericImport<
                                        UISegmentedControlClass,
                                        UISegmentedControl>)
                                        end;
                                        PUISegmentedControl = Pointer;

                                        UISliderClass = interface
                                        (UIControlClass)
                                        ['{21D49F6F-7FEC-46C6-AB53-BA64384F3677}']
                                        end;
                                        UISlider = interface(UIControl)
                                        ['{02E5D309-B962-451E-967D-2367F8F21C14}']
                                        [MethodName('setValue:')]
                                        procedure setValue(value: Single);
                                        cdecl;
                                        function value: Single; cdecl;
                                        procedure setMinimumValue
                                        (minimumValue: Single); cdecl;
                                        function minimumValue: Single; cdecl;
                                        procedure setMaximumValue
                                        (maximumValue: Single); cdecl;
                                        function maximumValue: Single; cdecl;
                                        procedure setMinimumValueImage
                                        (minimumValueImage: UIImage); cdecl;
                                        function minimumValueImage
                                        : UIImage; cdecl;
                                        procedure setMaximumValueImage
                                        (maximumValueImage: UIImage); cdecl;
                                        function maximumValueImage
                                        : UIImage; cdecl;
                                        procedure setContinuous
                                        (continuous: Boolean); cdecl;
                                        function isContinuous: Boolean; cdecl;
                                        procedure setMinimumTrackTintColor
                                        (minimumTrackTintColor: UIColor); cdecl;
                                        function minimumTrackTintColor
                                        : UIColor; cdecl;
                                        procedure setMaximumTrackTintColor
                                        (maximumTrackTintColor: UIColor); cdecl;
                                        function maximumTrackTintColor
                                        : UIColor; cdecl;
                                        procedure setThumbTintColor
                                        (thumbTintColor: UIColor); cdecl;
                                        function thumbTintColor: UIColor; cdecl;
                                        [MethodName('setValue:animated:')]
                                        procedure setValueAnimated
                                        (value: Single;
                                        animated: Boolean); cdecl;
                                        procedure setThumbImage(image: UIImage;
                                        forState: UIControlState); cdecl;
                                        procedure setMinimumTrackImage
                                        (image: UIImage;
                                        forState: UIControlState); cdecl;
                                        procedure setMaximumTrackImage
                                        (image: UIImage;
                                        forState: UIControlState); cdecl;
                                        function thumbImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        function minimumTrackImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        function maximumTrackImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        function currentThumbImage
                                        : UIImage; cdecl;
                                        function currentMinimumTrackImage
                                        : UIImage; cdecl;
                                        function currentMaximumTrackImage
                                        : UIImage; cdecl;
                                        function minimumValueImageRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function maximumValueImageRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function trackRectForBounds
                                        (bounds: CGRect): CGRect; cdecl;
                                        function thumbRectForBounds
                                        (bounds: CGRect; trackRect: CGRect;
                                        value: Single): CGRect; cdecl;
                                        end;

                                        TUISlider = class
                                        (TOCGenericImport<UISliderClass,
                                        UISlider>)
                                        end;
                                        PUISlider = Pointer;

                                        UISplitViewControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{F0D1EC40-B24D-4C4C-991D-560B6F95F917}']
                                        end;
                                        UISplitViewController = interface
                                        (UIViewController)
                                        ['{DDD829AC-45EE-4338-953A-DCFD99DA1C96}']
                                        procedure setViewControllers
                                        (viewControllers: NSArray);
                                        cdecl;
                                        function viewControllers
                                        : NSArray; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setPresentsWithGesture
                                        (presentsWithGesture: Boolean); cdecl;
                                        function presentsWithGesture
                                        : Boolean; cdecl;
                                        function isCollapsed: Boolean; cdecl;
                                        procedure setPreferredDisplayMode
                                        (preferredDisplayMode
                                        : UISplitViewControllerDisplayMode);
                                        cdecl;
                                        function preferredDisplayMode
                                        : UISplitViewControllerDisplayMode;
                                        cdecl;
                                        function displayMode
                                        : UISplitViewControllerDisplayMode;
                                        cdecl;
                                        function displayModeButtonItem
                                        : UIBarButtonItem; cdecl;
                                        procedure setPreferredPrimaryColumnWidthFraction
                                        (preferredPrimaryColumnWidthFraction
                                        : CGFloat); cdecl;
                                        function preferredPrimaryColumnWidthFraction
                                        : CGFloat; cdecl;
                                        procedure setMinimumPrimaryColumnWidth
                                        (minimumPrimaryColumnWidth
                                        : CGFloat); cdecl;
                                        function minimumPrimaryColumnWidth
                                        : CGFloat; cdecl;
                                        procedure setMaximumPrimaryColumnWidth
                                        (maximumPrimaryColumnWidth
                                        : CGFloat); cdecl;
                                        function maximumPrimaryColumnWidth
                                        : CGFloat; cdecl;
                                        function primaryColumnWidth
                                        : CGFloat; cdecl;
                                        procedure showViewController
                                        (vc: UIViewController;
                                        sender: Pointer); cdecl;
                                        procedure showDetailViewController
                                        (vc: UIViewController;
                                        sender: Pointer); cdecl;
                                        end;

                                        TUISplitViewController = class
                                        (TOCGenericImport<
                                        UISplitViewControllerClass,
                                        UISplitViewController>)
                                        end;
                                        PUISplitViewController = Pointer;

                                        UIStepperClass = interface
                                        (UIControlClass)
                                        ['{F515A121-B1FB-4470-A032-1E645907D199}']
                                        end;
                                        UIStepper = interface(UIControl)
                                        ['{A5C68353-CF22-42B8-81DA-FBB169783D18}']
                                        procedure setContinuous
                                        (continuous: Boolean);
                                        cdecl;
                                        function isContinuous: Boolean; cdecl;
                                        procedure setAutorepeat
                                        (autorepeat: Boolean); cdecl;
                                        function autorepeat: Boolean; cdecl;
                                        procedure setWraps
                                        (wraps: Boolean); cdecl;
                                        function wraps: Boolean; cdecl;
                                        procedure setValue
                                        (value: Double); cdecl;
                                        function value: Double; cdecl;
                                        procedure setMinimumValue
                                        (minimumValue: Double); cdecl;
                                        function minimumValue: Double; cdecl;
                                        procedure setMaximumValue
                                        (maximumValue: Double); cdecl;
                                        function maximumValue: Double; cdecl;
                                        procedure setStepValue
                                        (stepValue: Double); cdecl;
                                        function stepValue: Double; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setBackgroundImage
                                        (image: UIImage;
                                        forState: UIControlState); cdecl;
                                        function backgroundImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        procedure setDividerImage
                                        (image: UIImage;
                                        forLeftSegmentState: UIControlState;
                                        rightSegmentState
                                        : UIControlState); cdecl;
                                        function dividerImageForLeftSegmentState
                                        (state: UIControlState;
                                        rightSegmentState: UIControlState)
                                        : UIImage; cdecl;
                                        procedure setIncrementImage
                                        (image: UIImage;
                                        forState: UIControlState); cdecl;
                                        function incrementImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        procedure setDecrementImage
                                        (image: UIImage;
                                        forState: UIControlState); cdecl;
                                        function decrementImageForState
                                        (state: UIControlState): UIImage; cdecl;
                                        end;

                                        TUIStepper = class
                                        (TOCGenericImport<UIStepperClass,
                                        UIStepper>)
                                        end;
                                        PUIStepper = Pointer;

                                        UIStoryboardPopoverSegueClass =
                                        interface(UIStoryboardSegueClass)
                                        ['{6613F71A-9413-426D-AC0D-C71B0303FD1F}']
                                        end;
                                        UIStoryboardPopoverSegue = interface
                                        (UIStoryboardSegue)
                                        ['{A269A2ED-8772-4AB7-A3AB-98DC75038467}']
                                        function popoverController
                                        : UIPopoverController;
                                        cdecl;
                                        end;

                                        TUIStoryboardPopoverSegue = class
                                        (TOCGenericImport<
                                        UIStoryboardPopoverSegueClass,
                                        UIStoryboardPopoverSegue>)
                                        end;
                                        PUIStoryboardPopoverSegue = Pointer;

                                        UISwitchClass = interface
                                        (UIControlClass)
                                        ['{ED952C90-9B2B-40F9-8776-DBEB168E1FBE}']
                                        end;
                                        UISwitch = interface(UIControl)
                                        ['{8A19CC8A-4AB2-40BA-B635-D84B32E1F6E4}']
                                        procedure setOnTintColor
                                        (onTintColor: UIColor);
                                        cdecl;
                                        function onTintColor: UIColor; cdecl;
                                        procedure setTintColor
                                        (tintColor: UIColor); cdecl;
                                        function tintColor: UIColor; cdecl;
                                        procedure setThumbTintColor
                                        (thumbTintColor: UIColor); cdecl;
                                        function thumbTintColor: UIColor; cdecl;
                                        procedure setOnImage
                                        (onImage: UIImage); cdecl;
                                        function onImage: UIImage; cdecl;
                                        procedure setOffImage
                                        (offImage: UIImage); cdecl;
                                        function offImage: UIImage; cdecl;
                                        [MethodName('setOn:')]
                                        procedure setOn(on: Boolean); cdecl;
                                        function isOn: Boolean; cdecl;
                                        function initWithFrame(frame: CGRect)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName('setOn:animated:')]
                                        procedure setOnAnimated(on: Boolean;
                                        animated: Boolean); cdecl;
                                        end;

                                        TUISwitch = class
                                        (TOCGenericImport<UISwitchClass,
                                        UISwitch>)
                                        end;
                                        PUISwitch = Pointer;

                                        UITabBarControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{29633084-744D-4287-B6BA-C0930C21FF02}']
                                        end;
                                        UITabBarController = interface
                                        (UIViewController)
                                        ['{A611164F-9484-4BC7-9C19-F8BC92C7B9A6}']
                                        [MethodName('setViewControllers:')]
                                        procedure setViewControllers
                                        (viewControllers: NSArray);
                                        cdecl;
                                        function viewControllers
                                        : NSArray; cdecl;
                                        [MethodName
                                        ('setViewControllers:animated:')]
                                        procedure setViewControllersAnimated
                                        (viewControllers: NSArray;
                                        animated: Boolean); cdecl;
                                        procedure setSelectedViewController
                                        (selectedViewController
                                        : UIViewController); cdecl;
                                        function selectedViewController
                                        : UIViewController; cdecl;
                                        procedure setSelectedIndex
                                        (selectedIndex: NSUInteger); cdecl;
                                        function selectedIndex
                                        : NSUInteger; cdecl;
                                        function moreNavigationController
                                        : UINavigationController; cdecl;
                                        procedure setCustomizableViewControllers
                                        (customizableViewControllers
                                        : NSArray); cdecl;
                                        function customizableViewControllers
                                        : NSArray; cdecl;
                                        function tabBar: UITabBar; cdecl;
                                        procedure setDelegate
                                        (delegate: Pointer); cdecl;
                                        function delegate: Pointer; cdecl;
                                        end;

                                        TUITabBarController = class
                                        (TOCGenericImport<
                                        UITabBarControllerClass,
                                        UITabBarController>)
                                        end;
                                        PUITabBarController = Pointer;

                                        UITableViewControllerClass = interface
                                        (UIViewControllerClass)
                                        ['{1912E381-4F4E-4529-A81D-37E8E2367C63}']
                                        end;
                                        UITableViewController = interface
                                        (UIViewController)
                                        ['{159694CB-4DE3-4CEB-8F5B-CEA0F609EEE3}']
                                        function initWithStyle
                                        (style: UITableViewStyle)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithNibName
                                        (nibNameOrNil: NSString;
                                        bundle: NSBundle)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        procedure setTableView
                                        (tableView: UITableView); cdecl;
                                        function tableView: UITableView; cdecl;
                                        procedure setClearsSelectionOnViewWillAppear
                                        (clearsSelectionOnViewWillAppear
                                        : Boolean); cdecl;
                                        function clearsSelectionOnViewWillAppear
                                        : Boolean; cdecl;
                                        procedure setRefreshControl
                                        (refreshControl
                                        : UIRefreshControl); cdecl;
                                        function refreshControl
                                        : UIRefreshControl; cdecl;
                                        end;

                                        TUITableViewController = class
                                        (TOCGenericImport<
                                        UITableViewControllerClass,
                                        UITableViewController>)
                                        end;
                                        PUITableViewController = Pointer;

                                        UITextCheckerClass = interface
                                        (NSObjectClass)
                                        ['{1BE43963-2248-43A4-9446-A12000504776}']
                                        { class } procedure learnWord
                                        (Word: NSString);
                                        cdecl;
                                        { class } function hasLearnedWord
                                        (Word: NSString): Boolean; cdecl;
                                        { class } procedure unlearnWord
                                        (Word: NSString); cdecl;
                                        { class } function availableLanguages
                                        : NSArray; cdecl;
                                        end;
                                        UITextChecker = interface(NSObject)
                                        ['{B57E6315-7DC2-4253-83B8-38DE8260DB6D}']
                                        function rangeOfMisspelledWordInString
                                        (stringToCheck: NSString;
                                        range: NSRange; startingAt: NSInteger;
                                        wrap: Boolean; language: NSString)
                                        : NSRange;
                                        cdecl;
                                        function guessesForWordRange
                                        (range: NSRange; inString: NSString;
                                        language: NSString): NSArray; cdecl;
                                        function completionsForPartialWordRange
                                        (range: NSRange; inString: NSString;
                                        language: NSString): NSArray; cdecl;
                                        procedure ignoreWord
                                        (wordToIgnore: NSString); cdecl;
                                        function ignoredWords: NSArray; cdecl;
                                        procedure setIgnoredWords
                                        (words: NSArray); cdecl;
                                        end;

                                        TUITextChecker = class
                                        (TOCGenericImport<UITextCheckerClass,
                                        UITextChecker>)
                                        end;
                                        PUITextChecker = Pointer;

                                        UITextViewClass = interface
                                        (UIScrollViewClass)
                                        ['{1B581B20-EE59-42FD-8CC2-ED7157FDFE48}']
                                        end;
                                        UITextView = interface(UIScrollView)
                                        ['{2DCD1AEF-3722-4E19-94B7-2AB63E27152C}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setText
                                        (text: NSString); cdecl;
                                        function text: NSString; cdecl;
                                        procedure setFont(font: UIFont); cdecl;
                                        function font: UIFont; cdecl;
                                        procedure setTextColor
                                        (textColor: UIColor); cdecl;
                                        function textColor: UIColor; cdecl;
                                        procedure setTextAlignment
                                        (textAlignment: NSTextAlignment); cdecl;
                                        function textAlignment
                                        : NSTextAlignment; cdecl;
                                        procedure setSelectedRange
                                        (selectedRange: NSRange); cdecl;
                                        function selectedRange: NSRange; cdecl;
                                        procedure setEditable
                                        (editable: Boolean); cdecl;
                                        function isEditable: Boolean; cdecl;
                                        procedure setSelectable
                                        (selectable: Boolean); cdecl;
                                        function isSelectable: Boolean; cdecl;
                                        procedure setDataDetectorTypes
                                        (dataDetectorTypes
                                        : UIDataDetectorTypes); cdecl;
                                        function dataDetectorTypes
                                        : UIDataDetectorTypes; cdecl;
                                        procedure setAllowsEditingTextAttributes
                                        (allowsEditingTextAttributes
                                        : Boolean); cdecl;
                                        function allowsEditingTextAttributes
                                        : Boolean; cdecl;
                                        procedure setAttributedText
                                        (attributedText
                                        : NSAttributedString); cdecl;
                                        function attributedText
                                        : NSAttributedString; cdecl;
                                        procedure setTypingAttributes
                                        (typingAttributes: NSDictionary); cdecl;
                                        function typingAttributes
                                        : NSDictionary; cdecl;
                                        procedure scrollRangeToVisible
                                        (range: NSRange); cdecl;
                                        procedure setInputView
                                        (inputView: UIView); cdecl;
                                        function inputView: UIView; cdecl;
                                        procedure setInputAccessoryView
                                        (inputAccessoryView: UIView); cdecl;
                                        function inputAccessoryView
                                        : UIView; cdecl;
                                        procedure setClearsOnInsertion
                                        (clearsOnInsertion: Boolean); cdecl;
                                        function clearsOnInsertion
                                        : Boolean; cdecl;
                                        function initWithFrame(frame: CGRect;
                                        textContainer: NSTextContainer)
                                        : Pointer { instancetype }; cdecl;
                                        function initWithCoder
                                        (aDecoder: NSCoder)
                                        : Pointer { instancetype }; cdecl;
                                        function textContainer
                                        : NSTextContainer; cdecl;
                                        procedure setTextContainerInset
                                        (textContainerInset
                                        : UIEdgeInsets); cdecl;
                                        function textContainerInset
                                        : UIEdgeInsets; cdecl;
                                        function layoutManager
                                        : NSLayoutManager; cdecl;
                                        function textStorage
                                        : NSTextStorage; cdecl;
                                        procedure setLinkTextAttributes
                                        (linkTextAttributes
                                        : NSDictionary); cdecl;
                                        function linkTextAttributes
                                        : NSDictionary; cdecl;
                                        end;

                                        TUITextView = class
                                        (TOCGenericImport<UITextViewClass,
                                        UITextView>)
                                        end;
                                        PUITextView = Pointer;

                                        UIVideoEditorControllerClass = interface
                                        (UINavigationControllerClass)
                                        ['{24D2899A-30A6-408D-8079-DAA6097E226C}']
                                        { class } function canEditVideoAtPath
                                        (videoPath: NSString): Boolean;
                                        cdecl;
                                        end;
                                        UIVideoEditorController = interface
                                        (UINavigationController)
                                        ['{27A259B2-1B70-44F7-AA24-9354BFDB22ED}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        procedure setVideoPath
                                        (videoPath: NSString); cdecl;
                                        function videoPath: NSString; cdecl;
                                        procedure setVideoMaximumDuration
                                        (videoMaximumDuration
                                        : NSTimeInterval); cdecl;
                                        function videoMaximumDuration
                                        : NSTimeInterval; cdecl;
                                        procedure setVideoQuality
                                        (videoQuality
                                        : UIImagePickerControllerQualityType);
                                        cdecl;
                                        function videoQuality
                                        : UIImagePickerControllerQualityType;
                                        cdecl;
                                        end;

                                        TUIVideoEditorController = class
                                        (TOCGenericImport<
                                        UIVideoEditorControllerClass,
                                        UIVideoEditorController>)
                                        end;
                                        PUIVideoEditorController = Pointer;

                                        UIWebViewClass = interface(UIViewClass)
                                        ['{CEC57460-C72A-41A7-84D4-85C4CF1654EE}']
                                        end;
                                        UIWebView = interface(UIView)
                                        ['{CF03D975-2858-42C9-806C-0D41885B1A19}']
                                        procedure setDelegate
                                        (delegate: Pointer);
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        function scrollView
                                        : UIScrollView; cdecl;
                                        procedure loadRequest
                                        (request: NSURLRequest); cdecl;
                                        procedure loadHTMLString
                                        (&string: NSString;
                                        baseURL: NSURL); cdecl;
                                        procedure loadData(data: NSData;
                                        MIMEType: NSString;
                                        textEncodingName: NSString;
                                        baseURL: NSURL); cdecl;
                                        function request: NSURLRequest; cdecl;
                                        procedure reload; cdecl;
                                        procedure stopLoading; cdecl;
                                        procedure goBack; cdecl;
                                        procedure goForward; cdecl;
                                        function canGoBack: Boolean; cdecl;
                                        function canGoForward: Boolean; cdecl;
                                        function isLoading: Boolean; cdecl;
                                        function stringByEvaluatingJavaScriptFromString
                                        (script: NSString): NSString; cdecl;
                                        procedure setScalesPageToFit
                                        (scalesPageToFit: Boolean); cdecl;
                                        function scalesPageToFit
                                        : Boolean; cdecl;
                                        procedure setDetectsPhoneNumbers
                                        (detectsPhoneNumbers: Boolean); cdecl;
                                        function detectsPhoneNumbers
                                        : Boolean; cdecl;
                                        procedure setDataDetectorTypes
                                        (dataDetectorTypes
                                        : UIDataDetectorTypes); cdecl;
                                        function dataDetectorTypes
                                        : UIDataDetectorTypes; cdecl;
                                        procedure setAllowsInlineMediaPlayback
                                        (allowsInlineMediaPlayback
                                        : Boolean); cdecl;
                                        function allowsInlineMediaPlayback
                                        : Boolean; cdecl;
                                        procedure setMediaPlaybackRequiresUserAction
                                        (mediaPlaybackRequiresUserAction
                                        : Boolean); cdecl;
                                        function mediaPlaybackRequiresUserAction
                                        : Boolean; cdecl;
                                        procedure setMediaPlaybackAllowsAirPlay
                                        (mediaPlaybackAllowsAirPlay
                                        : Boolean); cdecl;
                                        function mediaPlaybackAllowsAirPlay
                                        : Boolean; cdecl;
                                        procedure setSuppressesIncrementalRendering
                                        (suppressesIncrementalRendering
                                        : Boolean); cdecl;
                                        function suppressesIncrementalRendering
                                        : Boolean; cdecl;
                                        procedure setKeyboardDisplayRequiresUserAction
                                        (keyboardDisplayRequiresUserAction
                                        : Boolean); cdecl;
                                        function keyboardDisplayRequiresUserAction
                                        : Boolean; cdecl;
                                        procedure setPaginationMode
                                        (paginationMode
                                        : UIWebPaginationMode); cdecl;
                                        function paginationMode
                                        : UIWebPaginationMode; cdecl;
                                        procedure setPaginationBreakingMode
                                        (paginationBreakingMode
                                        : UIWebPaginationBreakingMode); cdecl;
                                        function paginationBreakingMode
                                        : UIWebPaginationBreakingMode; cdecl;
                                        procedure setPageLength
                                        (pageLength: CGFloat); cdecl;
                                        function pageLength: CGFloat; cdecl;
                                        procedure setGapBetweenPages
                                        (gapBetweenPages: CGFloat); cdecl;
                                        function gapBetweenPages
                                        : CGFloat; cdecl;
                                        function pageCount: NSUInteger; cdecl;
                                        procedure setAllowsPictureInPictureMediaPlayback
                                        (allowsPictureInPictureMediaPlayback
                                        : Boolean); cdecl;
                                        function allowsPictureInPictureMediaPlayback
                                        : Boolean; cdecl;
                                        procedure setAllowsLinkPreview
                                        (allowsLinkPreview: Boolean); cdecl;
                                        function allowsLinkPreview
                                        : Boolean; cdecl;
                                        end;

                                        TUIWebView = class
                                        (TOCGenericImport<UIWebViewClass,
                                        UIWebView>)
                                        end;
                                        PUIWebView = Pointer;

                                        UIStackViewClass = interface
                                        (UIViewClass)
                                        ['{01B39BC1-F17F-42E7-9B74-2E01460CE849}']
                                        end;
                                        UIStackView = interface(UIView)
                                        ['{840574B8-12E5-4045-9886-5FE347A69A53}']
                                        function initWithArrangedSubviews
                                        (views: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function arrangedSubviews
                                        : NSArray; cdecl;
                                        procedure addArrangedSubview
                                        (view: UIView); cdecl;
                                        procedure removeArrangedSubview
                                        (view: UIView); cdecl;
                                        procedure insertArrangedSubview
                                        (view: UIView;
                                        atIndex: NSUInteger); cdecl;
                                        procedure setAxis
                                        (axis: UILayoutConstraintAxis); cdecl;
                                        function axis
                                        : UILayoutConstraintAxis; cdecl;
                                        procedure setDistribution
                                        (distribution
                                        : UIStackViewDistribution); cdecl;
                                        function distribution
                                        : UIStackViewDistribution; cdecl;
                                        procedure setAlignment
                                        (alignment
                                        : UIStackViewAlignment); cdecl;
                                        function alignment
                                        : UIStackViewAlignment; cdecl;
                                        procedure setSpacing
                                        (spacing: CGFloat); cdecl;
                                        function spacing: CGFloat; cdecl;
                                        procedure setBaselineRelativeArrangement
                                        (baselineRelativeArrangement
                                        : Boolean); cdecl;
                                        function isBaselineRelativeArrangement
                                        : Boolean; cdecl;
                                        procedure setLayoutMarginsRelativeArrangement
                                        (layoutMarginsRelativeArrangement
                                        : Boolean); cdecl;
                                        function isLayoutMarginsRelativeArrangement
                                        : Boolean; cdecl;
                                        end;

                                        TUIStackView = class
                                        (TOCGenericImport<UIStackViewClass,
                                        UIStackView>)
                                        end;
                                        PUIStackView = Pointer;

                                        UIPushBehaviorClass = interface
                                        (UIDynamicBehaviorClass)
                                        ['{4A2E2093-A09F-4482-9B37-85F68CE289D1}']
                                        end;
                                        UIPushBehavior = interface
                                        (UIDynamicBehavior)
                                        ['{0A4E6DC1-5062-4E9A-910E-1B2F1E19FE78}']
                                        function initWithItems(items: NSArray;
                                        mode: UIPushBehaviorMode)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure addItem(item: Pointer); cdecl;
                                        procedure removeItem
                                        (item: Pointer); cdecl;
                                        function items: NSArray; cdecl;
                                        function targetOffsetFromCenterForItem
                                        (item: Pointer): UIOffset; cdecl;
                                        procedure setTargetOffsetFromCenter
                                        (o: UIOffset; forItem: Pointer); cdecl;
                                        function mode
                                        : UIPushBehaviorMode; cdecl;
                                        procedure setActive
                                        (active: Boolean); cdecl;
                                        function active: Boolean; cdecl;
                                        [MethodName('setAngle:')]
                                        procedure setAngle
                                        (angle: CGFloat); cdecl;
                                        function angle: CGFloat; cdecl;
                                        procedure setMagnitude
                                        (magnitude: CGFloat); cdecl;
                                        function magnitude: CGFloat; cdecl;
                                        procedure setPushDirection
                                        (pushDirection: CGVector); cdecl;
                                        function pushDirection: CGVector; cdecl;
                                        [MethodName('setAngle:magnitude:')]
                                        procedure setAngleMagnitude
                                        (angle: CGFloat;
                                        magnitude: CGFloat); cdecl;
                                        end;

                                        TUIPushBehavior = class
                                        (TOCGenericImport<UIPushBehaviorClass,
                                        UIPushBehavior>)
                                        end;
                                        PUIPushBehavior = Pointer;

                                        UISnapBehaviorClass = interface
                                        (UIDynamicBehaviorClass)
                                        ['{60552699-E6BE-464C-BF03-085C593044AE}']
                                        end;
                                        UISnapBehavior = interface
                                        (UIDynamicBehavior)
                                        ['{7DC2B41E-0989-42C3-B1AB-3BC35AB0D08C}']
                                        function initWithItem(item: Pointer;
                                        snapToPoint: CGPoint)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure setSnapPoint
                                        (snapPoint: CGPoint); cdecl;
                                        function snapPoint: CGPoint; cdecl;
                                        procedure setDamping
                                        (damping: CGFloat); cdecl;
                                        function damping: CGFloat; cdecl;
                                        end;

                                        TUISnapBehavior = class
                                        (TOCGenericImport<UISnapBehaviorClass,
                                        UISnapBehavior>)
                                        end;
                                        PUISnapBehavior = Pointer;

                                        UIDynamicItemBehaviorClass = interface
                                        (UIDynamicBehaviorClass)
                                        ['{63FA198F-8625-48B2-A28D-C1569110FB76}']
                                        end;
                                        UIDynamicItemBehavior = interface
                                        (UIDynamicBehavior)
                                        ['{F11A747C-65A2-4874-BCCD-7F500946FEDD}']
                                        function initWithItems(items: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure addItem(item: Pointer); cdecl;
                                        procedure removeItem
                                        (item: Pointer); cdecl;
                                        function items: NSArray; cdecl;
                                        procedure setElasticity
                                        (elasticity: CGFloat); cdecl;
                                        function elasticity: CGFloat; cdecl;
                                        procedure setFriction
                                        (friction: CGFloat); cdecl;
                                        function friction: CGFloat; cdecl;
                                        procedure setDensity
                                        (density: CGFloat); cdecl;
                                        function density: CGFloat; cdecl;
                                        procedure setResistance
                                        (resistance: CGFloat); cdecl;
                                        function resistance: CGFloat; cdecl;
                                        procedure setAngularResistance
                                        (angularResistance: CGFloat); cdecl;
                                        function angularResistance
                                        : CGFloat; cdecl;
                                        procedure setCharge
                                        (charge: CGFloat); cdecl;
                                        function charge: CGFloat; cdecl;
                                        procedure setAnchored
                                        (anchored: Boolean); cdecl;
                                        function isAnchored: Boolean; cdecl;
                                        procedure setAllowsRotation
                                        (allowsRotation: Boolean); cdecl;
                                        function allowsRotation: Boolean; cdecl;
                                        procedure addLinearVelocity
                                        (velocity: CGPoint;
                                        forItem: Pointer); cdecl;
                                        function linearVelocityForItem
                                        (item: Pointer): CGPoint; cdecl;
                                        procedure addAngularVelocity
                                        (velocity: CGFloat;
                                        forItem: Pointer); cdecl;
                                        function angularVelocityForItem
                                        (item: Pointer): CGFloat; cdecl;
                                        end;

                                        TUIDynamicItemBehavior = class
                                        (TOCGenericImport<
                                        UIDynamicItemBehaviorClass,
                                        UIDynamicItemBehavior>)
                                        end;
                                        PUIDynamicItemBehavior = Pointer;

                                        UIRegionClass = interface(NSObjectClass)
                                        ['{8B0CD343-B259-4D27-98AB-8FE134FD63F2}']
                                        { class } function infiniteRegion
                                        : Pointer { instancetype };
                                        cdecl;
                                        end;
                                        UIRegion = interface(NSObject)
                                        ['{78D1B0D0-B1A8-4A6D-BB74-B4DEF11C80C8}']
                                        function initWithRadius(radius: CGFloat)
                                        : Pointer { instancetype };
                                        cdecl;
                                        function initWithSize(size: CGSize)
                                        : Pointer { instancetype }; cdecl;
                                        function inverseRegion
                                        : Pointer { instancetype }; cdecl;
                                        function regionByUnionWithRegion
                                        (region: UIRegion)
                                        : Pointer { instancetype }; cdecl;
                                        function regionByDifferenceFromRegion
                                        (region: UIRegion)
                                        : Pointer { instancetype }; cdecl;
                                        function regionByIntersectionWithRegion
                                        (region: UIRegion)
                                        : Pointer { instancetype }; cdecl;
                                        function containsPoint(point: CGPoint)
                                        : Boolean; cdecl;
                                        end;

                                        TUIRegion = class
                                        (TOCGenericImport<UIRegionClass,
                                        UIRegion>)
                                        end;
                                        PUIRegion = Pointer;

                                        UIFieldBehaviorClass = interface
                                        (UIDynamicBehaviorClass)
                                        ['{20F1EC33-B956-4FF2-ABED-0FF41117B2C8}']
                                        { class } function dragField
                                        : Pointer { instancetype };
                                        cdecl;
                                        { class } function vortexField
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        radialGravityFieldWithPosition
                                        (position: CGPoint)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        linearGravityFieldWithVector
                                        (direction: CGVector)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        velocityFieldWithVector
                                        (direction: CGVector)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        noiseFieldWithSmoothness
                                        (smoothness: CGFloat;
                                        animationSpeed: CGFloat)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        turbulenceFieldWithSmoothness
                                        (smoothness: CGFloat;
                                        animationSpeed: CGFloat)
                                        : Pointer { instancetype }; cdecl;
                                        { class } function springField
                                        : Pointer { instancetype }; cdecl;
                                        { class } function electricField
                                        : Pointer { instancetype }; cdecl;
                                        { class } function magneticField
                                        : Pointer { instancetype }; cdecl;
                                        { class } function
                                        fieldWithEvaluationBlock
                                        (block: TUIKitBlock)
                                        : Pointer { instancetype }; cdecl;
                                        end;
                                        UIFieldBehavior = interface
                                        (UIDynamicBehavior)
                                        ['{3A16C3BF-2FD0-478E-A579-897D78B9071F}']
                                        procedure addItem(item: Pointer);
                                        cdecl;
                                        procedure removeItem
                                        (item: Pointer); cdecl;
                                        function items: NSArray; cdecl;
                                        procedure setPosition
                                        (position: CGPoint); cdecl;
                                        function position: CGPoint; cdecl;
                                        procedure setRegion
                                        (region: UIRegion); cdecl;
                                        function region: UIRegion; cdecl;
                                        procedure setStrength
                                        (strength: CGFloat); cdecl;
                                        function strength: CGFloat; cdecl;
                                        procedure setFalloff
                                        (falloff: CGFloat); cdecl;
                                        function falloff: CGFloat; cdecl;
                                        procedure setMinimumRadius
                                        (minimumRadius: CGFloat); cdecl;
                                        function minimumRadius: CGFloat; cdecl;
                                        procedure setDirection
                                        (direction: CGVector); cdecl;
                                        function direction: CGVector; cdecl;
                                        procedure setSmoothness
                                        (smoothness: CGFloat); cdecl;
                                        function smoothness: CGFloat; cdecl;
                                        procedure setAnimationSpeed
                                        (animationSpeed: CGFloat); cdecl;
                                        function animationSpeed: CGFloat; cdecl;
                                        end;

                                        TUIFieldBehavior = class
                                        (TOCGenericImport<UIFieldBehaviorClass,
                                        UIFieldBehavior>)
                                        end;
                                        PUIFieldBehavior = Pointer;

                                        UIGravityBehaviorClass = interface
                                        (UIDynamicBehaviorClass)
                                        ['{19D7D070-2616-4E42-8DAC-08CFC978A639}']
                                        end;
                                        UIGravityBehavior = interface
                                        (UIDynamicBehavior)
                                        ['{1E575614-E8EC-460E-B28B-6DF7C1F3E49B}']
                                        function initWithItems(items: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure addItem(item: Pointer); cdecl;
                                        procedure removeItem
                                        (item: Pointer); cdecl;
                                        function items: NSArray; cdecl;
                                        procedure setGravityDirection
                                        (gravityDirection: CGVector); cdecl;
                                        function gravityDirection
                                        : CGVector; cdecl;
                                        [MethodName('setAngle:')]
                                        procedure setAngle
                                        (angle: CGFloat); cdecl;
                                        function angle: CGFloat; cdecl;
                                        procedure setMagnitude
                                        (magnitude: CGFloat); cdecl;
                                        function magnitude: CGFloat; cdecl;
                                        [MethodName('setAngle:magnitude:')]
                                        procedure setAngleMagnitude
                                        (angle: CGFloat;
                                        magnitude: CGFloat); cdecl;
                                        end;

                                        TUIGravityBehavior = class
                                        (TOCGenericImport<
                                        UIGravityBehaviorClass,
                                        UIGravityBehavior>)
                                        end;
                                        PUIGravityBehavior = Pointer;

                                        UICollisionBehaviorClass = interface
                                        (UIDynamicBehaviorClass)
                                        ['{60E8AB04-4326-4EE5-BCD6-9B80247B80C3}']
                                        end;
                                        UICollisionBehavior = interface
                                        (UIDynamicBehavior)
                                        ['{FB2ED6F4-2B54-4C41-9852-CC3237ABBE27}']
                                        function initWithItems(items: NSArray)
                                        : Pointer { instancetype };
                                        cdecl;
                                        procedure addItem(item: Pointer); cdecl;
                                        procedure removeItem
                                        (item: Pointer); cdecl;
                                        function items: NSArray; cdecl;
                                        procedure setCollisionMode
                                        (collisionMode
                                        : UICollisionBehaviorMode); cdecl;
                                        function collisionMode
                                        : UICollisionBehaviorMode; cdecl;
                                        procedure setTranslatesReferenceBoundsIntoBoundary
                                        (translatesReferenceBoundsIntoBoundary
                                        : Boolean); cdecl;
                                        function translatesReferenceBoundsIntoBoundary
                                        : Boolean; cdecl;
                                        procedure setTranslatesReferenceBoundsIntoBoundaryWithInsets
                                        (insets: UIEdgeInsets); cdecl;
                                        [MethodName
                                        ('addBoundaryWithIdentifier:forPath:')]
                                        procedure addBoundaryWithIdentifierForPath
                                        (identifier: Pointer;
                                        forPath: UIBezierPath); cdecl;
                                        [MethodName
                                        ('addBoundaryWithIdentifier:fromPoint:toPoint:')
                                        ]
                                        procedure addBoundaryWithIdentifierFromPointToPoint
                                        (identifier: Pointer;
                                        fromPoint: CGPoint;
                                        toPoint: CGPoint); cdecl;
                                        function boundaryWithIdentifier
                                        (identifier: Pointer)
                                        : UIBezierPath; cdecl;
                                        procedure removeBoundaryWithIdentifier
                                        (identifier: Pointer); cdecl;
                                        function boundaryIdentifiers
                                        : NSArray; cdecl;
                                        procedure removeAllBoundaries; cdecl;
                                        procedure setCollisionDelegate
                                        (collisionDelegate: Pointer); cdecl;
                                        function collisionDelegate
                                        : Pointer; cdecl;
                                        end;

                                        TUICollisionBehavior = class
                                        (TOCGenericImport<
                                        UICollisionBehaviorClass,
                                        UICollisionBehavior>)
                                        end;
                                        PUICollisionBehavior = Pointer;

                                        // ===== Protocol declarations =====

                                        UILayoutSupport = interface(IObjectiveC)
                                        ['{8547074A-DCA8-4843-8B78-B5060F2CF14A}']
                                        function length: CGFloat;
                                        cdecl;
                                        function topAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function bottomAnchor
                                        : NSLayoutYAxisAnchor; cdecl;
                                        function heightAnchor
                                        : NSLayoutDimension; cdecl;
                                        end;

                                        NSTextStorageDelegate = interface
                                        (IObjectiveC)
                                        ['{414A5FC6-2602-43D1-B7C6-67E3233E21F7}']
                                        [MethodName
                                        ('textStorage:willProcessEditing:range:changeInLength:')
                                        ]
                                        procedure textStorageWillProcessEditingRangeChangeInLength
                                        (textStorage: NSTextStorage;
                                        willProcessEditing
                                        : NSTextStorageEditActions;
                                        range: NSRange;
                                        changeInLength: NSInteger);
                                        cdecl;
                                        [MethodName
                                        ('textStorage:didProcessEditing:range:changeInLength:')
                                        ]
                                        procedure textStorageDidProcessEditingRangeChangeInLength
                                        (textStorage: NSTextStorage;
                                        didProcessEditing
                                        : NSTextStorageEditActions;
                                        range: NSRange;
                                        changeInLength: NSInteger); cdecl;
                                        end;

                                        NSLayoutManagerDelegate = interface
                                        (IObjectiveC)
                                        ['{A775AB42-036F-436F-BEC2-B30050A547CB}']
                                        [MethodName
                                        ('layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:')
                                        ]
                                        function layoutManagerShouldGenerateGlyphsPropertiesCharacterIndexesFontForGlyphRange
                                        (layoutManager: NSLayoutManager;
                                        shouldGenerateGlyphs: unsigned short *;
                                        properties: NSInteger;
                                        characterIndexes: PCardinal;
                                        font: UIFont; forGlyphRange: NSRange)
                                        : NSUInteger;
                                        cdecl;
                                        [MethodName
                                        ('layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:')
                                        ]
                                        function layoutManagerLineSpacingAfterGlyphAtIndexWithProposedLineFragmentRect
                                        (layoutManager: NSLayoutManager;
                                        lineSpacingAfterGlyphAtIndex
                                        : NSUInteger;
                                        withProposedLineFragmentRect: CGRect)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:')
                                        ]
                                        function layoutManagerParagraphSpacingBeforeGlyphAtIndexWithProposedLineFragmentRect
                                        (layoutManager: NSLayoutManager;
                                        paragraphSpacingBeforeGlyphAtIndex
                                        : NSUInteger;
                                        withProposedLineFragmentRect: CGRect)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:')
                                        ]
                                        function layoutManagerParagraphSpacingAfterGlyphAtIndexWithProposedLineFragmentRect
                                        (layoutManager: NSLayoutManager;
                                        paragraphSpacingAfterGlyphAtIndex
                                        : NSUInteger;
                                        withProposedLineFragmentRect: CGRect)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('layoutManager:shouldUseAction:forControlCharacterAtIndex:')
                                        ]
                                        function layoutManagerShouldUseActionForControlCharacterAtIndex
                                        (layoutManager: NSLayoutManager;
                                        shouldUseAction
                                        : NSControlCharacterAction;
                                        forControlCharacterAtIndex: NSUInteger)
                                        : NSControlCharacterAction; cdecl;
                                        [MethodName
                                        ('layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:')
                                        ]
                                        function layoutManagerShouldBreakLineByWordBeforeCharacterAtIndex
                                        (layoutManager: NSLayoutManager;
                                        shouldBreakLineByWordBeforeCharacterAtIndex
                                        : NSUInteger): Boolean; cdecl;
                                        [MethodName
                                        ('layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:')
                                        ]
                                        function layoutManagerShouldBreakLineByHyphenatingBeforeCharacterAtIndex
                                        (layoutManager: NSLayoutManager;
                                        shouldBreakLineByHyphenatingBeforeCharacterAtIndex
                                        : NSUInteger): Boolean; cdecl;
                                        [MethodName
                                        ('layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:')
                                        ]
                                        function layoutManagerBoundingBoxForControlGlyphAtIndexForTextContainerProposedLineFragmentGlyphPositionCharacterIndex
                                        (layoutManager: NSLayoutManager;
                                        boundingBoxForControlGlyphAtIndex
                                        : NSUInteger;
                                        forTextContainer: NSTextContainer;
                                        proposedLineFragment: CGRect;
                                        glyphPosition: CGPoint;
                                        characterIndex: NSUInteger)
                                        : CGRect; cdecl;
                                        [MethodName
                                        ('layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:')
                                        ]
                                        function layoutManagerShouldSetLineFragmentRectLineFragmentUsedRectBaselineOffsetInTextContainerForGlyphRange
                                        (layoutManager: NSLayoutManager;
                                        shouldSetLineFragmentRect: Pointer;
                                        lineFragmentUsedRect: Pointer;
                                        baselineOffset: PCGFloat;
                                        inTextContainer: NSTextContainer;
                                        forGlyphRange: NSRange): Boolean; cdecl;
                                        procedure layoutManagerDidInvalidateLayout
                                        (sender: NSLayoutManager); cdecl;
                                        [MethodName
                                        ('layoutManager:didCompleteLayoutForTextContainer:atEnd:')
                                        ]
                                        procedure layoutManagerDidCompleteLayoutForTextContainerAtEnd
                                        (layoutManager: NSLayoutManager;
                                        didCompleteLayoutForTextContainer
                                        : NSTextContainer;
                                        atEnd: Boolean); cdecl;
                                        [MethodName
                                        ('layoutManager:textContainer:didChangeGeometryFromSize:')
                                        ]
                                        procedure layoutManagerTextContainerDidChangeGeometryFromSize
                                        (layoutManager: NSLayoutManager;
                                        textContainer: NSTextContainer;
                                        didChangeGeometryFromSize
                                        : CGSize); cdecl;
                                        end;

                                        NSTextLayoutOrientationProvider =
                                        interface(IObjectiveC)
                                        ['{B57AE7E6-9884-432E-AD94-ADC14F2A46B8}']
                                        function layoutOrientation
                                        : NSTextLayoutOrientation;
                                        cdecl;
                                        end;

                                        NSTextAttachmentContainer = interface
                                        (IObjectiveC)
                                        ['{ADF4303C-FB95-49CB-A558-1F2701141A84}']
                                        function imageForBounds
                                        (imageBounds: CGRect;
                                        textContainer: NSTextContainer;
                                        characterIndex: NSUInteger): UIImage;
                                        cdecl;
                                        function attachmentBoundsForTextContainer
                                        (textContainer: NSTextContainer;
                                        proposedLineFragment: CGRect;
                                        glyphPosition: CGPoint;
                                        characterIndex: NSUInteger)
                                        : CGRect; cdecl;
                                        end;

                                        UIAccelerometerDelegate = interface
                                        (IObjectiveC)
                                        ['{9C3A126D-02C8-43FC-8FCC-CC0D86E92DEC}']
                                        procedure accelerometer
                                        (accelerometer: UIAccelerometer;
                                        didAccelerate: UIAcceleration);
                                        cdecl;
                                        end;

                                        UIAppearanceContainer = interface
                                        (IObjectiveC)
                                        ['{6571079B-4746-4809-9C05-D4F746B6AA93}']
                                        end;

                                        UIAppearance = interface(IObjectiveC)
                                        ['{EBEBDA1D-3BA6-4ADB-8800-402F3AC31BE6}']
                                        function appearance
                                        : Pointer { instancetype };
                                        cdecl;
                                        function appearanceWhenContainedIn
                                        (ContainerClass: Pointer)
                                        : Pointer { instancetype }; cdecl;
                                        function appearanceWhenContainedInInstancesOfClasses
                                        (containerTypes: NSArray)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('appearanceForTraitCollection:')]
                                        function appearanceForTraitCollection
                                        (trait: UITraitCollection)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('appearanceForTraitCollection:whenContainedIn:')
                                        ]
                                        function appearanceForTraitCollectionWhenContainedIn
                                        (trait: UITraitCollection;
                                        whenContainedIn: Pointer)
                                        : Pointer { instancetype }; cdecl;
                                        [MethodName
                                        ('appearanceForTraitCollection:whenContainedInInstancesOfClasses:')
                                        ]
                                        function appearanceForTraitCollectionWhenContainedInInstancesOfClasses
                                        (trait: UITraitCollection;
                                        whenContainedInInstancesOfClasses
                                        : NSArray)
                                        : Pointer { instancetype }; cdecl;
                                        end;

                                        UIDynamicItem = interface(IObjectiveC)
                                        ['{7C3894D2-C57D-4A7F-8C91-AB159DF59146}']
                                        procedure setCenter(center: CGPoint);
                                        cdecl;
                                        function center: CGPoint; cdecl;
                                        function bounds: CGRect; cdecl;
                                        procedure setTransform
                                        (transform: CGAffineTransform); cdecl;
                                        function transform
                                        : CGAffineTransform; cdecl;
                                        function collisionBoundsType
                                        : UIDynamicItemCollisionBoundsType;
                                        cdecl;
                                        function collisionBoundingPath
                                        : UIBezierPath; cdecl;
                                        end;

                                        UIInputViewAudioFeedback = interface
                                        (IObjectiveC)
                                        ['{F9DAE330-8BA5-4C0B-9FD0-C8C2814FB06B}']
                                        function enableInputClicksWhenVisible
                                        : Boolean;
                                        cdecl;
                                        end;

                                        UITraitEnvironment = interface
                                        (IObjectiveC)
                                        ['{71C87316-7126-422A-A114-0C88FC39CC6D}']
                                        function traitCollection
                                        : UITraitCollection;
                                        cdecl;
                                        procedure traitCollectionDidChange
                                        (previousTraitCollection
                                        : UITraitCollection); cdecl;
                                        end;

                                        UIFocusEnvironment = interface
                                        (IObjectiveC)
                                        ['{3D9D6336-530F-4265-B300-7E2BF7F931AA}']
                                        function preferredFocusedView: UIView;
                                        cdecl;
                                        procedure setNeedsFocusUpdate; cdecl;
                                        procedure updateFocusIfNeeded; cdecl;
                                        function shouldUpdateFocusInContext
                                        (context: UIFocusUpdateContext)
                                        : Boolean; cdecl;
                                        procedure didUpdateFocusInContext
                                        (context: UIFocusUpdateContext;
                                        withAnimationCoordinator
                                        : UIFocusAnimationCoordinator); cdecl;
                                        end;

                                        UICoordinateSpace = interface
                                        (IObjectiveC)
                                        ['{806F637B-E782-4908-9634-DC6D01269D5A}']
                                        [MethodName
                                        ('convertPoint:toCoordinateSpace:')]
                                        function convertPointToCoordinateSpace
                                        (point: CGPoint;
                                        toCoordinateSpace: Pointer): CGPoint;
                                        cdecl;
                                        [MethodName
                                        ('convertPoint:fromCoordinateSpace:')]
                                        function convertPointFromCoordinateSpace
                                        (point: CGPoint;
                                        fromCoordinateSpace: Pointer)
                                        : CGPoint; cdecl;
                                        [MethodName
                                        ('convertRect:toCoordinateSpace:')]
                                        function convertRectToCoordinateSpace
                                        (rect: CGRect;
                                        toCoordinateSpace: Pointer)
                                        : CGRect; cdecl;
                                        [MethodName
                                        ('convertRect:fromCoordinateSpace:')]
                                        function convertRectFromCoordinateSpace
                                        (rect: CGRect;
                                        fromCoordinateSpace: Pointer)
                                        : CGRect; cdecl;
                                        function bounds: CGRect; cdecl;
                                        end;

                                        UIScrollViewDelegate = interface
                                        (IObjectiveC)
                                        ['{469DB17D-DDED-45A1-BED3-6E3DC086E359}']
                                        procedure scrollViewDidScroll
                                        (scrollView: UIScrollView);
                                        cdecl;
                                        procedure scrollViewDidZoom
                                        (scrollView: UIScrollView); cdecl;
                                        procedure scrollViewWillBeginDragging
                                        (scrollView: UIScrollView); cdecl;
                                        procedure scrollViewWillEndDragging
                                        (scrollView: UIScrollView;
                                        withVelocity: CGPoint;
                                        targetContentOffset: Pointer); cdecl;
                                        procedure scrollViewDidEndDragging
                                        (scrollView: UIScrollView;
                                        willDecelerate: Boolean); cdecl;
                                        procedure scrollViewWillBeginDecelerating
                                        (scrollView: UIScrollView); cdecl;
                                        procedure scrollViewDidEndDecelerating
                                        (scrollView: UIScrollView); cdecl;
                                        procedure scrollViewDidEndScrollingAnimation
                                        (scrollView: UIScrollView); cdecl;
                                        function viewForZoomingInScrollView
                                        (scrollView: UIScrollView)
                                        : UIView; cdecl;
                                        procedure scrollViewWillBeginZooming
                                        (scrollView: UIScrollView;
                                        withView: UIView); cdecl;
                                        procedure scrollViewDidEndZooming
                                        (scrollView: UIScrollView;
                                        withView: UIView;
                                        atScale: CGFloat); cdecl;
                                        function scrollViewShouldScrollToTop
                                        (scrollView: UIScrollView)
                                        : Boolean; cdecl;
                                        procedure scrollViewDidScrollToTop
                                        (scrollView: UIScrollView); cdecl;
                                        end;

                                        UIGestureRecognizerDelegate = interface
                                        (IObjectiveC)
                                        ['{AB60819B-E660-4602-82E4-40A113A2625A}']
                                        function gestureRecognizerShouldBegin
                                        (gestureRecognizer: UIGestureRecognizer)
                                        : Boolean;
                                        cdecl;
                                        [MethodName
                                        ('gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:')
                                        ]
                                        function gestureRecognizerShouldRecognizeSimultaneouslyWithGestureRecognizer
                                        (gestureRecognizer: UIGestureRecognizer;
                                        shouldRecognizeSimultaneouslyWithGestureRecognizer
                                        : UIGestureRecognizer): Boolean; cdecl;
                                        [MethodName
                                        ('gestureRecognizer:shouldRequireFailureOfGestureRecognizer:')
                                        ]
                                        function gestureRecognizerShouldRequireFailureOfGestureRecognizer
                                        (gestureRecognizer: UIGestureRecognizer;
                                        shouldRequireFailureOfGestureRecognizer
                                        : UIGestureRecognizer): Boolean; cdecl;
                                        [MethodName
                                        ('gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:')
                                        ]
                                        function gestureRecognizerShouldBeRequiredToFailByGestureRecognizer
                                        (gestureRecognizer: UIGestureRecognizer;
                                        shouldBeRequiredToFailByGestureRecognizer
                                        : UIGestureRecognizer): Boolean; cdecl;
                                        [MethodName
                                        ('gestureRecognizer:shouldReceiveTouch:')
                                        ]
                                        function gestureRecognizerShouldReceiveTouch
                                        (gestureRecognizer: UIGestureRecognizer;
                                        shouldReceiveTouch: UITouch)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('gestureRecognizer:shouldReceivePress:')
                                        ]
                                        function gestureRecognizerShouldReceivePress
                                        (gestureRecognizer: UIGestureRecognizer;
                                        shouldReceivePress: UIPress)
                                        : Boolean; cdecl;
                                        end;

                                        UITableViewDataSource = interface
                                        (IObjectiveC)
                                        ['{480DE1A8-212A-4BB9-85E3-D63026EB8AE6}']
                                        [MethodName
                                        ('tableView:numberOfRowsInSection:')]
                                        function tableViewNumberOfRowsInSection
                                        (tableView: UITableView;
                                        numberOfRowsInSection: NSInteger)
                                        : NSInteger;
                                        cdecl;
                                        [MethodName
                                        ('tableView:cellForRowAtIndexPath:')]
                                        function tableViewCellForRowAtIndexPath
                                        (tableView: UITableView;
                                        cellForRowAtIndexPath: NSIndexPath)
                                        : UITableViewCell; cdecl;
                                        function numberOfSectionsInTableView
                                        (tableView: UITableView)
                                        : NSInteger; cdecl;
                                        [MethodName
                                        ('tableView:titleForHeaderInSection:')]
                                        function tableViewTitleForHeaderInSection
                                        (tableView: UITableView;
                                        titleForHeaderInSection: NSInteger)
                                        : NSString; cdecl;
                                        [MethodName
                                        ('tableView:titleForFooterInSection:')]
                                        function tableViewTitleForFooterInSection
                                        (tableView: UITableView;
                                        titleForFooterInSection: NSInteger)
                                        : NSString; cdecl;
                                        [MethodName
                                        ('tableView:canEditRowAtIndexPath:')]
                                        function tableViewCanEditRowAtIndexPath
                                        (tableView: UITableView;
                                        canEditRowAtIndexPath: NSIndexPath)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('tableView:canMoveRowAtIndexPath:')]
                                        function tableViewCanMoveRowAtIndexPath
                                        (tableView: UITableView;
                                        canMoveRowAtIndexPath: NSIndexPath)
                                        : Boolean; cdecl;
                                        function sectionIndexTitlesForTableView
                                        (tableView: UITableView)
                                        : NSArray; cdecl;
                                        [MethodName
                                        ('tableView:sectionForSectionIndexTitle:atIndex:')
                                        ]
                                        function tableViewSectionForSectionIndexTitleAtIndex
                                        (tableView: UITableView;
                                        sectionForSectionIndexTitle: NSString;
                                        atIndex: NSInteger): NSInteger; cdecl;
                                        [MethodName
                                        ('tableView:commitEditingStyle:forRowAtIndexPath:')
                                        ]
                                        procedure tableViewCommitEditingStyleForRowAtIndexPath
                                        (tableView: UITableView;
                                        commitEditingStyle
                                        : UITableViewCellEditingStyle;
                                        forRowAtIndexPath: NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:moveRowAtIndexPath:toIndexPath:')
                                        ]
                                        procedure tableViewMoveRowAtIndexPathToIndexPath
                                        (tableView: UITableView;
                                        moveRowAtIndexPath: NSIndexPath;
                                        toIndexPath: NSIndexPath); cdecl;
                                        end;

                                        UITableViewDelegate = interface
                                        (IObjectiveC)
                                        ['{C06C8B4F-FC33-4641-998F-5B80FF5DE520}']
                                        [MethodName
                                        ('tableView:willDisplayCell:forRowAtIndexPath:')
                                        ]
                                        procedure tableViewWillDisplayCellForRowAtIndexPath
                                        (tableView: UITableView;
                                        willDisplayCell: UITableViewCell;
                                        forRowAtIndexPath: NSIndexPath);
                                        cdecl;
                                        [MethodName
                                        ('tableView:willDisplayHeaderView:forSection:')
                                        ]
                                        procedure tableViewWillDisplayHeaderViewForSection
                                        (tableView: UITableView;
                                        willDisplayHeaderView: UIView;
                                        forSection: NSInteger); cdecl;
                                        [MethodName
                                        ('tableView:willDisplayFooterView:forSection:')
                                        ]
                                        procedure tableViewWillDisplayFooterViewForSection
                                        (tableView: UITableView;
                                        willDisplayFooterView: UIView;
                                        forSection: NSInteger); cdecl;
                                        [MethodName
                                        ('tableView:didEndDisplayingCell:forRowAtIndexPath:')
                                        ]
                                        procedure tableViewDidEndDisplayingCellForRowAtIndexPath
                                        (tableView: UITableView;
                                        didEndDisplayingCell: UITableViewCell;
                                        forRowAtIndexPath: NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:didEndDisplayingHeaderView:forSection:')
                                        ]
                                        procedure tableViewDidEndDisplayingHeaderViewForSection
                                        (tableView: UITableView;
                                        didEndDisplayingHeaderView: UIView;
                                        forSection: NSInteger); cdecl;
                                        [MethodName
                                        ('tableView:didEndDisplayingFooterView:forSection:')
                                        ]
                                        procedure tableViewDidEndDisplayingFooterViewForSection
                                        (tableView: UITableView;
                                        didEndDisplayingFooterView: UIView;
                                        forSection: NSInteger); cdecl;
                                        [MethodName
                                        ('tableView:heightForRowAtIndexPath:')]
                                        function tableViewHeightForRowAtIndexPath
                                        (tableView: UITableView;
                                        heightForRowAtIndexPath: NSIndexPath)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('tableView:heightForHeaderInSection:')]
                                        function tableViewHeightForHeaderInSection
                                        (tableView: UITableView;
                                        heightForHeaderInSection: NSInteger)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('tableView:heightForFooterInSection:')]
                                        function tableViewHeightForFooterInSection
                                        (tableView: UITableView;
                                        heightForFooterInSection: NSInteger)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('tableView:estimatedHeightForRowAtIndexPath:')
                                        ]
                                        function tableViewEstimatedHeightForRowAtIndexPath
                                        (tableView: UITableView;
                                        estimatedHeightForRowAtIndexPath
                                        : NSIndexPath): CGFloat; cdecl;
                                        [MethodName
                                        ('tableView:estimatedHeightForHeaderInSection:')
                                        ]
                                        function tableViewEstimatedHeightForHeaderInSection
                                        (tableView: UITableView;
                                        estimatedHeightForHeaderInSection
                                        : NSInteger): CGFloat; cdecl;
                                        [MethodName
                                        ('tableView:estimatedHeightForFooterInSection:')
                                        ]
                                        function tableViewEstimatedHeightForFooterInSection
                                        (tableView: UITableView;
                                        estimatedHeightForFooterInSection
                                        : NSInteger): CGFloat; cdecl;
                                        [MethodName
                                        ('tableView:viewForHeaderInSection:')]
                                        function tableViewViewForHeaderInSection
                                        (tableView: UITableView;
                                        viewForHeaderInSection: NSInteger)
                                        : UIView; cdecl;
                                        [MethodName
                                        ('tableView:viewForFooterInSection:')]
                                        function tableViewViewForFooterInSection
                                        (tableView: UITableView;
                                        viewForFooterInSection: NSInteger)
                                        : UIView; cdecl;
                                        [MethodName
                                        ('tableView:accessoryTypeForRowWithIndexPath:')
                                        ]
                                        function tableViewAccessoryTypeForRowWithIndexPath
                                        (tableView: UITableView;
                                        accessoryTypeForRowWithIndexPath
                                        : NSIndexPath)
                                        : UITableViewCellAccessoryType; cdecl;
                                        [MethodName
                                        ('tableView:accessoryButtonTappedForRowWithIndexPath:')
                                        ]
                                        procedure tableViewAccessoryButtonTappedForRowWithIndexPath
                                        (tableView: UITableView;
                                        accessoryButtonTappedForRowWithIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:shouldHighlightRowAtIndexPath:')
                                        ]
                                        function tableViewShouldHighlightRowAtIndexPath
                                        (tableView: UITableView;
                                        shouldHighlightRowAtIndexPath
                                        : NSIndexPath): Boolean; cdecl;
                                        [MethodName
                                        ('tableView:didHighlightRowAtIndexPath:')
                                        ]
                                        procedure tableViewDidHighlightRowAtIndexPath
                                        (tableView: UITableView;
                                        didHighlightRowAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:didUnhighlightRowAtIndexPath:')
                                        ]
                                        procedure tableViewDidUnhighlightRowAtIndexPath
                                        (tableView: UITableView;
                                        didUnhighlightRowAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:willSelectRowAtIndexPath:')]
                                        function tableViewWillSelectRowAtIndexPath
                                        (tableView: UITableView;
                                        willSelectRowAtIndexPath: NSIndexPath)
                                        : NSIndexPath; cdecl;
                                        [MethodName
                                        ('tableView:willDeselectRowAtIndexPath:')
                                        ]
                                        function tableViewWillDeselectRowAtIndexPath
                                        (tableView: UITableView;
                                        willDeselectRowAtIndexPath: NSIndexPath)
                                        : NSIndexPath; cdecl;
                                        [MethodName
                                        ('tableView:didSelectRowAtIndexPath:')]
                                        procedure tableViewDidSelectRowAtIndexPath
                                        (tableView: UITableView;
                                        didSelectRowAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:didDeselectRowAtIndexPath:')
                                        ]
                                        procedure tableViewDidDeselectRowAtIndexPath
                                        (tableView: UITableView;
                                        didDeselectRowAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:editingStyleForRowAtIndexPath:')
                                        ]
                                        function tableViewEditingStyleForRowAtIndexPath
                                        (tableView: UITableView;
                                        editingStyleForRowAtIndexPath
                                        : NSIndexPath)
                                        : UITableViewCellEditingStyle; cdecl;
                                        [MethodName
                                        ('tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:')
                                        ]
                                        function tableViewTitleForDeleteConfirmationButtonForRowAtIndexPath
                                        (tableView: UITableView;
                                        titleForDeleteConfirmationButtonForRowAtIndexPath
                                        : NSIndexPath): NSString; cdecl;
                                        [MethodName
                                        ('tableView:editActionsForRowAtIndexPath:')
                                        ]
                                        function tableViewEditActionsForRowAtIndexPath
                                        (tableView: UITableView;
                                        editActionsForRowAtIndexPath
                                        : NSIndexPath): NSArray; cdecl;
                                        [MethodName
                                        ('tableView:shouldIndentWhileEditingRowAtIndexPath:')
                                        ]
                                        function tableViewShouldIndentWhileEditingRowAtIndexPath
                                        (tableView: UITableView;
                                        shouldIndentWhileEditingRowAtIndexPath
                                        : NSIndexPath): Boolean; cdecl;
                                        [MethodName
                                        ('tableView:willBeginEditingRowAtIndexPath:')
                                        ]
                                        procedure tableViewWillBeginEditingRowAtIndexPath
                                        (tableView: UITableView;
                                        willBeginEditingRowAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:didEndEditingRowAtIndexPath:')
                                        ]
                                        procedure tableViewDidEndEditingRowAtIndexPath
                                        (tableView: UITableView;
                                        didEndEditingRowAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:')
                                        ]
                                        function tableViewTargetIndexPathForMoveFromRowAtIndexPathToProposedIndexPath
                                        (tableView: UITableView;
                                        targetIndexPathForMoveFromRowAtIndexPath
                                        : NSIndexPath;
                                        toProposedIndexPath: NSIndexPath)
                                        : NSIndexPath; cdecl;
                                        [MethodName
                                        ('tableView:indentationLevelForRowAtIndexPath:')
                                        ]
                                        function tableViewIndentationLevelForRowAtIndexPath
                                        (tableView: UITableView;
                                        indentationLevelForRowAtIndexPath
                                        : NSIndexPath): NSInteger; cdecl;
                                        [MethodName
                                        ('tableView:shouldShowMenuForRowAtIndexPath:')
                                        ]
                                        function tableViewShouldShowMenuForRowAtIndexPath
                                        (tableView: UITableView;
                                        shouldShowMenuForRowAtIndexPath
                                        : NSIndexPath): Boolean; cdecl;
                                        [MethodName
                                        ('tableView:canPerformAction:forRowAtIndexPath:withSender:')
                                        ]
                                        function tableViewCanPerformActionForRowAtIndexPathWithSender
                                        (tableView: UITableView;
                                        canPerformAction: SEL;
                                        forRowAtIndexPath: NSIndexPath;
                                        withSender: Pointer): Boolean; cdecl;
                                        [MethodName
                                        ('tableView:performAction:forRowAtIndexPath:withSender:')
                                        ]
                                        procedure tableViewPerformActionForRowAtIndexPathWithSender
                                        (tableView: UITableView;
                                        performAction: SEL;
                                        forRowAtIndexPath: NSIndexPath;
                                        withSender: Pointer); cdecl;
                                        [MethodName
                                        ('tableView:canFocusRowAtIndexPath:')]
                                        function tableViewCanFocusRowAtIndexPath
                                        (tableView: UITableView;
                                        canFocusRowAtIndexPath: NSIndexPath)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('tableView:shouldUpdateFocusInContext:')
                                        ]
                                        function tableViewShouldUpdateFocusInContext
                                        (tableView: UITableView;
                                        shouldUpdateFocusInContext
                                        : UITableViewFocusUpdateContext)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('tableView:didUpdateFocusInContext:withAnimationCoordinator:')
                                        ]
                                        procedure tableViewDidUpdateFocusInContextWithAnimationCoordinator
                                        (tableView: UITableView;
                                        didUpdateFocusInContext
                                        : UITableViewFocusUpdateContext;
                                        withAnimationCoordinator
                                        : UIFocusAnimationCoordinator); cdecl;
                                        function indexPathForPreferredFocusedViewInTableView
                                        (tableView: UITableView)
                                        : NSIndexPath; cdecl;
                                        end;

                                        UIPickerViewDataSource = interface
                                        (IObjectiveC)
                                        ['{1E9DD861-98BC-46B7-B797-DF19930F6E28}']
                                        function numberOfComponentsInPickerView
                                        (pickerView: UIPickerView): NSInteger;
                                        cdecl;
                                        function pickerView
                                        (pickerView: UIPickerView;
                                        numberOfRowsInComponent: NSInteger)
                                        : NSInteger; cdecl;
                                        end;

                                        UIPickerViewDelegate = interface
                                        (IObjectiveC)
                                        ['{E8B30CD5-D745-4F8A-9589-5F78A194E848}']
                                        [MethodName
                                        ('pickerView:widthForComponent:')]
                                        function pickerViewWidthForComponent
                                        (pickerView: UIPickerView;
                                        widthForComponent: NSInteger): CGFloat;
                                        cdecl;
                                        [MethodName
                                        ('pickerView:rowHeightForComponent:')]
                                        function pickerViewRowHeightForComponent
                                        (pickerView: UIPickerView;
                                        rowHeightForComponent: NSInteger)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('pickerView:titleForRow:forComponent:')
                                        ]
                                        function pickerViewTitleForRowForComponent
                                        (pickerView: UIPickerView;
                                        titleForRow: NSInteger;
                                        forComponent: NSInteger)
                                        : NSString; cdecl;
                                        [MethodName
                                        ('pickerView:attributedTitleForRow:forComponent:')
                                        ]
                                        function pickerViewAttributedTitleForRowForComponent
                                        (pickerView: UIPickerView;
                                        attributedTitleForRow: NSInteger;
                                        forComponent: NSInteger)
                                        : NSAttributedString; cdecl;
                                        [MethodName
                                        ('pickerView:viewForRow:forComponent:reusingView:')
                                        ]
                                        function pickerViewViewForRowForComponentReusingView
                                        (pickerView: UIPickerView;
                                        viewForRow: NSInteger;
                                        forComponent: NSInteger;
                                        reusingView: UIView): UIView; cdecl;
                                        [MethodName
                                        ('pickerView:didSelectRow:inComponent:')
                                        ]
                                        procedure pickerViewDidSelectRowInComponent
                                        (pickerView: UIPickerView;
                                        didSelectRow: NSInteger;
                                        inComponent: NSInteger); cdecl;
                                        end;

                                        UIPickerViewAccessibilityDelegate =
                                        interface(IObjectiveC)
                                        ['{617687EC-B119-4674-91FB-21A264428645}']
                                        [MethodName
                                        ('pickerView:accessibilityLabelForComponent:')
                                        ]
                                        function pickerViewAccessibilityLabelForComponent
                                        (pickerView: UIPickerView;
                                        accessibilityLabelForComponent
                                        : NSInteger): NSString;
                                        cdecl;
                                        [MethodName
                                        ('pickerView:accessibilityHintForComponent:')
                                        ]
                                        function pickerViewAccessibilityHintForComponent
                                        (pickerView: UIPickerView;
                                        accessibilityHintForComponent
                                        : NSInteger): NSString; cdecl;
                                        end;

                                        UIScrollViewAccessibilityDelegate =
                                        interface(IObjectiveC)
                                        ['{A4460250-3D04-49F6-9FF4-C4F6EC533F03}']
                                        function accessibilityScrollStatusForScrollView
                                        (scrollView: UIScrollView): NSString;
                                        cdecl;
                                        end;

                                        UIAccessibilityIdentification =
                                        interface(IObjectiveC)
                                        ['{6E4E73CF-9805-4EE5-94F0-65E9757B4BE1}']
                                        procedure setAccessibilityIdentifier
                                        (accessibilityIdentifier: NSString);
                                        cdecl;
                                        function accessibilityIdentifier
                                        : NSString; cdecl;
                                        end;

                                        UIGuidedAccessRestrictionDelegate =
                                        interface(IObjectiveC)
                                        ['{E4729144-82A1-4A8E-9F91-0656A04D1F7C}']
                                        function guidedAccessRestrictionIdentifiers
                                        : NSArray;
                                        cdecl;
                                        procedure guidedAccessRestrictionWithIdentifier
                                        (restrictionIdentifier: NSString;
                                        didChangeState
                                        : UIGuidedAccessRestrictionState);
                                        cdecl;
                                        function textForGuidedAccessRestrictionWithIdentifier
                                        (restrictionIdentifier: NSString)
                                        : NSString; cdecl;
                                        function detailTextForGuidedAccessRestrictionWithIdentifier
                                        (restrictionIdentifier: NSString)
                                        : NSString; cdecl;
                                        end;

                                        UIAccessibilityReadingContent =
                                        interface(IObjectiveC)
                                        ['{DFA99545-E5D3-4003-B490-4EA74B7EBC36}']
                                        function accessibilityLineNumberForPoint
                                        (point: CGPoint): NSInteger;
                                        cdecl;
                                        function accessibilityContentForLineNumber
                                        (lineNumber: NSInteger)
                                        : NSString; cdecl;
                                        function accessibilityFrameForLineNumber
                                        (lineNumber: NSInteger): CGRect; cdecl;
                                        function accessibilityPageContent
                                        : NSString; cdecl;
                                        end;

                                        UITextInputTraits = interface
                                        (IObjectiveC)
                                        ['{CD30A27D-359C-4FD3-AAA6-B4FDAEDFF4D4}']
                                        procedure setAutocapitalizationType
                                        (autocapitalizationType
                                        : UITextAutocapitalizationType);
                                        cdecl;
                                        function autocapitalizationType
                                        : UITextAutocapitalizationType; cdecl;
                                        procedure setAutocorrectionType
                                        (autocorrectionType
                                        : UITextAutocorrectionType); cdecl;
                                        function autocorrectionType
                                        : UITextAutocorrectionType; cdecl;
                                        procedure setSpellCheckingType
                                        (spellCheckingType
                                        : UITextSpellCheckingType); cdecl;
                                        function spellCheckingType
                                        : UITextSpellCheckingType; cdecl;
                                        procedure setKeyboardType
                                        (keyboardType: UIKeyboardType); cdecl;
                                        function keyboardType
                                        : UIKeyboardType; cdecl;
                                        procedure setKeyboardAppearance
                                        (keyboardAppearance
                                        : UIKeyboardAppearance); cdecl;
                                        function keyboardAppearance
                                        : UIKeyboardAppearance; cdecl;
                                        procedure setReturnKeyType
                                        (returnKeyType: UIReturnKeyType); cdecl;
                                        function returnKeyType
                                        : UIReturnKeyType; cdecl;
                                        procedure setEnablesReturnKeyAutomatically
                                        (enablesReturnKeyAutomatically
                                        : Boolean); cdecl;
                                        function enablesReturnKeyAutomatically
                                        : Boolean; cdecl;
                                        procedure setSecureTextEntry
                                        (secureTextEntry: Boolean); cdecl;
                                        function isSecureTextEntry
                                        : Boolean; cdecl;
                                        end;

                                        UIKeyInput = interface(IObjectiveC)
                                        ['{8474EF42-9959-41D4-8B89-94E5A0828F8F}']
                                        function hasText: Boolean;
                                        cdecl;
                                        procedure insertText
                                        (text: NSString); cdecl;
                                        procedure deleteBackward; cdecl;
                                        end;

                                        UITextInputTokenizer = interface
                                        (IObjectiveC)
                                        ['{0C9CCEE8-7F29-46F5-8410-9DD31BA6224E}']
                                        function rangeEnclosingPosition
                                        (position: UITextPosition;
                                        withGranularity: UITextGranularity;
                                        inDirection: UITextDirection)
                                        : UITextRange;
                                        cdecl;
                                        [MethodName
                                        ('isPosition:atBoundary:inDirection:')]
                                        function isPositionAtBoundaryInDirection
                                        (position: UITextPosition;
                                        atBoundary: UITextGranularity;
                                        inDirection: UITextDirection)
                                        : Boolean; cdecl;
                                        function positionFromPosition
                                        (position: UITextPosition;
                                        toBoundary: UITextGranularity;
                                        inDirection: UITextDirection)
                                        : UITextPosition; cdecl;
                                        [MethodName
                                        ('isPosition:withinTextUnit:inDirection:')
                                        ]
                                        function isPositionWithinTextUnitInDirection
                                        (position: UITextPosition;
                                        withinTextUnit: UITextGranularity;
                                        inDirection: UITextDirection)
                                        : Boolean; cdecl;
                                        end;

                                        UITextInputDelegate = interface
                                        (IObjectiveC)
                                        ['{EE9E1AB5-1B80-4473-AE85-984CA02847D2}']
                                        procedure selectionWillChange
                                        (textInput: Pointer);
                                        cdecl;
                                        procedure selectionDidChange
                                        (textInput: Pointer); cdecl;
                                        procedure textWillChange
                                        (textInput: Pointer); cdecl;
                                        procedure textDidChange
                                        (textInput: Pointer); cdecl;
                                        end;

                                        UITextInput = interface(IObjectiveC)
                                        ['{BC2B22BC-2A48-48B8-960D-8D82A2140131}']
                                        function textInRange(range: UITextRange)
                                        : NSString;
                                        cdecl;
                                        procedure replaceRange
                                        (range: UITextRange;
                                        withText: NSString); cdecl;
                                        procedure setSelectedTextRange
                                        (selectedTextRange: UITextRange); cdecl;
                                        function selectedTextRange
                                        : UITextRange; cdecl;
                                        function markedTextRange
                                        : UITextRange; cdecl;
                                        procedure setMarkedTextStyle
                                        (markedTextStyle: NSDictionary); cdecl;
                                        function markedTextStyle
                                        : NSDictionary; cdecl;
                                        procedure setMarkedText
                                        (markedText: NSString;
                                        selectedRange: NSRange); cdecl;
                                        procedure unmarkText; cdecl;
                                        function beginningOfDocument
                                        : UITextPosition; cdecl;
                                        function endOfDocument
                                        : UITextPosition; cdecl;
                                        function textRangeFromPosition
                                        (fromPosition: UITextPosition;
                                        toPosition: UITextPosition)
                                        : UITextRange; cdecl;
                                        [MethodName
                                        ('positionFromPosition:offset:')]
                                        function positionFromPositionOffset
                                        (position: UITextPosition;
                                        offset: NSInteger)
                                        : UITextPosition; cdecl;
                                        [MethodName
                                        ('positionFromPosition:inDirection:offset:')
                                        ]
                                        function positionFromPositionInDirectionOffset
                                        (position: UITextPosition;
                                        inDirection: UITextLayoutDirection;
                                        offset: NSInteger)
                                        : UITextPosition; cdecl;
                                        function comparePosition
                                        (position: UITextPosition;
                                        toPosition: UITextPosition)
                                        : NSComparisonResult; cdecl;
                                        function offsetFromPosition
                                        (from: UITextPosition;
                                        toPosition: UITextPosition)
                                        : NSInteger; cdecl;
                                        procedure setInputDelegate
                                        (inputDelegate: Pointer); cdecl;
                                        function inputDelegate: Pointer; cdecl;
                                        function tokenizer: Pointer; cdecl;
                                        [MethodName
                                        ('positionWithinRange:farthestInDirection:')
                                        ]
                                        function positionWithinRangeFarthestInDirection
                                        (range: UITextRange;
                                        farthestInDirection
                                        : UITextLayoutDirection)
                                        : UITextPosition; cdecl;
                                        function characterRangeByExtendingPosition
                                        (position: UITextPosition;
                                        inDirection: UITextLayoutDirection)
                                        : UITextRange; cdecl;
                                        function baseWritingDirectionForPosition
                                        (position: UITextPosition;
                                        inDirection: UITextStorageDirection)
                                        : UITextWritingDirection; cdecl;
                                        procedure setBaseWritingDirection
                                        (writingDirection
                                        : UITextWritingDirection;
                                        forRange: UITextRange); cdecl;
                                        function firstRectForRange
                                        (range: UITextRange): CGRect; cdecl;
                                        function caretRectForPosition
                                        (position: UITextPosition)
                                        : CGRect; cdecl;
                                        function selectionRectsForRange
                                        (range: UITextRange): NSArray; cdecl;
                                        [MethodName('closestPositionToPoint:')]
                                        function closestPositionToPoint
                                        (point: CGPoint): UITextPosition; cdecl;
                                        [MethodName
                                        ('closestPositionToPoint:withinRange:')]
                                        function closestPositionToPointWithinRange
                                        (point: CGPoint;
                                        withinRange: UITextRange)
                                        : UITextPosition; cdecl;
                                        function characterRangeAtPoint
                                        (point: CGPoint): UITextRange; cdecl;
                                        function shouldChangeTextInRange
                                        (range: UITextRange;
                                        replacementText: NSString)
                                        : Boolean; cdecl;
                                        function textStylingAtPosition
                                        (position: UITextPosition;
                                        inDirection: UITextStorageDirection)
                                        : NSDictionary; cdecl;
                                        [MethodName
                                        ('positionWithinRange:atCharacterOffset:')
                                        ]
                                        function positionWithinRangeAtCharacterOffset
                                        (range: UITextRange;
                                        atCharacterOffset: NSInteger)
                                        : UITextPosition; cdecl;
                                        function characterOffsetOfPosition
                                        (position: UITextPosition;
                                        withinRange: UITextRange)
                                        : NSInteger; cdecl;
                                        function textInputView: UIView; cdecl;
                                        procedure setSelectionAffinity
                                        (selectionAffinity
                                        : UITextStorageDirection); cdecl;
                                        function selectionAffinity
                                        : UITextStorageDirection; cdecl;
                                        procedure insertDictationResult
                                        (dictationResult: NSArray); cdecl;
                                        procedure dictationRecordingDidEnd;
                                        cdecl;
                                        procedure dictationRecognitionFailed;
                                        cdecl;
                                        function insertDictationResultPlaceholder
                                        : Pointer; cdecl;
                                        function frameForDictationResultPlaceholder
                                        (placeholder: Pointer): CGRect; cdecl;
                                        procedure removeDictationResultPlaceholder
                                        (placeholder: Pointer;
                                        willInsertResult: Boolean); cdecl;
                                        procedure beginFloatingCursorAtPoint
                                        (point: CGPoint); cdecl;
                                        procedure updateFloatingCursorAtPoint
                                        (point: CGPoint); cdecl;
                                        procedure endFloatingCursor; cdecl;
                                        end;

                                        UITextFieldDelegate = interface
                                        (IObjectiveC)
                                        ['{13D6B806-CBB0-4C6E-94B6-372115E95A39}']
                                        function textFieldShouldBeginEditing
                                        (textField: UITextField): Boolean;
                                        cdecl;
                                        procedure textFieldDidBeginEditing
                                        (textField: UITextField); cdecl;
                                        function textFieldShouldEndEditing
                                        (textField: UITextField)
                                        : Boolean; cdecl;
                                        procedure textFieldDidEndEditing
                                        (textField: UITextField); cdecl;
                                        function textField
                                        (textField: UITextField;
                                        shouldChangeCharactersInRange: NSRange;
                                        replacementString: NSString)
                                        : Boolean; cdecl;
                                        function textFieldShouldClear
                                        (textField: UITextField)
                                        : Boolean; cdecl;
                                        function textFieldShouldReturn
                                        (textField: UITextField)
                                        : Boolean; cdecl;
                                        end;

                                        UITextSelecting = interface(IObjectiveC)
                                        ['{8DD76AFA-B064-499C-80D3-1D42D669B8E1}']
                                        end;

                                        UIActionSheetDelegate = interface
                                        (IObjectiveC)
                                        ['{1BE8B584-E7BF-4BB7-AEDB-8FF58A5527FD}']
                                        [MethodName
                                        ('actionSheet:clickedButtonAtIndex:')]
                                        procedure actionSheetClickedButtonAtIndex
                                        (actionSheet: UIActionSheet;
                                        clickedButtonAtIndex: NSInteger);
                                        cdecl;
                                        procedure actionSheetCancel
                                        (actionSheet: UIActionSheet); cdecl;
                                        procedure willPresentActionSheet
                                        (actionSheet: UIActionSheet); cdecl;
                                        procedure didPresentActionSheet
                                        (actionSheet: UIActionSheet); cdecl;
                                        [MethodName
                                        ('actionSheet:willDismissWithButtonIndex:')
                                        ]
                                        procedure actionSheetWillDismissWithButtonIndex
                                        (actionSheet: UIActionSheet;
                                        willDismissWithButtonIndex
                                        : NSInteger); cdecl;
                                        [MethodName
                                        ('actionSheet:didDismissWithButtonIndex:')
                                        ]
                                        procedure actionSheetDidDismissWithButtonIndex
                                        (actionSheet: UIActionSheet;
                                        didDismissWithButtonIndex
                                        : NSInteger); cdecl;
                                        end;

                                        UIActivityItemSource = interface
                                        (IObjectiveC)
                                        ['{54683E6B-90B2-4475-80E0-9EE0BBEFA9B1}']
                                        function activityViewControllerPlaceholderItem
                                        (activityViewController
                                        : UIActivityViewController): Pointer;
                                        cdecl;
                                        [MethodName
                                        ('activityViewController:itemForActivityType:')
                                        ]
                                        function activityViewControllerItemForActivityType
                                        (activityViewController
                                        : UIActivityViewController;
                                        itemForActivityType: NSString)
                                        : Pointer; cdecl;
                                        [MethodName
                                        ('activityViewController:subjectForActivityType:')
                                        ]
                                        function activityViewControllerSubjectForActivityType
                                        (activityViewController
                                        : UIActivityViewController;
                                        subjectForActivityType: NSString)
                                        : NSString; cdecl;
                                        [MethodName
                                        ('activityViewController:dataTypeIdentifierForActivityType:')
                                        ]
                                        function activityViewControllerDataTypeIdentifierForActivityType
                                        (activityViewController
                                        : UIActivityViewController;
                                        dataTypeIdentifierForActivityType
                                        : NSString): NSString; cdecl;
                                        [MethodName
                                        ('activityViewController:thumbnailImageForActivityType:suggestedSize:')
                                        ]
                                        function activityViewControllerThumbnailImageForActivityTypeSuggestedSize
                                        (activityViewController
                                        : UIActivityViewController;
                                        thumbnailImageForActivityType: NSString;
                                        suggestedSize: CGSize): UIImage; cdecl;
                                        end;

                                        UIAlertViewDelegate = interface
                                        (IObjectiveC)
                                        ['{6B8CF2C2-ECDF-4F29-8A86-8D9F4771AA96}']
                                        [MethodName
                                        ('alertView:clickedButtonAtIndex:')]
                                        procedure alertViewClickedButtonAtIndex
                                        (alertView: UIAlertView;
                                        clickedButtonAtIndex: NSInteger);
                                        cdecl;
                                        procedure alertViewCancel
                                        (alertView: UIAlertView); cdecl;
                                        procedure willPresentAlertView
                                        (alertView: UIAlertView); cdecl;
                                        procedure didPresentAlertView
                                        (alertView: UIAlertView); cdecl;
                                        [MethodName
                                        ('alertView:willDismissWithButtonIndex:')
                                        ]
                                        procedure alertViewWillDismissWithButtonIndex
                                        (alertView: UIAlertView;
                                        willDismissWithButtonIndex
                                        : NSInteger); cdecl;
                                        [MethodName
                                        ('alertView:didDismissWithButtonIndex:')
                                        ]
                                        procedure alertViewDidDismissWithButtonIndex
                                        (alertView: UIAlertView;
                                        didDismissWithButtonIndex
                                        : NSInteger); cdecl;
                                        function alertViewShouldEnableFirstOtherButton
                                        (alertView: UIAlertView)
                                        : Boolean; cdecl;
                                        end;

                                        UIApplicationDelegate = interface
                                        (IObjectiveC)
                                        ['{9372266D-85A8-4F87-887D-2318C19D239B}']
                                        procedure applicationDidFinishLaunching
                                        (application: UIApplication);
                                        cdecl;
                                        [MethodName
                                        ('application:willFinishLaunchingWithOptions:')
                                        ]
                                        function applicationWillFinishLaunchingWithOptions
                                        (application: UIApplication;
                                        willFinishLaunchingWithOptions
                                        : NSDictionary): Boolean; cdecl;
                                        [MethodName
                                        ('application:didFinishLaunchingWithOptions:')
                                        ]
                                        function applicationDidFinishLaunchingWithOptions
                                        (application: UIApplication;
                                        didFinishLaunchingWithOptions
                                        : NSDictionary): Boolean; cdecl;
                                        procedure applicationDidBecomeActive
                                        (application: UIApplication); cdecl;
                                        procedure applicationWillResignActive
                                        (application: UIApplication); cdecl;
                                        [MethodName
                                        ('application:handleOpenURL:')]
                                        function applicationHandleOpenURL
                                        (application: UIApplication;
                                        handleOpenURL: NSURL): Boolean; cdecl;
                                        [MethodName
                                        ('application:openURL:sourceApplication:annotation:')
                                        ]
                                        function applicationOpenURLSourceApplicationAnnotation
                                        (application: UIApplication;
                                        openURL: NSURL;
                                        sourceApplication: NSString;
                                        annotation: Pointer): Boolean; cdecl;
                                        [MethodName
                                        ('application:openURL:options:')]
                                        function applicationOpenURLOptions
                                        (app: UIApplication; openURL: NSURL;
                                        options: NSDictionary): Boolean; cdecl;
                                        procedure applicationDidReceiveMemoryWarning
                                        (application: UIApplication); cdecl;
                                        procedure applicationWillTerminate
                                        (application: UIApplication); cdecl;
                                        procedure applicationSignificantTimeChange
                                        (application: UIApplication); cdecl;
                                        [MethodName
                                        ('application:willChangeStatusBarOrientation:duration:')
                                        ]
                                        procedure applicationWillChangeStatusBarOrientationDuration
                                        (application: UIApplication;
                                        willChangeStatusBarOrientation
                                        : UIInterfaceOrientation;
                                        duration: NSTimeInterval); cdecl;
                                        [MethodName
                                        ('application:didChangeStatusBarOrientation:')
                                        ]
                                        procedure applicationDidChangeStatusBarOrientation
                                        (application: UIApplication;
                                        didChangeStatusBarOrientation
                                        : UIInterfaceOrientation); cdecl;
                                        [MethodName
                                        ('application:willChangeStatusBarFrame:')
                                        ]
                                        procedure applicationWillChangeStatusBarFrame
                                        (application: UIApplication;
                                        willChangeStatusBarFrame
                                        : CGRect); cdecl;
                                        [MethodName
                                        ('application:didChangeStatusBarFrame:')
                                        ]
                                        procedure applicationDidChangeStatusBarFrame
                                        (application: UIApplication;
                                        didChangeStatusBarFrame: CGRect); cdecl;
                                        [MethodName
                                        ('application:didRegisterUserNotificationSettings:')
                                        ]
                                        procedure applicationDidRegisterUserNotificationSettings
                                        (application: UIApplication;
                                        didRegisterUserNotificationSettings
                                        : UIUserNotificationSettings); cdecl;
                                        [MethodName
                                        ('application:didRegisterForRemoteNotificationsWithDeviceToken:')
                                        ]
                                        procedure applicationDidRegisterForRemoteNotificationsWithDeviceToken
                                        (application: UIApplication;
                                        didRegisterForRemoteNotificationsWithDeviceToken
                                        : NSData); cdecl;
                                        [MethodName
                                        ('application:didFailToRegisterForRemoteNotificationsWithError:')
                                        ]
                                        procedure applicationDidFailToRegisterForRemoteNotificationsWithError
                                        (application: UIApplication;
                                        didFailToRegisterForRemoteNotificationsWithError
                                        : NSError); cdecl;
                                        [MethodName
                                        ('application:didReceiveRemoteNotification:')
                                        ]
                                        procedure applicationDidReceiveRemoteNotification
                                        (application: UIApplication;
                                        didReceiveRemoteNotification
                                        : NSDictionary); cdecl;
                                        [MethodName
                                        ('application:didReceiveLocalNotification:')
                                        ]
                                        procedure applicationDidReceiveLocalNotification
                                        (application: UIApplication;
                                        didReceiveLocalNotification
                                        : UILocalNotification); cdecl;
                                        [MethodName
                                        ('application:handleActionWithIdentifier:forLocalNotification:completionHandler:')
                                        ]
                                        procedure applicationHandleActionWithIdentifierForLocalNotificationCompletionHandler
                                        (application: UIApplication;
                                        handleActionWithIdentifier: NSString;
                                        forLocalNotification
                                        : UILocalNotification;
                                        completionHandler: TUIKitAction); cdecl;
                                        [MethodName
                                        ('application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:')
                                        ]
                                        procedure applicationHandleActionWithIdentifierForRemoteNotificationWithResponseInfoCompletionHandler
                                        (application: UIApplication;
                                        handleActionWithIdentifier: NSString;
                                        forRemoteNotification: NSDictionary;
                                        withResponseInfo: NSDictionary;
                                        completionHandler: TUIKitAction); cdecl;
                                        [MethodName
                                        ('application:handleActionWithIdentifier:forRemoteNotification:completionHandler:')
                                        ]
                                        procedure applicationHandleActionWithIdentifierForRemoteNotificationCompletionHandler
                                        (application: UIApplication;
                                        handleActionWithIdentifier: NSString;
                                        forRemoteNotification: NSDictionary;
                                        completionHandler: TUIKitAction); cdecl;
                                        [MethodName
                                        ('application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:')
                                        ]
                                        procedure applicationHandleActionWithIdentifierForLocalNotificationWithResponseInfoCompletionHandler
                                        (application: UIApplication;
                                        handleActionWithIdentifier: NSString;
                                        forLocalNotification
                                        : UILocalNotification;
                                        withResponseInfo: NSDictionary;
                                        completionHandler: TUIKitAction); cdecl;
                                        [MethodName
                                        ('application:didReceiveRemoteNotification:fetchCompletionHandler:')
                                        ]
                                        procedure applicationDidReceiveRemoteNotificationFetchCompletionHandler
                                        (application: UIApplication;
                                        didReceiveRemoteNotification
                                        : NSDictionary;
                                        fetchCompletionHandler
                                        : TUIKitFetchCompletionHandler); cdecl;
                                        [MethodName
                                        ('application:performFetchWithCompletionHandler:')
                                        ]
                                        procedure applicationPerformFetchWithCompletionHandler
                                        (application: UIApplication;
                                        performFetchWithCompletionHandler
                                        : TUIKitFetchCompletionHandler); cdecl;
                                        [MethodName
                                        ('application:performActionForShortcutItem:completionHandler:')
                                        ]
                                        procedure applicationPerformActionForShortcutItemCompletionHandler
                                        (application: UIApplication;
                                        performActionForShortcutItem
                                        : UIApplicationShortcutItem;
                                        completionHandler
                                        : TUIKitCompletion); cdecl;
                                        [MethodName
                                        ('application:handleEventsForBackgroundURLSession:completionHandler:')
                                        ]
                                        procedure applicationHandleEventsForBackgroundURLSessionCompletionHandler
                                        (application: UIApplication;
                                        handleEventsForBackgroundURLSession
                                        : NSString;
                                        completionHandler: TUIKitAction); cdecl;
                                        [MethodName
                                        ('application:handleWatchKitExtensionRequest:reply:')
                                        ]
                                        procedure applicationHandleWatchKitExtensionRequestReply
                                        (application: UIApplication;
                                        handleWatchKitExtensionRequest
                                        : NSDictionary;
                                        reply: TUIKitReply); cdecl;
                                        procedure applicationShouldRequestHealthAuthorization
                                        (application: UIApplication); cdecl;
                                        procedure applicationDidEnterBackground
                                        (application: UIApplication); cdecl;
                                        procedure applicationWillEnterForeground
                                        (application: UIApplication); cdecl;
                                        procedure applicationProtectedDataWillBecomeUnavailable
                                        (application: UIApplication); cdecl;
                                        procedure applicationProtectedDataDidBecomeAvailable
                                        (application: UIApplication); cdecl;
                                        procedure setWindow
                                        (window: UIWindow); cdecl;
                                        function window: UIWindow; cdecl;
                                        [MethodName
                                        ('application:supportedInterfaceOrientationsForWindow:')
                                        ]
                                        function applicationSupportedInterfaceOrientationsForWindow
                                        (application: UIApplication;
                                        supportedInterfaceOrientationsForWindow
                                        : UIWindow)
                                        : UIInterfaceOrientationMask; cdecl;
                                        [MethodName
                                        ('application:shouldAllowExtensionPointIdentifier:')
                                        ]
                                        function applicationShouldAllowExtensionPointIdentifier
                                        (application: UIApplication;
                                        shouldAllowExtensionPointIdentifier
                                        : NSString): Boolean; cdecl;
                                        [MethodName
                                        ('application:viewControllerWithRestorationIdentifierPath:coder:')
                                        ]
                                        function applicationViewControllerWithRestorationIdentifierPathCoder
                                        (application: UIApplication;
                                        viewControllerWithRestorationIdentifierPath
                                        : NSArray; coder: NSCoder)
                                        : UIViewController; cdecl;
                                        [MethodName
                                        ('application:shouldSaveApplicationState:')
                                        ]
                                        function applicationShouldSaveApplicationState
                                        (application: UIApplication;
                                        shouldSaveApplicationState: NSCoder)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('application:shouldRestoreApplicationState:')
                                        ]
                                        function applicationShouldRestoreApplicationState
                                        (application: UIApplication;
                                        shouldRestoreApplicationState: NSCoder)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('application:willEncodeRestorableStateWithCoder:')
                                        ]
                                        procedure applicationWillEncodeRestorableStateWithCoder
                                        (application: UIApplication;
                                        willEncodeRestorableStateWithCoder
                                        : NSCoder); cdecl;
                                        [MethodName
                                        ('application:didDecodeRestorableStateWithCoder:')
                                        ]
                                        procedure applicationDidDecodeRestorableStateWithCoder
                                        (application: UIApplication;
                                        didDecodeRestorableStateWithCoder
                                        : NSCoder); cdecl;
                                        [MethodName
                                        ('application:willContinueUserActivityWithType:')
                                        ]
                                        function applicationWillContinueUserActivityWithType
                                        (application: UIApplication;
                                        willContinueUserActivityWithType
                                        : NSString): Boolean; cdecl;
                                        [MethodName
                                        ('application:continueUserActivity:restorationHandler:')
                                        ]
                                        function applicationContinueUserActivityRestorationHandler
                                        (application: UIApplication;
                                        continueUserActivity: NSUserActivity;
                                        restorationHandler
                                        : TUIKitRestorationHandler)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('application:didFailToContinueUserActivityWithType:error:')
                                        ]
                                        procedure applicationDidFailToContinueUserActivityWithTypeError
                                        (application: UIApplication;
                                        didFailToContinueUserActivityWithType
                                        : NSString; error: NSError); cdecl;
                                        [MethodName
                                        ('application:didUpdateUserActivity:')]
                                        procedure applicationDidUpdateUserActivity
                                        (application: UIApplication;
                                        didUpdateUserActivity
                                        : NSUserActivity); cdecl;
                                        end;

                                        UIStateRestoring = interface
                                        (IObjectiveC)
                                        ['{BF157C40-968C-4CBF-98FB-016F70185AF1}']
                                        function restorationParent: Pointer;
                                        cdecl;
                                        function objectRestorationClass
                                        : Pointer; cdecl;
                                        procedure encodeRestorableStateWithCoder
                                        (coder: NSCoder); cdecl;
                                        procedure decodeRestorableStateWithCoder
                                        (coder: NSCoder); cdecl;
                                        procedure applicationFinishedRestoringState;
                                        cdecl;
                                        end;

                                        UIViewControllerRestoration = interface
                                        (IObjectiveC)
                                        ['{5463D5D9-8B5C-48D9-907A-BF2746B115F1}']
                                        function viewControllerWithRestorationIdentifierPath
                                        (identifierComponents: NSArray;
                                        coder: NSCoder): UIViewController;
                                        cdecl;
                                        end;

                                        UIDataSourceModelAssociation = interface
                                        (IObjectiveC)
                                        ['{D094DCCF-E692-44F0-B33F-7C41FB82BFC1}']
                                        function modelIdentifierForElementAtIndexPath
                                        (idx: NSIndexPath; inView: UIView)
                                        : NSString;
                                        cdecl;
                                        function indexPathForElementWithModelIdentifier
                                        (identifier: NSString; inView: UIView)
                                        : NSIndexPath; cdecl;
                                        end;

                                        UIObjectRestoration = interface
                                        (IObjectiveC)
                                        ['{D8EC1746-B6CB-4423-B107-46616A2A70EE}']
                                        function objectWithRestorationIdentifierPath
                                        (identifierComponents: NSArray;
                                        coder: NSCoder): Pointer;
                                        cdecl;
                                        end;

                                        UIViewControllerTransitionCoordinator =
                                        interface(IObjectiveC)
                                        ['{3BBD6F76-CD05-41B0-B976-07A8C7EB4A16}']
                                        function animateAlongsideTransition
                                        (animation: TUIKitAnimation;
                                        completion: TUIKitAnimation): Boolean;
                                        cdecl;
                                        function animateAlongsideTransitionInView
                                        (view: UIView;
                                        animation: TUIKitAnimation;
                                        completion: TUIKitAnimation)
                                        : Boolean; cdecl;
                                        procedure notifyWhenInteractionEndsUsingBlock
                                        (handler: TUIKitAnimation); cdecl;
                                        end;

                                        UIContentContainer = interface
                                        (IObjectiveC)
                                        ['{E5A4025D-42E2-4330-890A-3B96A8E76979}']
                                        function preferredContentSize: CGSize;
                                        cdecl;
                                        procedure preferredContentSizeDidChangeForChildContentContainer
                                        (container: Pointer); cdecl;
                                        procedure systemLayoutFittingSizeDidChangeForChildContentContainer
                                        (container: Pointer); cdecl;
                                        function sizeForChildContentContainer
                                        (container: Pointer;
                                        withParentContainerSize: CGSize)
                                        : CGSize; cdecl;
                                        procedure viewWillTransitionToSize
                                        (size: CGSize;
                                        withTransitionCoordinator
                                        : Pointer); cdecl;
                                        procedure willTransitionToTraitCollection
                                        (newCollection: UITraitCollection;
                                        withTransitionCoordinator
                                        : Pointer); cdecl;
                                        end;

                                        UIViewControllerTransitioningDelegate =
                                        interface(IObjectiveC)
                                        ['{3A619F6D-E8EB-411D-960A-5D9E45BDA659}']
                                        function animationControllerForPresentedController
                                        (presented: UIViewController;
                                        presentingController: UIViewController;
                                        sourceController: UIViewController)
                                        : Pointer;
                                        cdecl;
                                        function animationControllerForDismissedController
                                        (dismissed: UIViewController)
                                        : Pointer; cdecl;
                                        function interactionControllerForPresentation
                                        (animator: Pointer): Pointer; cdecl;
                                        function interactionControllerForDismissal
                                        (animator: Pointer): Pointer; cdecl;
                                        function presentationControllerForPresentedViewController
                                        (presented: UIViewController;
                                        presentingViewController
                                        : UIViewController;
                                        sourceViewController: UIViewController)
                                        : UIPresentationController; cdecl;
                                        end;

                                        UIViewControllerPreviewingDelegate =
                                        interface(IObjectiveC)
                                        ['{B412837F-6F06-4031-8BDC-E4603838088C}']
                                        [MethodName
                                        ('previewingContext:viewControllerForLocation:')
                                        ]
                                        function previewingContextViewControllerForLocation
                                        (previewingContext: Pointer;
                                        viewControllerForLocation: CGPoint)
                                        : UIViewController;
                                        cdecl;
                                        [MethodName
                                        ('previewingContext:commitViewController:')
                                        ]
                                        procedure previewingContextCommitViewController
                                        (previewingContext: Pointer;
                                        commitViewController
                                        : UIViewController); cdecl;
                                        end;

                                        UIViewControllerPreviewing = interface
                                        (IObjectiveC)
                                        ['{BE3663E2-FECD-4B0B-9EF8-D20523C83302}']
                                        function previewingGestureRecognizerForFailureRelationship
                                        : UIGestureRecognizer;
                                        cdecl;
                                        function delegate: Pointer; cdecl;
                                        function sourceView: UIView; cdecl;
                                        procedure setSourceRect
                                        (sourceRect: CGRect); cdecl;
                                        function sourceRect: CGRect; cdecl;
                                        end;

                                        UIPreviewActionItem = interface
                                        (IObjectiveC)
                                        ['{32140B9F-C674-4AA2-9EFF-A0EFD6A45671}']
                                        function title: NSString;
                                        cdecl;
                                        end;

                                        UIBarPositioning = interface
                                        (IObjectiveC)
                                        ['{EAC35CF4-C31D-45E0-9702-479956C3C383}']
                                        function barPosition: UIBarPosition;
                                        cdecl;
                                        end;

                                        UIBarPositioningDelegate = interface
                                        (IObjectiveC)
                                        ['{73D29D3F-C009-4040-A4A3-1E5D237A71CB}']
                                        function positionForBar(bar: Pointer)
                                        : UIBarPosition;
                                        cdecl;
                                        end;

                                        UICollectionViewDataSource = interface
                                        (IObjectiveC)
                                        ['{C5EC5DEB-4DFB-4D05-8C13-59EDB82C0E6A}']
                                        [MethodName
                                        ('collectionView:numberOfItemsInSection:')
                                        ]
                                        function collectionViewNumberOfItemsInSection
                                        (collectionView: UICollectionView;
                                        numberOfItemsInSection: NSInteger)
                                        : NSInteger;
                                        cdecl;
                                        [MethodName
                                        ('collectionView:cellForItemAtIndexPath:')
                                        ]
                                        function collectionViewCellForItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        cellForItemAtIndexPath: NSIndexPath)
                                        : UICollectionViewCell; cdecl;
                                        function numberOfSectionsInCollectionView
                                        (collectionView: UICollectionView)
                                        : NSInteger; cdecl;
                                        [MethodName
                                        ('collectionView:viewForSupplementaryElementOfKind:atIndexPath:')
                                        ]
                                        function collectionViewViewForSupplementaryElementOfKindAtIndexPath
                                        (collectionView: UICollectionView;
                                        viewForSupplementaryElementOfKind
                                        : NSString; atIndexPath: NSIndexPath)
                                        : UICollectionReusableView; cdecl;
                                        [MethodName
                                        ('collectionView:canMoveItemAtIndexPath:')
                                        ]
                                        function collectionViewCanMoveItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        canMoveItemAtIndexPath: NSIndexPath)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('collectionView:moveItemAtIndexPath:toIndexPath:')
                                        ]
                                        procedure collectionViewMoveItemAtIndexPathToIndexPath
                                        (collectionView: UICollectionView;
                                        moveItemAtIndexPath: NSIndexPath;
                                        toIndexPath: NSIndexPath); cdecl;
                                        end;

                                        UICollectionViewDelegate = interface
                                        (IObjectiveC)
                                        ['{6D6BB1A2-5F12-4AC1-9DB8-0AAF0D6BC6CF}']
                                        [MethodName
                                        ('collectionView:shouldHighlightItemAtIndexPath:')
                                        ]
                                        function collectionViewShouldHighlightItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        shouldHighlightItemAtIndexPath
                                        : NSIndexPath): Boolean;
                                        cdecl;
                                        [MethodName
                                        ('collectionView:didHighlightItemAtIndexPath:')
                                        ]
                                        procedure collectionViewDidHighlightItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        didHighlightItemAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:didUnhighlightItemAtIndexPath:')
                                        ]
                                        procedure collectionViewDidUnhighlightItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        didUnhighlightItemAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:shouldSelectItemAtIndexPath:')
                                        ]
                                        function collectionViewShouldSelectItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        shouldSelectItemAtIndexPath
                                        : NSIndexPath): Boolean; cdecl;
                                        [MethodName
                                        ('collectionView:shouldDeselectItemAtIndexPath:')
                                        ]
                                        function collectionViewShouldDeselectItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        shouldDeselectItemAtIndexPath
                                        : NSIndexPath): Boolean; cdecl;
                                        [MethodName
                                        ('collectionView:didSelectItemAtIndexPath:')
                                        ]
                                        procedure collectionViewDidSelectItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        didSelectItemAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:didDeselectItemAtIndexPath:')
                                        ]
                                        procedure collectionViewDidDeselectItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        didDeselectItemAtIndexPath
                                        : NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:willDisplayCell:forItemAtIndexPath:')
                                        ]
                                        procedure collectionViewWillDisplayCellForItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        willDisplayCell: UICollectionViewCell;
                                        forItemAtIndexPath: NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:')
                                        ]
                                        procedure collectionViewWillDisplaySupplementaryViewForElementKindAtIndexPath
                                        (collectionView: UICollectionView;
                                        willDisplaySupplementaryView
                                        : UICollectionReusableView;
                                        forElementKind: NSString;
                                        atIndexPath: NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:didEndDisplayingCell:forItemAtIndexPath:')
                                        ]
                                        procedure collectionViewDidEndDisplayingCellForItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        didEndDisplayingCell
                                        : UICollectionViewCell;
                                        forItemAtIndexPath: NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:')
                                        ]
                                        procedure collectionViewDidEndDisplayingSupplementaryViewForElementOfKindAtIndexPath
                                        (collectionView: UICollectionView;
                                        didEndDisplayingSupplementaryView
                                        : UICollectionReusableView;
                                        forElementOfKind: NSString;
                                        atIndexPath: NSIndexPath); cdecl;
                                        [MethodName
                                        ('collectionView:shouldShowMenuForItemAtIndexPath:')
                                        ]
                                        function collectionViewShouldShowMenuForItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        shouldShowMenuForItemAtIndexPath
                                        : NSIndexPath): Boolean; cdecl;
                                        [MethodName
                                        ('collectionView:canPerformAction:forItemAtIndexPath:withSender:')
                                        ]
                                        function collectionViewCanPerformActionForItemAtIndexPathWithSender
                                        (collectionView: UICollectionView;
                                        canPerformAction: SEL;
                                        forItemAtIndexPath: NSIndexPath;
                                        withSender: Pointer): Boolean; cdecl;
                                        [MethodName
                                        ('collectionView:performAction:forItemAtIndexPath:withSender:')
                                        ]
                                        procedure collectionViewPerformActionForItemAtIndexPathWithSender
                                        (collectionView: UICollectionView;
                                        performAction: SEL;
                                        forItemAtIndexPath: NSIndexPath;
                                        withSender: Pointer); cdecl;
                                        [MethodName
                                        ('collectionView:transitionLayoutForOldLayout:newLayout:')
                                        ]
                                        function collectionViewTransitionLayoutForOldLayoutNewLayout
                                        (collectionView: UICollectionView;
                                        transitionLayoutForOldLayout
                                        : UICollectionViewLayout;
                                        newLayout: UICollectionViewLayout)
                                        : UICollectionViewTransitionLayout;
                                        cdecl;
                                        [MethodName
                                        ('collectionView:canFocusItemAtIndexPath:')
                                        ]
                                        function collectionViewCanFocusItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        canFocusItemAtIndexPath: NSIndexPath)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('collectionView:shouldUpdateFocusInContext:')
                                        ]
                                        function collectionViewShouldUpdateFocusInContext
                                        (collectionView: UICollectionView;
                                        shouldUpdateFocusInContext
                                        : UICollectionViewFocusUpdateContext)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('collectionView:didUpdateFocusInContext:withAnimationCoordinator:')
                                        ]
                                        procedure collectionViewDidUpdateFocusInContextWithAnimationCoordinator
                                        (collectionView: UICollectionView;
                                        didUpdateFocusInContext
                                        : UICollectionViewFocusUpdateContext;
                                        withAnimationCoordinator
                                        : UIFocusAnimationCoordinator); cdecl;
                                        function indexPathForPreferredFocusedViewInCollectionView
                                        (collectionView: UICollectionView)
                                        : NSIndexPath; cdecl;
                                        [MethodName
                                        ('collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:')
                                        ]
                                        function collectionViewTargetIndexPathForMoveFromItemAtIndexPathToProposedIndexPath
                                        (collectionView: UICollectionView;
                                        targetIndexPathForMoveFromItemAtIndexPath
                                        : NSIndexPath;
                                        toProposedIndexPath: NSIndexPath)
                                        : NSIndexPath; cdecl;
                                        [MethodName
                                        ('collectionView:targetContentOffsetForProposedContentOffset:')
                                        ]
                                        function collectionViewTargetContentOffsetForProposedContentOffset
                                        (collectionView: UICollectionView;
                                        targetContentOffsetForProposedContentOffset
                                        : CGPoint): CGPoint; cdecl;
                                        end;

                                        UICollectionViewDelegateFlowLayout =
                                        interface(IObjectiveC)
                                        ['{24B22A80-5F6B-4EF2-B263-6584458E7746}']
                                        [MethodName
                                        ('collectionView:layout:sizeForItemAtIndexPath:')
                                        ]
                                        function collectionViewLayoutSizeForItemAtIndexPath
                                        (collectionView: UICollectionView;
                                        layout: UICollectionViewLayout;
                                        sizeForItemAtIndexPath
                                        : NSIndexPath): CGSize;
                                        cdecl;
                                        [MethodName
                                        ('collectionView:layout:insetForSectionAtIndex:')
                                        ]
                                        function collectionViewLayoutInsetForSectionAtIndex
                                        (collectionView: UICollectionView;
                                        layout: UICollectionViewLayout;
                                        insetForSectionAtIndex: NSInteger)
                                        : UIEdgeInsets; cdecl;
                                        [MethodName
                                        ('collectionView:layout:minimumLineSpacingForSectionAtIndex:')
                                        ]
                                        function collectionViewLayoutMinimumLineSpacingForSectionAtIndex
                                        (collectionView: UICollectionView;
                                        layout: UICollectionViewLayout;
                                        minimumLineSpacingForSectionAtIndex
                                        : NSInteger): CGFloat; cdecl;
                                        [MethodName
                                        ('collectionView:layout:minimumInteritemSpacingForSectionAtIndex:')
                                        ]
                                        function collectionViewLayoutMinimumInteritemSpacingForSectionAtIndex
                                        (collectionView: UICollectionView;
                                        layout: UICollectionViewLayout;
                                        minimumInteritemSpacingForSectionAtIndex
                                        : NSInteger): CGFloat; cdecl;
                                        [MethodName
                                        ('collectionView:layout:referenceSizeForHeaderInSection:')
                                        ]
                                        function collectionViewLayoutReferenceSizeForHeaderInSection
                                        (collectionView: UICollectionView;
                                        layout: UICollectionViewLayout;
                                        referenceSizeForHeaderInSection
                                        : NSInteger): CGSize; cdecl;
                                        [MethodName
                                        ('collectionView:layout:referenceSizeForFooterInSection:')
                                        ]
                                        function collectionViewLayoutReferenceSizeForFooterInSection
                                        (collectionView: UICollectionView;
                                        layout: UICollectionViewLayout;
                                        referenceSizeForFooterInSection
                                        : NSInteger): CGSize; cdecl;
                                        end;

                                        UIDocumentInteractionControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{E038BA74-46B9-4956-9237-843013F99974}']
                                        function documentInteractionControllerViewControllerForPreview
                                        (controller
                                        : UIDocumentInteractionController)
                                        : UIViewController;
                                        cdecl;
                                        function documentInteractionControllerRectForPreview
                                        (controller
                                        : UIDocumentInteractionController)
                                        : CGRect; cdecl;
                                        function documentInteractionControllerViewForPreview
                                        (controller
                                        : UIDocumentInteractionController)
                                        : UIView; cdecl;
                                        procedure documentInteractionControllerWillBeginPreview
                                        (controller
                                        : UIDocumentInteractionController);
                                        cdecl;
                                        procedure documentInteractionControllerDidEndPreview
                                        (controller
                                        : UIDocumentInteractionController);
                                        cdecl;
                                        procedure documentInteractionControllerWillPresentOptionsMenu
                                        (controller
                                        : UIDocumentInteractionController);
                                        cdecl;
                                        procedure documentInteractionControllerDidDismissOptionsMenu
                                        (controller
                                        : UIDocumentInteractionController);
                                        cdecl;
                                        procedure documentInteractionControllerWillPresentOpenInMenu
                                        (controller
                                        : UIDocumentInteractionController);
                                        cdecl;
                                        procedure documentInteractionControllerDidDismissOpenInMenu
                                        (controller
                                        : UIDocumentInteractionController);
                                        cdecl;
                                        [MethodName
                                        ('documentInteractionController:willBeginSendingToApplication:')
                                        ]
                                        procedure documentInteractionControllerWillBeginSendingToApplication
                                        (controller
                                        : UIDocumentInteractionController;
                                        willBeginSendingToApplication
                                        : NSString); cdecl;
                                        [MethodName
                                        ('documentInteractionController:didEndSendingToApplication:')
                                        ]
                                        procedure documentInteractionControllerDidEndSendingToApplication
                                        (controller
                                        : UIDocumentInteractionController;
                                        didEndSendingToApplication
                                        : NSString); cdecl;
                                        [MethodName
                                        ('documentInteractionController:canPerformAction:')
                                        ]
                                        function documentInteractionControllerCanPerformAction
                                        (controller
                                        : UIDocumentInteractionController;
                                        canPerformAction: SEL): Boolean; cdecl;
                                        [MethodName
                                        ('documentInteractionController:performAction:')
                                        ]
                                        function documentInteractionControllerPerformAction
                                        (controller
                                        : UIDocumentInteractionController;
                                        performAction: SEL): Boolean; cdecl;
                                        end;

                                        UIDocumentPickerDelegate = interface
                                        (IObjectiveC)
                                        ['{2797D812-48C6-464B-AB98-9275377D07F8}']
                                        procedure documentPicker
                                        (controller
                                        : UIDocumentPickerViewController;
                                        didPickDocumentAtURL: NSURL);
                                        cdecl;
                                        procedure documentPickerWasCancelled
                                        (controller
                                        : UIDocumentPickerViewController);
                                        cdecl;
                                        end;

                                        UIDocumentMenuDelegate = interface
                                        (IObjectiveC)
                                        ['{B849ECDC-D201-4131-9772-816862674AEB}']
                                        procedure documentMenu
                                        (documentMenu
                                        : UIDocumentMenuViewController;
                                        didPickDocumentPicker
                                        : UIDocumentPickerViewController);
                                        cdecl;
                                        procedure documentMenuWasCancelled
                                        (documentMenu
                                        : UIDocumentMenuViewController); cdecl;
                                        end;

                                        UINavigationControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{F9AD111D-E332-4C0F-8612-7CAF4047A62E}']
                                        [MethodName
                                        ('navigationController:willShowViewController:animated:')
                                        ]
                                        procedure navigationControllerWillShowViewControllerAnimated
                                        (navigationController
                                        : UINavigationController;
                                        willShowViewController
                                        : UIViewController; animated: Boolean);
                                        cdecl;
                                        [MethodName
                                        ('navigationController:didShowViewController:animated:')
                                        ]
                                        procedure navigationControllerDidShowViewControllerAnimated
                                        (navigationController
                                        : UINavigationController;
                                        didShowViewController: UIViewController;
                                        animated: Boolean); cdecl;
                                        function navigationControllerSupportedInterfaceOrientations
                                        (navigationController
                                        : UINavigationController)
                                        : UIInterfaceOrientationMask; cdecl;
                                        function navigationControllerPreferredInterfaceOrientationForPresentation
                                        (navigationController
                                        : UINavigationController)
                                        : UIInterfaceOrientation; cdecl;
                                        [MethodName
                                        ('navigationController:interactionControllerForAnimationController:')
                                        ]
                                        function navigationControllerInteractionControllerForAnimationController
                                        (navigationController
                                        : UINavigationController;
                                        interactionControllerForAnimationController
                                        : Pointer): Pointer; cdecl;
                                        [MethodName
                                        ('navigationController:animationControllerForOperation:fromViewController:toViewController:')
                                        ]
                                        function navigationControllerAnimationControllerForOperationFromViewControllerToViewController
                                        (navigationController
                                        : UINavigationController;
                                        animationControllerForOperation
                                        : UINavigationControllerOperation;
                                        fromViewController: UIViewController;
                                        toViewController: UIViewController)
                                        : Pointer; cdecl;
                                        end;

                                        UIViewControllerInteractiveTransitioning =
                                        interface(IObjectiveC)
                                        ['{AABC402A-BED1-43A9-A763-CC4A27C946AA}']
                                        procedure startInteractiveTransition
                                        (transitionContext: Pointer);
                                        cdecl;
                                        function completionSpeed
                                        : CGFloat; cdecl;
                                        function completionCurve
                                        : UIViewAnimationCurve; cdecl;
                                        end;

                                        UIViewControllerAnimatedTransitioning =
                                        interface(IObjectiveC)
                                        ['{5DA76D45-A0BA-4667-BC9D-58173740DBCB}']
                                        function transitionDuration
                                        (transitionContext: Pointer)
                                        : NSTimeInterval;
                                        cdecl;
                                        procedure animateTransition
                                        (transitionContext: Pointer); cdecl;
                                        procedure animationEnded
                                        (transitionCompleted: Boolean); cdecl;
                                        end;

                                        UIImagePickerControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{EBE1C07F-6E43-45FD-86DC-2F1E43528620}']
                                        [MethodName
                                        ('imagePickerController:didFinishPickingImage:editingInfo:')
                                        ]
                                        procedure imagePickerControllerDidFinishPickingImageEditingInfo
                                        (picker: UIImagePickerController;
                                        didFinishPickingImage: UIImage;
                                        editingInfo: NSDictionary);
                                        cdecl;
                                        [MethodName
                                        ('imagePickerController:didFinishPickingMediaWithInfo:')
                                        ]
                                        procedure imagePickerControllerDidFinishPickingMediaWithInfo
                                        (picker: UIImagePickerController;
                                        didFinishPickingMediaWithInfo
                                        : NSDictionary); cdecl;
                                        procedure imagePickerControllerDidCancel
                                        (picker: UIImagePickerController);
                                        cdecl;
                                        end;

                                        UITextDocumentProxy = interface
                                        (IObjectiveC)
                                        ['{6C288468-85E7-4F54-A43A-B5B2C678C033}']
                                        function documentContextBeforeInput
                                        : NSString;
                                        cdecl;
                                        function documentContextAfterInput
                                        : NSString; cdecl;
                                        procedure adjustTextPositionByCharacterOffset
                                        (offset: NSInteger); cdecl;
                                        end;

                                        UINavigationBarDelegate = interface
                                        (IObjectiveC)
                                        ['{904E6DB4-2E8E-437C-9208-2822524ED12F}']
                                        [MethodName
                                        ('navigationBar:shouldPushItem:')]
                                        function navigationBarShouldPushItem
                                        (navigationBar: UINavigationBar;
                                        shouldPushItem: UINavigationItem)
                                        : Boolean;
                                        cdecl;
                                        [MethodName
                                        ('navigationBar:didPushItem:')]
                                        procedure navigationBarDidPushItem
                                        (navigationBar: UINavigationBar;
                                        didPushItem: UINavigationItem); cdecl;
                                        [MethodName
                                        ('navigationBar:shouldPopItem:')]
                                        function navigationBarShouldPopItem
                                        (navigationBar: UINavigationBar;
                                        shouldPopItem: UINavigationItem)
                                        : Boolean; cdecl;
                                        [MethodName
                                        ('navigationBar:didPopItem:')]
                                        procedure navigationBarDidPopItem
                                        (navigationBar: UINavigationBar;
                                        didPopItem: UINavigationItem); cdecl;
                                        end;

                                        UIPageViewControllerDelegate = interface
                                        (IObjectiveC)
                                        ['{A60EFA78-0797-49A0-A32F-97516D48ADDF}']
                                        [MethodName
                                        ('pageViewController:willTransitionToViewControllers:')
                                        ]
                                        procedure pageViewControllerWillTransitionToViewControllers
                                        (pageViewController
                                        : UIPageViewController;
                                        willTransitionToViewControllers
                                        : NSArray);
                                        cdecl;
                                        [MethodName
                                        ('pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:')
                                        ]
                                        procedure pageViewControllerDidFinishAnimatingPreviousViewControllersTransitionCompleted
                                        (pageViewController
                                        : UIPageViewController;
                                        didFinishAnimating: Boolean;
                                        previousViewControllers: NSArray;
                                        transitionCompleted: Boolean); cdecl;
                                        [MethodName
                                        ('pageViewController:spineLocationForInterfaceOrientation:')
                                        ]
                                        function pageViewControllerSpineLocationForInterfaceOrientation
                                        (pageViewController
                                        : UIPageViewController;
                                        spineLocationForInterfaceOrientation
                                        : UIInterfaceOrientation)
                                        : UIPageViewControllerSpineLocation;
                                        cdecl;
                                        function pageViewControllerSupportedInterfaceOrientations
                                        (pageViewController
                                        : UIPageViewController)
                                        : UIInterfaceOrientationMask; cdecl;
                                        function pageViewControllerPreferredInterfaceOrientationForPresentation
                                        (pageViewController
                                        : UIPageViewController)
                                        : UIInterfaceOrientation; cdecl;
                                        end;

                                        UIPageViewControllerDataSource =
                                        interface(IObjectiveC)
                                        ['{177391ED-9BFC-4406-AB06-E79DA5939542}']
                                        [MethodName
                                        ('pageViewController:viewControllerBeforeViewController:')
                                        ]
                                        function pageViewControllerViewControllerBeforeViewController
                                        (pageViewController
                                        : UIPageViewController;
                                        viewControllerBeforeViewController
                                        : UIViewController): UIViewController;
                                        cdecl;
                                        [MethodName
                                        ('pageViewController:viewControllerAfterViewController:')
                                        ]
                                        function pageViewControllerViewControllerAfterViewController
                                        (pageViewController
                                        : UIPageViewController;
                                        viewControllerAfterViewController
                                        : UIViewController)
                                        : UIViewController; cdecl;
                                        function presentationCountForPageViewController
                                        (pageViewController
                                        : UIPageViewController)
                                        : NSInteger; cdecl;
                                        function presentationIndexForPageViewController
                                        (pageViewController
                                        : UIPageViewController)
                                        : NSInteger; cdecl;
                                        end;

                                        UIPopoverControllerDelegate = interface
                                        (IObjectiveC)
                                        ['{23C0AA1A-04C9-41C2-80A0-94390FB893CB}']
                                        function popoverControllerShouldDismissPopover
                                        (popoverController: UIPopoverController)
                                        : Boolean;
                                        cdecl;
                                        procedure popoverControllerDidDismissPopover
                                        (popoverController
                                        : UIPopoverController); cdecl;
                                        procedure popoverController
                                        (popoverController: UIPopoverController;
                                        willRepositionPopoverToRect: Pointer;
                                        inView: UIView); cdecl;
                                        end;

                                        UIPopoverBackgroundViewMethods =
                                        interface(IObjectiveC)
                                        ['{B21852F1-F199-44BA-B6D6-4EE59FAA9548}']
                                        function arrowBase: CGFloat;
                                        cdecl;
                                        function contentViewInsets
                                        : UIEdgeInsets; cdecl;
                                        function arrowHeight: CGFloat; cdecl;
                                        end;

                                        UIPrinterPickerControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{78C82C39-6F97-4C5E-B704-D1C62560740A}']
                                        function printerPickerControllerParentViewController
                                        (printerPickerController
                                        : UIPrinterPickerController)
                                        : UIViewController;
                                        cdecl;
                                        function printerPickerController
                                        (printerPickerController
                                        : UIPrinterPickerController;
                                        shouldShowPrinter: UIPrinter)
                                        : Boolean; cdecl;
                                        procedure printerPickerControllerWillPresent
                                        (printerPickerController
                                        : UIPrinterPickerController); cdecl;
                                        procedure printerPickerControllerDidPresent
                                        (printerPickerController
                                        : UIPrinterPickerController); cdecl;
                                        procedure printerPickerControllerWillDismiss
                                        (printerPickerController
                                        : UIPrinterPickerController); cdecl;
                                        procedure printerPickerControllerDidDismiss
                                        (printerPickerController
                                        : UIPrinterPickerController); cdecl;
                                        procedure printerPickerControllerDidSelectPrinter
                                        (printerPickerController
                                        : UIPrinterPickerController); cdecl;
                                        end;

                                        UIPrintInteractionControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{63B3A08D-5500-4C23-B259-28D048A0620E}']
                                        function printInteractionControllerParentViewController
                                        (printInteractionController
                                        : UIPrintInteractionController)
                                        : UIViewController;
                                        cdecl;
                                        [MethodName
                                        ('printInteractionController:choosePaper:')
                                        ]
                                        function printInteractionControllerChoosePaper
                                        (printInteractionController
                                        : UIPrintInteractionController;
                                        choosePaper: NSArray)
                                        : UIPrintPaper; cdecl;
                                        procedure printInteractionControllerWillPresentPrinterOptions
                                        (printInteractionController
                                        : UIPrintInteractionController); cdecl;
                                        procedure printInteractionControllerDidPresentPrinterOptions
                                        (printInteractionController
                                        : UIPrintInteractionController); cdecl;
                                        procedure printInteractionControllerWillDismissPrinterOptions
                                        (printInteractionController
                                        : UIPrintInteractionController); cdecl;
                                        procedure printInteractionControllerDidDismissPrinterOptions
                                        (printInteractionController
                                        : UIPrintInteractionController); cdecl;
                                        procedure printInteractionControllerWillStartJob
                                        (printInteractionController
                                        : UIPrintInteractionController); cdecl;
                                        procedure printInteractionControllerDidFinishJob
                                        (printInteractionController
                                        : UIPrintInteractionController); cdecl;
                                        [MethodName
                                        ('printInteractionController:cutLengthForPaper:')
                                        ]
                                        function printInteractionControllerCutLengthForPaper
                                        (printInteractionController
                                        : UIPrintInteractionController;
                                        cutLengthForPaper: UIPrintPaper)
                                        : CGFloat; cdecl;
                                        [MethodName
                                        ('printInteractionController:chooseCutterBehavior:')
                                        ]
                                        function printInteractionControllerChooseCutterBehavior
                                        (printInteractionController
                                        : UIPrintInteractionController;
                                        chooseCutterBehavior: NSArray)
                                        : UIPrinterCutterBehavior; cdecl;
                                        end;

                                        UISearchBarDelegate = interface
                                        (IObjectiveC)
                                        ['{03C38D60-8DF0-4917-9647-9FE1EE162DFF}']
                                        function searchBarShouldBeginEditing
                                        (searchBar: UISearchBar): Boolean;
                                        cdecl;
                                        procedure searchBarTextDidBeginEditing
                                        (searchBar: UISearchBar); cdecl;
                                        function searchBarShouldEndEditing
                                        (searchBar: UISearchBar)
                                        : Boolean; cdecl;
                                        procedure searchBarTextDidEndEditing
                                        (searchBar: UISearchBar); cdecl;
                                        [MethodName('searchBar:textDidChange:')]
                                        procedure searchBarTextDidChange
                                        (searchBar: UISearchBar;
                                        textDidChange: NSString); cdecl;
                                        [MethodName
                                        ('searchBar:shouldChangeTextInRange:replacementText:')
                                        ]
                                        function searchBarShouldChangeTextInRangeReplacementText
                                        (searchBar: UISearchBar;
                                        shouldChangeTextInRange: NSRange;
                                        replacementText: NSString)
                                        : Boolean; cdecl;
                                        procedure searchBarSearchButtonClicked
                                        (searchBar: UISearchBar); cdecl;
                                        procedure searchBarBookmarkButtonClicked
                                        (searchBar: UISearchBar); cdecl;
                                        procedure searchBarCancelButtonClicked
                                        (searchBar: UISearchBar); cdecl;
                                        procedure searchBarResultsListButtonClicked
                                        (searchBar: UISearchBar); cdecl;
                                        [MethodName
                                        ('searchBar:selectedScopeButtonIndexDidChange:')
                                        ]
                                        procedure searchBarSelectedScopeButtonIndexDidChange
                                        (searchBar: UISearchBar;
                                        selectedScopeButtonIndexDidChange
                                        : NSInteger); cdecl;
                                        end;

                                        UIViewControllerTransitionCoordinatorContext =
                                        interface(IObjectiveC)
                                        ['{6C5718A0-7F00-4A33-ACB4-51F33EB3381F}']
                                        function isAnimated: Boolean;
                                        cdecl;
                                        function presentationStyle
                                        : UIModalPresentationStyle; cdecl;
                                        function initiallyInteractive
                                        : Boolean; cdecl;
                                        function isInteractive: Boolean; cdecl;
                                        function isCancelled: Boolean; cdecl;
                                        function transitionDuration
                                        : NSTimeInterval; cdecl;
                                        function percentComplete
                                        : CGFloat; cdecl;
                                        function completionVelocity
                                        : CGFloat; cdecl;
                                        function completionCurve
                                        : UIViewAnimationCurve; cdecl;
                                        function viewControllerForKey
                                        (key: NSString)
                                        : UIViewController; cdecl;
                                        function viewForKey(key: NSString)
                                        : UIView; cdecl;
                                        function containerView: UIView; cdecl;
                                        function targetTransform
                                        : CGAffineTransform; cdecl;
                                        end;

                                        UIAdaptivePresentationControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{6DA2F90C-AF70-46F2-8A04-7FE7B0082FA2}']
                                        [MethodName
                                        ('adaptivePresentationStyleForPresentationController:')
                                        ]
                                        function adaptivePresentationStyleForPresentationController
                                        (controller: UIPresentationController)
                                        : UIModalPresentationStyle;
                                        cdecl;
                                        [MethodName
                                        ('adaptivePresentationStyleForPresentationController:traitCollection:')
                                        ]
                                        function adaptivePresentationStyleForPresentationControllerTraitCollection
                                        (controller: UIPresentationController;
                                        traitCollection: UITraitCollection)
                                        : UIModalPresentationStyle; cdecl;
                                        [MethodName
                                        ('presentationController:viewControllerForAdaptivePresentationStyle:')
                                        ]
                                        function presentationControllerViewControllerForAdaptivePresentationStyle
                                        (controller: UIPresentationController;
                                        viewControllerForAdaptivePresentationStyle
                                        : UIModalPresentationStyle)
                                        : UIViewController; cdecl;
                                        [MethodName
                                        ('presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:')
                                        ]
                                        procedure presentationControllerWillPresentWithAdaptiveStyleTransitionCoordinator
                                        (presentationController
                                        : UIPresentationController;
                                        willPresentWithAdaptiveStyle
                                        : UIModalPresentationStyle;
                                        transitionCoordinator: Pointer); cdecl;
                                        end;

                                        UIViewControllerContextTransitioning =
                                        interface(IObjectiveC)
                                        ['{964FD661-2F05-460E-BCBF-9D91E5F864E1}']
                                        function containerView: UIView;
                                        cdecl;
                                        function isAnimated: Boolean; cdecl;
                                        function isInteractive: Boolean; cdecl;
                                        function transitionWasCancelled
                                        : Boolean; cdecl;
                                        function presentationStyle
                                        : UIModalPresentationStyle; cdecl;
                                        procedure updateInteractiveTransition
                                        (percentComplete: CGFloat); cdecl;
                                        procedure finishInteractiveTransition;
                                        cdecl;
                                        procedure cancelInteractiveTransition;
                                        cdecl;
                                        procedure completeTransition
                                        (didComplete: Boolean); cdecl;
                                        function viewControllerForKey
                                        (key: NSString)
                                        : UIViewController; cdecl;
                                        function viewForKey(key: NSString)
                                        : UIView; cdecl;
                                        function targetTransform
                                        : CGAffineTransform; cdecl;
                                        function initialFrameForViewController
                                        (vc: UIViewController): CGRect; cdecl;
                                        function finalFrameForViewController
                                        (vc: UIViewController): CGRect; cdecl;
                                        end;

                                        UISearchControllerDelegate = interface
                                        (IObjectiveC)
                                        ['{67B592FE-257C-44F3-9B9B-B9DE2A5BC529}']
                                        procedure willPresentSearchController
                                        (searchController: UISearchController);
                                        cdecl;
                                        procedure didPresentSearchController
                                        (searchController
                                        : UISearchController); cdecl;
                                        procedure willDismissSearchController
                                        (searchController
                                        : UISearchController); cdecl;
                                        procedure didDismissSearchController
                                        (searchController
                                        : UISearchController); cdecl;
                                        procedure presentSearchController
                                        (searchController
                                        : UISearchController); cdecl;
                                        end;

                                        UISearchResultsUpdating = interface
                                        (IObjectiveC)
                                        ['{17C1BB2F-3511-4AE6-BB1A-D9D1A031BF5A}']
                                        procedure updateSearchResultsForSearchController
                                        (searchController: UISearchController);
                                        cdecl;
                                        end;

                                        UISearchDisplayDelegate = interface
                                        (IObjectiveC)
                                        ['{BC335EF5-7A89-4CA7-B398-AF1DDE32E1BB}']
                                        procedure searchDisplayControllerWillBeginSearch
                                        (controller: UISearchDisplayController);
                                        cdecl;
                                        procedure searchDisplayControllerDidBeginSearch
                                        (controller
                                        : UISearchDisplayController); cdecl;
                                        procedure searchDisplayControllerWillEndSearch
                                        (controller
                                        : UISearchDisplayController); cdecl;
                                        procedure searchDisplayControllerDidEndSearch
                                        (controller
                                        : UISearchDisplayController); cdecl;
                                        [MethodName
                                        ('searchDisplayController:didLoadSearchResultsTableView:')
                                        ]
                                        procedure searchDisplayControllerDidLoadSearchResultsTableView
                                        (controller: UISearchDisplayController;
                                        didLoadSearchResultsTableView
                                        : UITableView); cdecl;
                                        [MethodName
                                        ('searchDisplayController:willUnloadSearchResultsTableView:')
                                        ]
                                        procedure searchDisplayControllerWillUnloadSearchResultsTableView
                                        (controller: UISearchDisplayController;
                                        willUnloadSearchResultsTableView
                                        : UITableView); cdecl;
                                        [MethodName
                                        ('searchDisplayController:willShowSearchResultsTableView:')
                                        ]
                                        procedure searchDisplayControllerWillShowSearchResultsTableView
                                        (controller: UISearchDisplayController;
                                        willShowSearchResultsTableView
                                        : UITableView); cdecl;
                                        [MethodName
                                        ('searchDisplayController:didShowSearchResultsTableView:')
                                        ]
                                        procedure searchDisplayControllerDidShowSearchResultsTableView
                                        (controller: UISearchDisplayController;
                                        didShowSearchResultsTableView
                                        : UITableView); cdecl;
                                        [MethodName
                                        ('searchDisplayController:willHideSearchResultsTableView:')
                                        ]
                                        procedure searchDisplayControllerWillHideSearchResultsTableView
                                        (controller: UISearchDisplayController;
                                        willHideSearchResultsTableView
                                        : UITableView); cdecl;
                                        [MethodName
                                        ('searchDisplayController:didHideSearchResultsTableView:')
                                        ]
                                        procedure searchDisplayControllerDidHideSearchResultsTableView
                                        (controller: UISearchDisplayController;
                                        didHideSearchResultsTableView
                                        : UITableView); cdecl;
                                        [MethodName
                                        ('searchDisplayController:shouldReloadTableForSearchString:')
                                        ]
                                        function searchDisplayControllerShouldReloadTableForSearchString
                                        (controller: UISearchDisplayController;
                                        shouldReloadTableForSearchString
                                        : NSString): Boolean; cdecl;
                                        [MethodName
                                        ('searchDisplayController:shouldReloadTableForSearchScope:')
                                        ]
                                        function searchDisplayControllerShouldReloadTableForSearchScope
                                        (controller: UISearchDisplayController;
                                        shouldReloadTableForSearchScope
                                        : NSInteger): Boolean; cdecl;
                                        end;

                                        UISplitViewControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{B741711D-02AB-4F9C-9B17-4CB2FD3D743D}']
                                        [MethodName
                                        ('splitViewController:willChangeToDisplayMode:')
                                        ]
                                        procedure splitViewControllerWillChangeToDisplayMode
                                        (svc: UISplitViewController;
                                        willChangeToDisplayMode
                                        : UISplitViewControllerDisplayMode);
                                        cdecl;
                                        function targetDisplayModeForActionInSplitViewController
                                        (svc: UISplitViewController)
                                        : UISplitViewControllerDisplayMode;
                                        cdecl;
                                        [MethodName
                                        ('splitViewController:showViewController:sender:')
                                        ]
                                        function splitViewControllerShowViewControllerSender
                                        (splitViewController
                                        : UISplitViewController;
                                        showViewController: UIViewController;
                                        sender: Pointer): Boolean; cdecl;
                                        [MethodName
                                        ('splitViewController:showDetailViewController:sender:')
                                        ]
                                        function splitViewControllerShowDetailViewControllerSender
                                        (splitViewController
                                        : UISplitViewController;
                                        showDetailViewController
                                        : UIViewController; sender: Pointer)
                                        : Boolean; cdecl;
                                        function primaryViewControllerForCollapsingSplitViewController
                                        (splitViewController
                                        : UISplitViewController)
                                        : UIViewController; cdecl;
                                        function primaryViewControllerForExpandingSplitViewController
                                        (splitViewController
                                        : UISplitViewController)
                                        : UIViewController; cdecl;
                                        [MethodName
                                        ('splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:')
                                        ]
                                        function splitViewControllerCollapseSecondaryViewControllerOntoPrimaryViewController
                                        (splitViewController
                                        : UISplitViewController;
                                        collapseSecondaryViewController
                                        : UIViewController;
                                        ontoPrimaryViewController
                                        : UIViewController): Boolean; cdecl;
                                        [MethodName
                                        ('splitViewController:separateSecondaryViewControllerFromPrimaryViewController:')
                                        ]
                                        function splitViewControllerSeparateSecondaryViewControllerFromPrimaryViewController
                                        (splitViewController
                                        : UISplitViewController;
                                        separateSecondaryViewControllerFromPrimaryViewController
                                        : UIViewController)
                                        : UIViewController; cdecl;
                                        function splitViewControllerSupportedInterfaceOrientations
                                        (splitViewController
                                        : UISplitViewController)
                                        : UIInterfaceOrientationMask; cdecl;
                                        function splitViewControllerPreferredInterfaceOrientationForPresentation
                                        (splitViewController
                                        : UISplitViewController)
                                        : UIInterfaceOrientation; cdecl;
                                        [MethodName
                                        ('splitViewController:willHideViewController:withBarButtonItem:forPopoverController:')
                                        ]
                                        procedure splitViewControllerWillHideViewControllerWithBarButtonItemForPopoverController
                                        (svc: UISplitViewController;
                                        willHideViewController
                                        : UIViewController;
                                        withBarButtonItem: UIBarButtonItem;
                                        forPopoverController
                                        : UIPopoverController); cdecl;
                                        [MethodName
                                        ('splitViewController:willShowViewController:invalidatingBarButtonItem:')
                                        ]
                                        procedure splitViewControllerWillShowViewControllerInvalidatingBarButtonItem
                                        (svc: UISplitViewController;
                                        willShowViewController
                                        : UIViewController;
                                        invalidatingBarButtonItem
                                        : UIBarButtonItem); cdecl;
                                        [MethodName
                                        ('splitViewController:popoverController:willPresentViewController:')
                                        ]
                                        procedure splitViewControllerPopoverControllerWillPresentViewController
                                        (svc: UISplitViewController;
                                        popoverController: UIPopoverController;
                                        willPresentViewController
                                        : UIViewController); cdecl;
                                        [MethodName
                                        ('splitViewController:shouldHideViewController:inOrientation:')
                                        ]
                                        function splitViewControllerShouldHideViewControllerInOrientation
                                        (svc: UISplitViewController;
                                        shouldHideViewController
                                        : UIViewController;
                                        inOrientation: UIInterfaceOrientation)
                                        : Boolean; cdecl;
                                        end;

                                        UITabBarDelegate = interface
                                        (IObjectiveC)
                                        ['{C2C5CDF5-76A6-4F30-B16A-0402A635AE14}']
                                        [MethodName('tabBar:didSelectItem:')]
                                        procedure tabBarDidSelectItem
                                        (tabBar: UITabBar;
                                        didSelectItem: UITabBarItem);
                                        cdecl;
                                        [MethodName
                                        ('tabBar:willBeginCustomizingItems:')]
                                        procedure tabBarWillBeginCustomizingItems
                                        (tabBar: UITabBar;
                                        willBeginCustomizingItems
                                        : NSArray); cdecl;
                                        [MethodName
                                        ('tabBar:didBeginCustomizingItems:')]
                                        procedure tabBarDidBeginCustomizingItems
                                        (tabBar: UITabBar;
                                        didBeginCustomizingItems
                                        : NSArray); cdecl;
                                        [MethodName
                                        ('tabBar:willEndCustomizingItems:changed:')
                                        ]
                                        procedure tabBarWillEndCustomizingItemsChanged
                                        (tabBar: UITabBar;
                                        willEndCustomizingItems: NSArray;
                                        changed: Boolean); cdecl;
                                        [MethodName
                                        ('tabBar:didEndCustomizingItems:changed:')
                                        ]
                                        procedure tabBarDidEndCustomizingItemsChanged
                                        (tabBar: UITabBar;
                                        didEndCustomizingItems: NSArray;
                                        changed: Boolean); cdecl;
                                        end;

                                        UITabBarControllerDelegate = interface
                                        (IObjectiveC)
                                        ['{F2AB3583-7B06-40BC-BE1D-E5712542B735}']
                                        [MethodName
                                        ('tabBarController:shouldSelectViewController:')
                                        ]
                                        function tabBarControllerShouldSelectViewController
                                        (tabBarController: UITabBarController;
                                        shouldSelectViewController
                                        : UIViewController): Boolean;
                                        cdecl;
                                        [MethodName
                                        ('tabBarController:didSelectViewController:')
                                        ]
                                        procedure tabBarControllerDidSelectViewController
                                        (tabBarController: UITabBarController;
                                        didSelectViewController
                                        : UIViewController); cdecl;
                                        [MethodName
                                        ('tabBarController:willBeginCustomizingViewControllers:')
                                        ]
                                        procedure tabBarControllerWillBeginCustomizingViewControllers
                                        (tabBarController: UITabBarController;
                                        willBeginCustomizingViewControllers
                                        : NSArray); cdecl;
                                        [MethodName
                                        ('tabBarController:willEndCustomizingViewControllers:changed:')
                                        ]
                                        procedure tabBarControllerWillEndCustomizingViewControllersChanged
                                        (tabBarController: UITabBarController;
                                        willEndCustomizingViewControllers
                                        : NSArray; changed: Boolean); cdecl;
                                        [MethodName
                                        ('tabBarController:didEndCustomizingViewControllers:changed:')
                                        ]
                                        procedure tabBarControllerDidEndCustomizingViewControllersChanged
                                        (tabBarController: UITabBarController;
                                        didEndCustomizingViewControllers
                                        : NSArray; changed: Boolean); cdecl;
                                        function tabBarControllerSupportedInterfaceOrientations
                                        (tabBarController: UITabBarController)
                                        : UIInterfaceOrientationMask; cdecl;
                                        function tabBarControllerPreferredInterfaceOrientationForPresentation
                                        (tabBarController: UITabBarController)
                                        : UIInterfaceOrientation; cdecl;
                                        [MethodName
                                        ('tabBarController:interactionControllerForAnimationController:')
                                        ]
                                        function tabBarControllerInteractionControllerForAnimationController
                                        (tabBarController: UITabBarController;
                                        interactionControllerForAnimationController
                                        : Pointer): Pointer; cdecl;
                                        [MethodName
                                        ('tabBarController:animationControllerForTransitionFromViewController:toViewController:')
                                        ]
                                        function tabBarControllerAnimationControllerForTransitionFromViewControllerToViewController
                                        (tabBarController: UITabBarController;
                                        animationControllerForTransitionFromViewController
                                        : UIViewController;
                                        toViewController: UIViewController)
                                        : Pointer; cdecl;
                                        end;

                                        UITextViewDelegate = interface
                                        (IObjectiveC)
                                        ['{00AA804D-CDEC-463E-9DFA-5F5DF5325AFD}']
                                        function textViewShouldBeginEditing
                                        (textView: UITextView): Boolean;
                                        cdecl;
                                        function textViewShouldEndEditing
                                        (textView: UITextView): Boolean; cdecl;
                                        procedure textViewDidBeginEditing
                                        (textView: UITextView); cdecl;
                                        procedure textViewDidEndEditing
                                        (textView: UITextView); cdecl;
                                        [MethodName
                                        ('textView:shouldChangeTextInRange:replacementText:')
                                        ]
                                        function textViewShouldChangeTextInRangeReplacementText
                                        (textView: UITextView;
                                        shouldChangeTextInRange: NSRange;
                                        replacementText: NSString)
                                        : Boolean; cdecl;
                                        procedure textViewDidChange
                                        (textView: UITextView); cdecl;
                                        procedure textViewDidChangeSelection
                                        (textView: UITextView); cdecl;
                                        [MethodName
                                        ('textView:shouldInteractWithURL:inRange:')
                                        ]
                                        function textViewShouldInteractWithURLInRange
                                        (textView: UITextView;
                                        shouldInteractWithURL: NSURL;
                                        inRange: NSRange): Boolean; cdecl;
                                        [MethodName
                                        ('textView:shouldInteractWithTextAttachment:inRange:')
                                        ]
                                        function textViewShouldInteractWithTextAttachmentInRange
                                        (textView: UITextView;
                                        shouldInteractWithTextAttachment
                                        : NSTextAttachment; inRange: NSRange)
                                        : Boolean; cdecl;
                                        end;

                                        UIToolbarDelegate = interface
                                        (IObjectiveC)
                                        ['{B0A70DCA-DD67-4F9A-BB5F-7B8E36B890C8}']
                                        end;

                                        UIVideoEditorControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{C0D07FB6-5485-48FF-90D4-0959321ECC9D}']
                                        [MethodName
                                        ('videoEditorController:didSaveEditedVideoToPath:')
                                        ]
                                        procedure videoEditorControllerDidSaveEditedVideoToPath
                                        (editor: UIVideoEditorController;
                                        didSaveEditedVideoToPath: NSString);
                                        cdecl;
                                        [MethodName
                                        ('videoEditorController:didFailWithError:')
                                        ]
                                        procedure videoEditorControllerDidFailWithError
                                        (editor: UIVideoEditorController;
                                        didFailWithError: NSError); cdecl;
                                        procedure videoEditorControllerDidCancel
                                        (editor: UIVideoEditorController);
                                        cdecl;
                                        end;

                                        UIWebViewDelegate = interface
                                        (IObjectiveC)
                                        ['{E81812D6-D50B-4F08-A50D-BBBC7528E5C5}']
                                        [MethodName
                                        ('webView:shouldStartLoadWithRequest:navigationType:')
                                        ]
                                        function webViewShouldStartLoadWithRequestNavigationType
                                        (webView: UIWebView;
                                        shouldStartLoadWithRequest
                                        : NSURLRequest;
                                        navigationType: UIWebViewNavigationType)
                                        : Boolean;
                                        cdecl;
                                        procedure webViewDidStartLoad
                                        (webView: UIWebView); cdecl;
                                        procedure webViewDidFinishLoad
                                        (webView: UIWebView); cdecl;
                                        [MethodName
                                        ('webView:didFailLoadWithError:')]
                                        procedure webViewDidFailLoadWithError
                                        (webView: UIWebView;
                                        didFailLoadWithError: NSError); cdecl;
                                        end;

                                        UIPopoverPresentationControllerDelegate =
                                        interface(IObjectiveC)
                                        ['{91803B61-8199-4BA3-8CDE-08B7B194945C}']
                                        procedure prepareForPopoverPresentation
                                        (popoverPresentationController
                                        : UIPopoverPresentationController);
                                        cdecl;
                                        function popoverPresentationControllerShouldDismissPopover
                                        (popoverPresentationController
                                        : UIPopoverPresentationController)
                                        : Boolean; cdecl;
                                        procedure popoverPresentationControllerDidDismissPopover
                                        (popoverPresentationController
                                        : UIPopoverPresentationController);
                                        cdecl;
                                        procedure popoverPresentationController
                                        (popoverPresentationController
                                        : UIPopoverPresentationController;
                                        willRepositionPopoverToRect: Pointer;
                                        inView: UIView); cdecl;
                                        end;

                                        UIDynamicAnimatorDelegate = interface
                                        (IObjectiveC)
                                        ['{11572CF2-F224-47CA-A599-F4BD2AA49D29}']
                                        procedure dynamicAnimatorWillResume
                                        (animator: UIDynamicAnimator);
                                        cdecl;
                                        procedure dynamicAnimatorDidPause
                                        (animator: UIDynamicAnimator); cdecl;
                                        end;

                                        UICollisionBehaviorDelegate = interface
                                        (IObjectiveC)
                                        ['{4FAF7A38-5276-4EA1-A461-376A0E1D53AE}']
                                        [MethodName
                                        ('collisionBehavior:beganContactForItem:withItem:atPoint:')
                                        ]
                                        procedure collisionBehaviorBeganContactForItemWithItemAtPoint
                                        (behavior: UICollisionBehavior;
                                        beganContactForItem: Pointer;
                                        withItem: Pointer; atPoint: CGPoint);
                                        cdecl;
                                        [MethodName
                                        ('collisionBehavior:endedContactForItem:withItem:')
                                        ]
                                        procedure collisionBehaviorEndedContactForItemWithItem
                                        (behavior: UICollisionBehavior;
                                        endedContactForItem: Pointer;
                                        withItem: Pointer); cdecl;
                                        [MethodName
                                        ('collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:')
                                        ]
                                        procedure collisionBehaviorBeganContactForItemWithBoundaryIdentifierAtPoint
                                        (behavior: UICollisionBehavior;
                                        beganContactForItem: Pointer;
                                        withBoundaryIdentifier: Pointer;
                                        atPoint: CGPoint); cdecl;
                                        [MethodName
                                        ('collisionBehavior:endedContactForItem:withBoundaryIdentifier:')
                                        ]
                                        procedure collisionBehaviorEndedContactForItemWithBoundaryIdentifier
                                        (behavior: UICollisionBehavior;
                                        endedContactForItem: Pointer;
                                        withBoundaryIdentifier: Pointer); cdecl;
                                        end;

                                        // ===== Exported string consts =====

                                        function NSFontAttributeName: NSString;
                                        function NSParagraphStyleAttributeName
                                        : NSString;
                                        function NSForegroundColorAttributeName
                                        : NSString;
                                        function NSBackgroundColorAttributeName
                                        : NSString;
                                        function NSLigatureAttributeName
                                        : NSString;
                                        function NSKernAttributeName: NSString;
                                        function NSStrikethroughStyleAttributeName
                                        : NSString;
                                        function NSUnderlineStyleAttributeName
                                        : NSString;
                                        function NSStrokeColorAttributeName
                                        : NSString;
                                        function NSStrokeWidthAttributeName
                                        : NSString;
                                        function NSShadowAttributeName
                                        : NSString;
                                        function NSTextEffectAttributeName
                                        : NSString;
                                        function NSAttachmentAttributeName
                                        : NSString;
                                        function NSLinkAttributeName: NSString;
                                        function NSBaselineOffsetAttributeName
                                        : NSString;
                                        function NSUnderlineColorAttributeName
                                        : NSString;
                                        function NSStrikethroughColorAttributeName
                                        : NSString;
                                        function NSObliquenessAttributeName
                                        : NSString;
                                        function NSExpansionAttributeName
                                        : NSString;
                                        function NSWritingDirectionAttributeName
                                        : NSString;
                                        function NSVerticalGlyphFormAttributeName
                                        : NSString;
                                        function NSTextEffectLetterpressStyle
                                        : NSString;
                                        function NSPlainTextDocumentType
                                        : NSString;
                                        function NSRTFTextDocumentType
                                        : NSString;
                                        function NSRTFDTextDocumentType
                                        : NSString;
                                        function NSHTMLTextDocumentType
                                        : NSString;
                                        function NSTextLayoutSectionOrientation
                                        : NSString;
                                        function NSTextLayoutSectionRange
                                        : NSString;
                                        function NSDocumentTypeDocumentAttribute
                                        : NSString;
                                        function NSCharacterEncodingDocumentAttribute
                                        : NSString;
                                        function NSDefaultAttributesDocumentAttribute
                                        : NSString;
                                        function NSPaperSizeDocumentAttribute
                                        : NSString;
                                        function NSPaperMarginDocumentAttribute
                                        : NSString;
                                        function NSViewSizeDocumentAttribute
                                        : NSString;
                                        function NSViewZoomDocumentAttribute
                                        : NSString;
                                        function NSViewModeDocumentAttribute
                                        : NSString;
                                        function NSReadOnlyDocumentAttribute
                                        : NSString;
                                        function NSBackgroundColorDocumentAttribute
                                        : NSString;
                                        function NSHyphenationFactorDocumentAttribute
                                        : NSString;
                                        function NSDefaultTabIntervalDocumentAttribute
                                        : NSString;
                                        function NSTextLayoutSectionsAttribute
                                        : NSString;
                                        function UIEdgeInsetsZero: Pointer;
                                        function UIOffsetZero: Pointer;
                                        function NSTextStorageWillProcessEditingNotification
                                        : NSString;
                                        function NSTextStorageDidProcessEditingNotification
                                        : NSString;
                                        function UIFontDescriptorFamilyAttribute
                                        : NSString;
                                        function UIFontDescriptorNameAttribute
                                        : NSString;
                                        function UIFontDescriptorFaceAttribute
                                        : NSString;
                                        function UIFontDescriptorSizeAttribute
                                        : NSString;
                                        function UIFontDescriptorVisibleNameAttribute
                                        : NSString;
                                        function UIFontDescriptorMatrixAttribute
                                        : NSString;
                                        function UIFontDescriptorCharacterSetAttribute
                                        : NSString;
                                        function UIFontDescriptorCascadeListAttribute
                                        : NSString;
                                        function UIFontDescriptorTraitsAttribute
                                        : NSString;
                                        function UIFontDescriptorFixedAdvanceAttribute
                                        : NSString;
                                        function UIFontDescriptorFeatureSettingsAttribute
                                        : NSString;
                                        function UIFontDescriptorTextStyleAttribute
                                        : NSString;
                                        function UIFontSymbolicTrait: NSString;
                                        function UIFontWeightTrait: NSString;
                                        function UIFontWidthTrait: NSString;
                                        function UIFontSlantTrait: NSString;
                                        function UIFontWeightUltraLight
                                        : Pointer;
                                        function UIFontWeightThin: Pointer;
                                        function UIFontWeightLight: Pointer;
                                        function UIFontWeightRegular: Pointer;
                                        function UIFontWeightMedium: Pointer;
                                        function UIFontWeightSemibold: Pointer;
                                        function UIFontWeightBold: Pointer;
                                        function UIFontWeightHeavy: Pointer;
                                        function UIFontWeightBlack: Pointer;
                                        function UIFontFeatureTypeIdentifierKey
                                        : NSString;
                                        function UIFontFeatureSelectorIdentifierKey
                                        : NSString;
                                        function UIFontTextStyleTitle1
                                        : NSString;
                                        function UIFontTextStyleTitle2
                                        : NSString;
                                        function UIFontTextStyleTitle3
                                        : NSString;
                                        function UIFontTextStyleHeadline
                                        : NSString;
                                        function UIFontTextStyleSubheadline
                                        : NSString;
                                        function UIFontTextStyleBody: NSString;
                                        function UIFontTextStyleCallout
                                        : NSString;
                                        function UIFontTextStyleFootnote
                                        : NSString;
                                        function UIFontTextStyleCaption1
                                        : NSString;
                                        function UIFontTextStyleCaption2
                                        : NSString;
                                        function NSTabColumnTerminatorsAttributeName
                                        : NSString;
                                        function UIKeyInputUpArrow: NSString;
                                        function UIKeyInputDownArrow: NSString;
                                        function UIKeyInputLeftArrow: NSString;
                                        function UIKeyInputRightArrow: NSString;
                                        function UIKeyInputEscape: NSString;
                                        function UIDeviceOrientationDidChangeNotification
                                        : NSString;
                                        function UIDeviceBatteryStateDidChangeNotification
                                        : NSString;
                                        function UIDeviceBatteryLevelDidChangeNotification
                                        : NSString;
                                        function UIDeviceProximityStateDidChangeNotification
                                        : NSString;
                                        function UIViewNoIntrinsicMetric
                                        : Pointer;
                                        function UILayoutFittingCompressedSize
                                        : Pointer;
                                        function UILayoutFittingExpandedSize
                                        : Pointer;
                                        function UIScrollViewDecelerationRateNormal
                                        : Pointer;
                                        function UIScrollViewDecelerationRateFast
                                        : Pointer;
                                        function UITextAttributeFont: NSString;
                                        function UITextAttributeTextColor
                                        : NSString;
                                        function UITextAttributeTextShadowColor
                                        : NSString;
                                        function UITextAttributeTextShadowOffset
                                        : NSString;
                                        function UITableViewIndexSearch
                                        : NSString;
                                        function UITableViewAutomaticDimension
                                        : Pointer;
                                        function UITableViewSelectionDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityTraitNone
                                        : Pointer;
                                        function UIAccessibilityTraitButton
                                        : Pointer;
                                        function UIAccessibilityTraitLink
                                        : Pointer;
                                        function UIAccessibilityTraitHeader
                                        : Pointer;
                                        function UIAccessibilityTraitSearchField
                                        : Pointer;
                                        function UIAccessibilityTraitImage
                                        : Pointer;
                                        function UIAccessibilityTraitSelected
                                        : Pointer;
                                        function UIAccessibilityTraitPlaysSound
                                        : Pointer;
                                        function UIAccessibilityTraitKeyboardKey
                                        : Pointer;
                                        function UIAccessibilityTraitStaticText
                                        : Pointer;
                                        function UIAccessibilityTraitSummaryElement
                                        : Pointer;
                                        function UIAccessibilityTraitNotEnabled
                                        : Pointer;
                                        function UIAccessibilityTraitUpdatesFrequently
                                        : Pointer;
                                        function UIAccessibilityTraitStartsMediaSession
                                        : Pointer;
                                        function UIAccessibilityTraitAdjustable
                                        : Pointer;
                                        function UIAccessibilityTraitAllowsDirectInteraction
                                        : Pointer;
                                        function UIAccessibilityTraitCausesPageTurn
                                        : Pointer;
                                        function UIAccessibilityScreenChangedNotification
                                        : Pointer;
                                        function UIAccessibilityLayoutChangedNotification
                                        : Pointer;
                                        function UIAccessibilityAnnouncementNotification
                                        : Pointer;
                                        function UIAccessibilityAnnouncementDidFinishNotification
                                        : NSString;
                                        function UIAccessibilityAnnouncementKeyStringValue
                                        : NSString;
                                        function UIAccessibilityAnnouncementKeyWasSuccessful
                                        : NSString;
                                        function UIAccessibilityElementFocusedNotification
                                        : NSString;
                                        function UIAccessibilityFocusedElementKey
                                        : NSString;
                                        function UIAccessibilityUnfocusedElementKey
                                        : NSString;
                                        function UIAccessibilityAssistiveTechnologyKey
                                        : NSString;
                                        function UIAccessibilityPageScrolledNotification
                                        : Pointer;
                                        function UIAccessibilityPauseAssistiveTechnologyNotification
                                        : Pointer;
                                        function UIAccessibilityResumeAssistiveTechnologyNotification
                                        : Pointer;
                                        function UIAccessibilityNotificationSwitchControlIdentifier
                                        : NSString;
                                        function UIAccessibilityNotificationVoiceOverIdentifier
                                        : NSString;
                                        function UIAccessibilitySpeechAttributePunctuation
                                        : NSString;
                                        function UIAccessibilitySpeechAttributeLanguage
                                        : NSString;
                                        function UIAccessibilitySpeechAttributePitch
                                        : NSString;
                                        function UIAccessibilityVoiceOverStatusChanged
                                        : NSString;
                                        function UIAccessibilityMonoAudioStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityClosedCaptioningStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityInvertColorsStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityGuidedAccessStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityBoldTextStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityGrayscaleStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityReduceTransparencyStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityReduceMotionStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityDarkerSystemColorsStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilitySwitchControlStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilitySpeakSelectionStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilitySpeakScreenStatusDidChangeNotification
                                        : NSString;
                                        function UIAccessibilityShakeToUndoDidChangeNotification
                                        : NSString;
                                        function UITextInputTextBackgroundColorKey
                                        : NSString;
                                        function UITextInputTextColorKey
                                        : NSString;
                                        function UITextInputTextFontKey
                                        : NSString;
                                        function UITextInputCurrentInputModeDidChangeNotification
                                        : NSString;
                                        function UITextFieldTextDidBeginEditingNotification
                                        : NSString;
                                        function UITextFieldTextDidEndEditingNotification
                                        : NSString;
                                        function UITextFieldTextDidChangeNotification
                                        : NSString;
                                        function UIActivityTypePostToFacebook
                                        : NSString;
                                        function UIActivityTypePostToTwitter
                                        : NSString;
                                        function UIActivityTypePostToWeibo
                                        : NSString;
                                        function UIActivityTypeMessage
                                        : NSString;
                                        function UIActivityTypeMail: NSString;
                                        function UIActivityTypePrint: NSString;
                                        function UIActivityTypeCopyToPasteboard
                                        : NSString;
                                        function UIActivityTypeAssignToContact
                                        : NSString;
                                        function UIActivityTypeSaveToCameraRoll
                                        : NSString;
                                        function UIActivityTypeAddToReadingList
                                        : NSString;
                                        function UIActivityTypePostToFlickr
                                        : NSString;
                                        function UIActivityTypePostToVimeo
                                        : NSString;
                                        function UIActivityTypePostToTencentWeibo
                                        : NSString;
                                        function UIActivityTypeAirDrop
                                        : NSString;
                                        function UIActivityTypeOpenInIBooks
                                        : NSString;
                                        function UIApplicationInvalidInterfaceOrientationException
                                        : NSString;
                                        function UIBackgroundTaskInvalid
                                        : Pointer;
                                        function UIMinimumKeepAliveTimeout
                                        : Pointer;
                                        function UIApplicationBackgroundFetchIntervalMinimum
                                        : Pointer;
                                        function UIApplicationBackgroundFetchIntervalNever
                                        : Pointer;
                                        function UITrackingRunLoopMode
                                        : NSString;
                                        function UIApplicationDidEnterBackgroundNotification
                                        : NSString;
                                        function UIApplicationWillEnterForegroundNotification
                                        : NSString;
                                        function UIApplicationDidFinishLaunchingNotification
                                        : NSString;
                                        function UIApplicationDidBecomeActiveNotification
                                        : NSString;
                                        function UIApplicationWillResignActiveNotification
                                        : NSString;
                                        function UIApplicationDidReceiveMemoryWarningNotification
                                        : NSString;
                                        function UIApplicationWillTerminateNotification
                                        : NSString;
                                        function UIApplicationSignificantTimeChangeNotification
                                        : NSString;
                                        function UIApplicationWillChangeStatusBarOrientationNotification
                                        : NSString;
                                        function UIApplicationDidChangeStatusBarOrientationNotification
                                        : NSString;
                                        function UIApplicationStatusBarOrientationUserInfoKey
                                        : NSString;
                                        function UIApplicationWillChangeStatusBarFrameNotification
                                        : NSString;
                                        function UIApplicationDidChangeStatusBarFrameNotification
                                        : NSString;
                                        function UIApplicationStatusBarFrameUserInfoKey
                                        : NSString;
                                        function UIApplicationBackgroundRefreshStatusDidChangeNotification
                                        : NSString;
                                        function UIApplicationLaunchOptionsURLKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsSourceApplicationKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsRemoteNotificationKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsLocalNotificationKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsAnnotationKey
                                        : NSString;
                                        function UIApplicationProtectedDataWillBecomeUnavailable
                                        : NSString;
                                        function UIApplicationProtectedDataDidBecomeAvailable
                                        : NSString;
                                        function UIApplicationLaunchOptionsLocationKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsNewsstandDownloadsKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsBluetoothCentralsKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsBluetoothPeripheralsKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsShortcutItemKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsUserActivityDictionaryKey
                                        : NSString;
                                        function UIApplicationLaunchOptionsUserActivityTypeKey
                                        : NSString;
                                        function UIApplicationOpenSettingsURLString
                                        : NSString;
                                        function UIApplicationOpenURLOptionsSourceApplicationKey
                                        : NSString;
                                        function UIApplicationOpenURLOptionsAnnotationKey
                                        : NSString;
                                        function UIApplicationOpenURLOptionsOpenInPlaceKey
                                        : NSString;
                                        function UIContentSizeCategoryExtraSmall
                                        : NSString;
                                        function UIContentSizeCategorySmall
                                        : NSString;
                                        function UIContentSizeCategoryMedium
                                        : NSString;
                                        function UIContentSizeCategoryLarge
                                        : NSString;
                                        function UIContentSizeCategoryExtraLarge
                                        : NSString;
                                        function UIContentSizeCategoryExtraExtraLarge
                                        : NSString;
                                        function UIContentSizeCategoryExtraExtraExtraLarge
                                        : NSString;
                                        function UIContentSizeCategoryAccessibilityMedium
                                        : NSString;
                                        function UIContentSizeCategoryAccessibilityLarge
                                        : NSString;
                                        function UIContentSizeCategoryAccessibilityExtraLarge
                                        : NSString;
                                        function UIContentSizeCategoryAccessibilityExtraExtraLarge
                                        : NSString;
                                        function UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
                                        : NSString;
                                        function UIContentSizeCategoryDidChangeNotification
                                        : NSString;
                                        function UIContentSizeCategoryNewValueKey
                                        : NSString;
                                        function UIApplicationUserDidTakeScreenshotNotification
                                        : NSString;
                                        function UIApplicationKeyboardExtensionPointIdentifier
                                        : NSString;
                                        function UIStateRestorationViewControllerStoryboardKey
                                        : NSString;
                                        function UIApplicationStateRestorationBundleVersionKey
                                        : NSString;
                                        function UIApplicationStateRestorationUserInterfaceIdiomKey
                                        : NSString;
                                        function UIApplicationStateRestorationTimestampKey
                                        : NSString;
                                        function UIApplicationStateRestorationSystemVersionKey
                                        : NSString;
                                        function UIViewControllerShowDetailTargetDidChangeNotification
                                        : NSString;
                                        function UIViewControllerHierarchyInconsistencyException
                                        : NSString;
                                        function UIFloatRangeZero: Pointer;
                                        function UIFloatRangeInfinite: Pointer;
                                        function UICollectionElementKindSectionHeader
                                        : NSString;
                                        function UICollectionElementKindSectionFooter
                                        : NSString;
                                        function UIDocumentStateChangedNotification
                                        : NSString;
                                        function NSUserActivityDocumentURLKey
                                        : NSString;
                                        function UINavigationControllerHideShowBarDuration
                                        : Pointer;
                                        function UIImagePickerControllerMediaType
                                        : NSString;
                                        function UIImagePickerControllerOriginalImage
                                        : NSString;
                                        function UIImagePickerControllerEditedImage
                                        : NSString;
                                        function UIImagePickerControllerCropRect
                                        : NSString;
                                        function UIImagePickerControllerMediaURL
                                        : NSString;
                                        function UIImagePickerControllerReferenceURL
                                        : NSString;
                                        function UIImagePickerControllerMediaMetadata
                                        : NSString;
                                        function UIImagePickerControllerLivePhoto
                                        : NSString;
                                        function UILocalNotificationDefaultSoundName
                                        : NSString;
                                        function UIUserNotificationTextInputActionButtonTitleKey
                                        : NSString;
                                        function UIUserNotificationActionResponseTypedTextKey
                                        : NSString;
                                        function UIMenuControllerWillShowMenuNotification
                                        : NSString;
                                        function UIMenuControllerDidShowMenuNotification
                                        : NSString;
                                        function UIMenuControllerWillHideMenuNotification
                                        : NSString;
                                        function UIMenuControllerDidHideMenuNotification
                                        : NSString;
                                        function UIMenuControllerMenuFrameDidChangeNotification
                                        : NSString;
                                        function UINibExternalObjects: NSString;
                                        function UINibProxiedObjectsKey
                                        : NSString;
                                        function UIPageViewControllerOptionSpineLocationKey
                                        : NSString;
                                        function UIPageViewControllerOptionInterPageSpacingKey
                                        : NSString;
                                        function UIPasteboardNameGeneral
                                        : NSString;
                                        function UIPasteboardNameFind: NSString;
                                        function UIPasteboardChangedNotification
                                        : NSString;
                                        function UIPasteboardChangedTypesAddedKey
                                        : NSString;
                                        function UIPasteboardChangedTypesRemovedKey
                                        : NSString;
                                        function UIPasteboardRemovedNotification
                                        : NSString;
                                        function UIPasteboardTypeListString
                                        : Pointer;
                                        function UIPasteboardTypeListURL
                                        : Pointer;
                                        function UIPasteboardTypeListImage
                                        : Pointer;
                                        function UIPasteboardTypeListColor
                                        : Pointer;
                                        function UIPrintErrorDomain: NSString;
                                        function UIScreenDidConnectNotification
                                        : NSString;
                                        function UIScreenDidDisconnectNotification
                                        : NSString;
                                        function UIScreenModeDidChangeNotification
                                        : NSString;
                                        function UIScreenBrightnessDidChangeNotification
                                        : NSString;
                                        function UITransitionContextFromViewControllerKey
                                        : NSString;
                                        function UITransitionContextToViewControllerKey
                                        : NSString;
                                        function UITransitionContextFromViewKey
                                        : NSString;
                                        function UITransitionContextToViewKey
                                        : NSString;
                                        function UISplitViewControllerAutomaticDimension
                                        : Pointer;
                                        function UITextViewTextDidBeginEditingNotification
                                        : NSString;
                                        function UITextViewTextDidChangeNotification
                                        : NSString;
                                        function UITextViewTextDidEndEditingNotification
                                        : NSString;
                                        function UIWindowLevelNormal: Pointer;
                                        function UIWindowLevelAlert: Pointer;
                                        function UIWindowLevelStatusBar
                                        : Pointer;
                                        function UIWindowDidBecomeVisibleNotification
                                        : NSString;
                                        function UIWindowDidBecomeHiddenNotification
                                        : NSString;
                                        function UIWindowDidBecomeKeyNotification
                                        : NSString;
                                        function UIWindowDidResignKeyNotification
                                        : NSString;
                                        function UIKeyboardWillShowNotification
                                        : NSString;
                                        function UIKeyboardDidShowNotification
                                        : NSString;
                                        function UIKeyboardWillHideNotification
                                        : NSString;
                                        function UIKeyboardDidHideNotification
                                        : NSString;
                                        function UIKeyboardFrameBeginUserInfoKey
                                        : NSString;
                                        function UIKeyboardFrameEndUserInfoKey
                                        : NSString;
                                        function UIKeyboardAnimationDurationUserInfoKey
                                        : NSString;
                                        function UIKeyboardAnimationCurveUserInfoKey
                                        : NSString;
                                        function UIKeyboardIsLocalUserInfoKey
                                        : NSString;
                                        function UIKeyboardWillChangeFrameNotification
                                        : NSString;
                                        function UIKeyboardDidChangeFrameNotification
                                        : NSString;
                                        function UIKeyboardCenterBeginUserInfoKey
                                        : NSString;
                                        function UIKeyboardCenterEndUserInfoKey
                                        : NSString;
                                        function UIKeyboardBoundsUserInfoKey
                                        : NSString;


                                        // ===== External functions =====

                                        const
                                        libUIKit =
                                        '/System/Library/Frameworks/UIKit.framework/UIKit';
                                        function UIEdgeInsetsMake(top: CGFloat;
                                        left: CGFloat; bottom: CGFloat;
                                        right: CGFloat): UIEdgeInsets; cdecl;
                                        external libUIKit name _PU +
                                        'UIEdgeInsetsMake';
                                        function UIEdgeInsetsInsetRect
                                        (rect: CGRect; insets: UIEdgeInsets)
                                        : CGRect; cdecl;
                                        external libUIKit name _PU +
                                        'UIEdgeInsetsInsetRect';
                                        function UIOffsetMake
                                        (horizontal: CGFloat; vertical: CGFloat)
                                        : UIOffset; cdecl;
                                        external libUIKit name _PU +
                                        'UIOffsetMake';
                                        function UIEdgeInsetsEqualToEdgeInsets
                                        (insets1: UIEdgeInsets;
                                        insets2: UIEdgeInsets): Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIEdgeInsetsEqualToEdgeInsets';
                                        function UIOffsetEqualToOffset
                                        (offset1: UIOffset; offset2: UIOffset)
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIOffsetEqualToOffset';
                                        function NSStringFromCGPoint
                                        (point: CGPoint): Pointer { NSString };
                                        cdecl; external libUIKit name _PU +
                                        'NSStringFromCGPoint';
                                        function NSStringFromCGVector
                                        (vector: CGVector)
                                        : Pointer { NSString }; cdecl;
                                        external libUIKit name _PU +
                                        'NSStringFromCGVector';
                                        function NSStringFromCGSize
                                        (size: CGSize): Pointer { NSString };
                                        cdecl; external libUIKit name _PU +
                                        'NSStringFromCGSize';
                                        function NSStringFromCGRect
                                        (rect: CGRect): Pointer { NSString };
                                        cdecl; external libUIKit name _PU +
                                        'NSStringFromCGRect';
                                        function NSStringFromCGAffineTransform
                                        (transform: CGAffineTransform)
                                        : Pointer { NSString }; cdecl;
                                        external libUIKit name _PU +
                                        'NSStringFromCGAffineTransform';
                                        function NSStringFromUIEdgeInsets
                                        (insets: UIEdgeInsets)
                                        : Pointer { NSString }; cdecl;
                                        external libUIKit name _PU +
                                        'NSStringFromUIEdgeInsets';
                                        function NSStringFromUIOffset
                                        (offset: UIOffset)
                                        : Pointer { NSString }; cdecl;
                                        external libUIKit name _PU +
                                        'NSStringFromUIOffset';
                                        function CGPointFromString
                                        (&string: Pointer { NSString } )
                                        : CGPoint; cdecl;
                                        external libUIKit name _PU +
                                        'CGPointFromString';
                                        function CGVectorFromString
                                        (&string: Pointer { NSString } )
                                        : CGVector; cdecl;
                                        external libUIKit name _PU +
                                        'CGVectorFromString';
                                        function CGSizeFromString
                                        (&string: Pointer { NSString } )
                                        : CGSize; cdecl;
                                        external libUIKit name _PU +
                                        'CGSizeFromString';
                                        function CGRectFromString
                                        (&string: Pointer { NSString } )
                                        : CGRect; cdecl;
                                        external libUIKit name _PU +
                                        'CGRectFromString';
                                        function CGAffineTransformFromString
                                        (&string: Pointer { NSString } )
                                        : CGAffineTransform; cdecl;
                                        external libUIKit name _PU +
                                        'CGAffineTransformFromString';
                                        function UIEdgeInsetsFromString
                                        (&string: Pointer { NSString } )
                                        : UIEdgeInsets; cdecl;
                                        external libUIKit name _PU +
                                        'UIEdgeInsetsFromString';
                                        function UIOffsetFromString
                                        (&string: Pointer { NSString } )
                                        : UIOffset; cdecl;
                                        external libUIKit name _PU +
                                        'UIOffsetFromString';
                                        function _NSDictionaryOfVariableBindings
                                        (commaSeparatedKeysString
                                        : Pointer { NSString };
                                        firstValue: Pointer)
                                        : Pointer { NSDictionary }; cdecl;
                                        external libUIKit name _PU +
                                        '_NSDictionaryOfVariableBindings';
                                        function NSTextAlignmentToCTTextAlignment
                                        (NSTextAlignment: NSTextAlignment)
                                        : CTTextAlignment; cdecl;
                                        external libUIKit name _PU +
                                        'NSTextAlignmentToCTTextAlignment';
                                        function NSTextAlignmentFromCTTextAlignment
                                        (CTTextAlignment: CTTextAlignment)
                                        : NSTextAlignment; cdecl;
                                        external libUIKit name _PU +
                                        'NSTextAlignmentFromCTTextAlignment';
                                        function UIDeviceOrientationIsPortrait
                                        (orientation: UIDeviceOrientation)
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIDeviceOrientationIsPortrait';
                                        function UIDeviceOrientationIsLandscape
                                        (orientation: UIDeviceOrientation)
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIDeviceOrientationIsLandscape';
                                        function UI_USER_INTERFACE_IDIOM
                                        : UIUserInterfaceIdiom; cdecl;
                                        external libUIKit name _PU +
                                        'UI_USER_INTERFACE_IDIOM';
                                        function UIImagePNGRepresentation
                                        (image: Pointer { UIImage } )
                                        : Pointer { NSData }; cdecl;
                                        external libUIKit name _PU +
                                        'UIImagePNGRepresentation';
                                        function UIImageJPEGRepresentation
                                        (image: Pointer { UIImage };
                                        compressionQuality: CGFloat)
                                        : Pointer { NSData }; cdecl;
                                        external libUIKit name _PU +
                                        'UIImageJPEGRepresentation';
                                        procedure UIAccessibilityZoomFocusChanged
                                        (&type: UIAccessibilityZoomType;
                                        frame: CGRect;
                                        view: Pointer { UIView } ); cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityZoomFocusChanged';
                                        procedure UIAccessibilityRegisterGestureConflictWithZoom;
                                        cdecl; external libUIKit name _PU +
                                        'UIAccessibilityRegisterGestureConflictWithZoom';
                                        function UIGuidedAccessRestrictionStateForIdentifier
                                        (restrictionIdentifier
                                        : Pointer { NSString } )
                                        : UIGuidedAccessRestrictionState; cdecl;
                                        external libUIKit name _PU +
                                        'UIGuidedAccessRestrictionStateForIdentifier';
                                        function UIAccessibilityConvertFrameToScreenCoordinates
                                        (rect: CGRect;
                                        view: Pointer { UIView } ): CGRect;
                                        cdecl; external libUIKit name _PU +
                                        'UIAccessibilityConvertFrameToScreenCoordinates';
                                        function UIAccessibilityConvertPathToScreenCoordinates
                                        (path: Pointer { UIBezierPath };
                                        view: Pointer { UIView } )
                                        : Pointer { UIBezierPath }; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityConvertPathToScreenCoordinates';
                                        function UIAccessibilityFocusedElement
                                        (assistiveTechnologyIdentifier
                                        : Pointer { NSString } ): Pointer;
                                        cdecl; external libUIKit name _PU +
                                        'UIAccessibilityFocusedElement';
                                        procedure UIAccessibilityPostNotification
                                        (notification
                                        : UIAccessibilityNotifications;
                                        argument: Pointer); cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityPostNotification';
                                        function UIAccessibilityIsVoiceOverRunning
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsVoiceOverRunning';
                                        function UIAccessibilityIsMonoAudioEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsMonoAudioEnabled';
                                        function UIAccessibilityIsClosedCaptioningEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsClosedCaptioningEnabled';
                                        function UIAccessibilityIsInvertColorsEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsInvertColorsEnabled';
                                        function UIAccessibilityIsGuidedAccessEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsGuidedAccessEnabled';
                                        function UIAccessibilityIsBoldTextEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsBoldTextEnabled';
                                        function UIAccessibilityIsGrayscaleEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsGrayscaleEnabled';
                                        function UIAccessibilityIsReduceTransparencyEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsReduceTransparencyEnabled';
                                        function UIAccessibilityIsReduceMotionEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsReduceMotionEnabled';
                                        function UIAccessibilityDarkerSystemColorsEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityDarkerSystemColorsEnabled';
                                        function UIAccessibilityIsSwitchControlRunning
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsSwitchControlRunning';
                                        function UIAccessibilityIsSpeakSelectionEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsSpeakSelectionEnabled';
                                        function UIAccessibilityIsSpeakScreenEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsSpeakScreenEnabled';
                                        function UIAccessibilityIsShakeToUndoEnabled
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIAccessibilityIsShakeToUndoEnabled';
                                        procedure UIAccessibilityRequestGuidedAccessSession
                                        (enable: Boolean;
                                        completionHandler: TUIKitCompletion);
                                        cdecl; external libUIKit name _PU +
                                        'UIAccessibilityRequestGuidedAccessSession';
                                        function UIInterfaceOrientationIsPortrait
                                        (orientation: UIInterfaceOrientation)
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIInterfaceOrientationIsPortrait';
                                        function UIInterfaceOrientationIsLandscape
                                        (orientation: UIInterfaceOrientation)
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIInterfaceOrientationIsLandscape';
                                        function UIApplicationMain
                                        (argc: Integer; argv: MarshaledAString;
                                        principalClassName
                                        : Pointer { NSString };
                                        delegateClassName
                                        : Pointer { NSString } ): Integer;
                                        cdecl; external libUIKit name _PU +
                                        'UIApplicationMain';
                                        function UIFloatRangeIsInfinite
                                        (range: UIFloatRange): Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIFloatRangeIsInfinite';
                                        function UIFloatRangeIsEqualToRange
                                        (range: UIFloatRange;
                                        otherRange: UIFloatRange): Boolean;
                                        cdecl; external libUIKit name _PU +
                                        'UIFloatRangeIsEqualToRange';
                                        function UIFloatRangeMake
                                        (minimum: CGFloat; maximum: CGFloat)
                                        : UIFloatRange; cdecl;
                                        external libUIKit name _PU +
                                        'UIFloatRangeMake';
                                        function UIGraphicsGetCurrentContext
                                        : CGContextRef; cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsGetCurrentContext';
                                        procedure UIGraphicsPushContext
                                        (context: CGContextRef); cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsPushContext';
                                        procedure UIGraphicsPopContext; cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsPopContext';
                                        procedure UIRectFillUsingBlendMode
                                        (rect: CGRect; blendMode: CGBlendMode);
                                        cdecl; external libUIKit name _PU +
                                        'UIRectFillUsingBlendMode';
                                        procedure UIRectFill(rect: CGRect);
                                        cdecl; external libUIKit name _PU +
                                        'UIRectFill';
                                        procedure UIRectFrameUsingBlendMode
                                        (rect: CGRect; blendMode: CGBlendMode);
                                        cdecl; external libUIKit name _PU +
                                        'UIRectFrameUsingBlendMode';
                                        procedure UIRectFrame(rect: CGRect);
                                        cdecl; external libUIKit name _PU +
                                        'UIRectFrame';
                                        procedure UIRectClip(rect: CGRect);
                                        cdecl; external libUIKit name _PU +
                                        'UIRectClip';
                                        procedure UIGraphicsBeginImageContext
                                        (size: CGSize); cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsBeginImageContext';
                                        procedure UIGraphicsBeginImageContextWithOptions
                                        (size: CGSize; opaque: Boolean;
                                        scale: CGFloat); cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsBeginImageContextWithOptions';
                                        function UIGraphicsGetImageFromCurrentImageContext
                                        : Pointer { UIImage }; cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsGetImageFromCurrentImageContext';
                                        procedure UIGraphicsEndImageContext;
                                        cdecl; external libUIKit name _PU +
                                        'UIGraphicsEndImageContext';
                                        function UIGraphicsBeginPDFContextToFile
                                        (path: Pointer { NSString };
                                        bounds: CGRect;
                                        documentInfo: Pointer { NSDictionary } )
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsBeginPDFContextToFile';
                                        procedure UIGraphicsBeginPDFContextToData
                                        (data: Pointer { NSMutableData };
                                        bounds: CGRect;
                                        documentInfo
                                        : Pointer { NSDictionary } ); cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsBeginPDFContextToData';
                                        procedure UIGraphicsEndPDFContext;
                                        cdecl; external libUIKit name _PU +
                                        'UIGraphicsEndPDFContext';
                                        procedure UIGraphicsBeginPDFPage; cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsBeginPDFPage';
                                        procedure UIGraphicsBeginPDFPageWithInfo
                                        (bounds: CGRect;
                                        pageInfo: Pointer { NSDictionary } );
                                        cdecl; external libUIKit name _PU +
                                        'UIGraphicsBeginPDFPageWithInfo';
                                        function UIGraphicsGetPDFContextBounds
                                        : CGRect; cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsGetPDFContextBounds';
                                        procedure UIGraphicsSetPDFContextURLForRect
                                        (url: Pointer { NSURL }; rect: CGRect);
                                        cdecl; external libUIKit name _PU +
                                        'UIGraphicsSetPDFContextURLForRect';
                                        procedure UIGraphicsAddPDFContextDestinationAtPoint
                                        (name: Pointer { NSString };
                                        point: CGPoint); cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsAddPDFContextDestinationAtPoint';
                                        procedure UIGraphicsSetPDFContextDestinationForRect
                                        (name: Pointer { NSString };
                                        rect: CGRect); cdecl;
                                        external libUIKit name _PU +
                                        'UIGraphicsSetPDFContextDestinationForRect';
                                        procedure UIImageWriteToSavedPhotosAlbum
                                        (image: Pointer { UIImage };
                                        completionTarget: Pointer;
                                        completionSelector: SEL;
                                        contextInfo: Pointer); cdecl;
                                        external libUIKit name _PU +
                                        'UIImageWriteToSavedPhotosAlbum';
                                        function UIVideoAtPathIsCompatibleWithSavedPhotosAlbum
                                        (videoPath: Pointer { NSString } )
                                        : Boolean; cdecl;
                                        external libUIKit name _PU +
                                        'UIVideoAtPathIsCompatibleWithSavedPhotosAlbum';
                                        procedure UISaveVideoAtPathToSavedPhotosAlbum
                                        (videoPath: Pointer { NSString };
                                        completionTarget: Pointer;
                                        completionSelector: SEL;
                                        contextInfo: Pointer); cdecl;
                                        external libUIKit name _PU +
                                        'UISaveVideoAtPathToSavedPhotosAlbum';

implementation

{$IF defined(IOS) and NOT defined(CPUARM)}

uses
  Posix.Dlfcn;

var
  UIKitModule: THandle;

{$ENDIF IOS}

function NSFontAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSFontAttributeName');
end;

function NSParagraphStyleAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSParagraphStyleAttributeName');
end;

function NSForegroundColorAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSForegroundColorAttributeName');
end;

function NSBackgroundColorAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSBackgroundColorAttributeName');
end;

function NSLigatureAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSLigatureAttributeName');
end;

function NSKernAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSKernAttributeName');
end;

function NSStrikethroughStyleAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSStrikethroughStyleAttributeName');
end;

function NSUnderlineStyleAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSUnderlineStyleAttributeName');
end;

function NSStrokeColorAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSStrokeColorAttributeName');
end;

function NSStrokeWidthAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSStrokeWidthAttributeName');
end;

function NSShadowAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSShadowAttributeName');
end;

function NSTextEffectAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSTextEffectAttributeName');
end;

function NSAttachmentAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSAttachmentAttributeName');
end;

function NSLinkAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSLinkAttributeName');
end;

function NSBaselineOffsetAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSBaselineOffsetAttributeName');
end;

function NSUnderlineColorAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSUnderlineColorAttributeName');
end;

function NSStrikethroughColorAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSStrikethroughColorAttributeName');
end;

function NSObliquenessAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSObliquenessAttributeName');
end;

function NSExpansionAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSExpansionAttributeName');
end;

function NSWritingDirectionAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSWritingDirectionAttributeName');
end;

function NSVerticalGlyphFormAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSVerticalGlyphFormAttributeName');
end;

function NSTextEffectLetterpressStyle: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSTextEffectLetterpressStyle');
end;

function NSPlainTextDocumentType: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSPlainTextDocumentType');
end;

function NSRTFTextDocumentType: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSRTFTextDocumentType');
end;

function NSRTFDTextDocumentType: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSRTFDTextDocumentType');
end;

function NSHTMLTextDocumentType: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSHTMLTextDocumentType');
end;

function NSTextLayoutSectionOrientation: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSTextLayoutSectionOrientation');
end;

function NSTextLayoutSectionRange: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSTextLayoutSectionRange');
end;

function NSDocumentTypeDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSDocumentTypeDocumentAttribute');
end;

function NSCharacterEncodingDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'NSCharacterEncodingDocumentAttribute');
end;

function NSDefaultAttributesDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'NSDefaultAttributesDocumentAttribute');
end;

function NSPaperSizeDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSPaperSizeDocumentAttribute');
end;

function NSPaperMarginDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSPaperMarginDocumentAttribute');
end;

function NSViewSizeDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSViewSizeDocumentAttribute');
end;

function NSViewZoomDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSViewZoomDocumentAttribute');
end;

function NSViewModeDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSViewModeDocumentAttribute');
end;

function NSReadOnlyDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSReadOnlyDocumentAttribute');
end;

function NSBackgroundColorDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSBackgroundColorDocumentAttribute');
end;

function NSHyphenationFactorDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'NSHyphenationFactorDocumentAttribute');
end;

function NSDefaultTabIntervalDocumentAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'NSDefaultTabIntervalDocumentAttribute');
end;

function NSTextLayoutSectionsAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSTextLayoutSectionsAttribute');
end;

function NSTextStorageWillProcessEditingNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'NSTextStorageWillProcessEditingNotification');
end;

function NSTextStorageDidProcessEditingNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'NSTextStorageDidProcessEditingNotification');
end;

function UIFontDescriptorFamilyAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontDescriptorFamilyAttribute');
end;

function UIFontDescriptorNameAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontDescriptorNameAttribute');
end;

function UIFontDescriptorFaceAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontDescriptorFaceAttribute');
end;

function UIFontDescriptorSizeAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontDescriptorSizeAttribute');
end;

function UIFontDescriptorVisibleNameAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIFontDescriptorVisibleNameAttribute');
end;

function UIFontDescriptorMatrixAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontDescriptorMatrixAttribute');
end;

function UIFontDescriptorCharacterSetAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIFontDescriptorCharacterSetAttribute');
end;

function UIFontDescriptorCascadeListAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIFontDescriptorCascadeListAttribute');
end;

function UIFontDescriptorTraitsAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontDescriptorTraitsAttribute');
end;

function UIFontDescriptorFixedAdvanceAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIFontDescriptorFixedAdvanceAttribute');
end;

function UIFontDescriptorFeatureSettingsAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIFontDescriptorFeatureSettingsAttribute');
end;

function UIFontDescriptorTextStyleAttribute: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontDescriptorTextStyleAttribute');
end;

function UIFontSymbolicTrait: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontSymbolicTrait');
end;

function UIFontWeightTrait: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontWeightTrait');
end;

function UIFontWidthTrait: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontWidthTrait');
end;

function UIFontSlantTrait: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontSlantTrait');
end;

function UIFontFeatureTypeIdentifierKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontFeatureTypeIdentifierKey');
end;

function UIFontFeatureSelectorIdentifierKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontFeatureSelectorIdentifierKey');
end;

function UIFontTextStyleTitle1: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleTitle1');
end;

function UIFontTextStyleTitle2: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleTitle2');
end;

function UIFontTextStyleTitle3: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleTitle3');
end;

function UIFontTextStyleHeadline: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleHeadline');
end;

function UIFontTextStyleSubheadline: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleSubheadline');
end;

function UIFontTextStyleBody: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleBody');
end;

function UIFontTextStyleCallout: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleCallout');
end;

function UIFontTextStyleFootnote: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleFootnote');
end;

function UIFontTextStyleCaption1: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleCaption1');
end;

function UIFontTextStyleCaption2: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIFontTextStyleCaption2');
end;

function NSTabColumnTerminatorsAttributeName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSTabColumnTerminatorsAttributeName');
end;

function UIKeyInputUpArrow: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyInputUpArrow');
end;

function UIKeyInputDownArrow: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyInputDownArrow');
end;

function UIKeyInputLeftArrow: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyInputLeftArrow');
end;

function UIKeyInputRightArrow: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyInputRightArrow');
end;

function UIKeyInputEscape: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyInputEscape');
end;

function UIDeviceOrientationDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIDeviceOrientationDidChangeNotification');
end;

function UIDeviceBatteryStateDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIDeviceBatteryStateDidChangeNotification');
end;

function UIDeviceBatteryLevelDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIDeviceBatteryLevelDidChangeNotification');
end;

function UIDeviceProximityStateDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIDeviceProximityStateDidChangeNotification');
end;

function UITextAttributeFont: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextAttributeFont');
end;

function UITextAttributeTextColor: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextAttributeTextColor');
end;

function UITextAttributeTextShadowColor: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextAttributeTextShadowColor');
end;

function UITextAttributeTextShadowOffset: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextAttributeTextShadowOffset');
end;

function UITableViewIndexSearch: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITableViewIndexSearch');
end;

function UITableViewSelectionDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITableViewSelectionDidChangeNotification');
end;

function UIAccessibilityAnnouncementDidFinishNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityAnnouncementDidFinishNotification');
end;

function UIAccessibilityAnnouncementKeyStringValue: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityAnnouncementKeyStringValue');
end;

function UIAccessibilityAnnouncementKeyWasSuccessful: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityAnnouncementKeyWasSuccessful');
end;

function UIAccessibilityElementFocusedNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityElementFocusedNotification');
end;

function UIAccessibilityFocusedElementKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIAccessibilityFocusedElementKey');
end;

function UIAccessibilityUnfocusedElementKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIAccessibilityUnfocusedElementKey');
end;

function UIAccessibilityAssistiveTechnologyKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityAssistiveTechnologyKey');
end;

function UIAccessibilityNotificationSwitchControlIdentifier: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityNotificationSwitchControlIdentifier');
end;

function UIAccessibilityNotificationVoiceOverIdentifier: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityNotificationVoiceOverIdentifier');
end;

function UIAccessibilitySpeechAttributePunctuation: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilitySpeechAttributePunctuation');
end;

function UIAccessibilitySpeechAttributeLanguage: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilitySpeechAttributeLanguage');
end;

function UIAccessibilitySpeechAttributePitch: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIAccessibilitySpeechAttributePitch');
end;

function UIAccessibilityVoiceOverStatusChanged: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityVoiceOverStatusChanged');
end;

function UIAccessibilityMonoAudioStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityMonoAudioStatusDidChangeNotification');
end;

function UIAccessibilityClosedCaptioningStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityClosedCaptioningStatusDidChangeNotification');
end;

function UIAccessibilityInvertColorsStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityInvertColorsStatusDidChangeNotification');
end;

function UIAccessibilityGuidedAccessStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityGuidedAccessStatusDidChangeNotification');
end;

function UIAccessibilityBoldTextStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityBoldTextStatusDidChangeNotification');
end;

function UIAccessibilityGrayscaleStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityGrayscaleStatusDidChangeNotification');
end;

function UIAccessibilityReduceTransparencyStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityReduceTransparencyStatusDidChangeNotification');
end;

function UIAccessibilityReduceMotionStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityReduceMotionStatusDidChangeNotification');
end;

function UIAccessibilityDarkerSystemColorsStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityDarkerSystemColorsStatusDidChangeNotification');
end;

function UIAccessibilitySwitchControlStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilitySwitchControlStatusDidChangeNotification');
end;

function UIAccessibilitySpeakSelectionStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilitySpeakSelectionStatusDidChangeNotification');
end;

function UIAccessibilitySpeakScreenStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilitySpeakScreenStatusDidChangeNotification');
end;

function UIAccessibilityShakeToUndoDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIAccessibilityShakeToUndoDidChangeNotification');
end;

function UITextInputTextBackgroundColorKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextInputTextBackgroundColorKey');
end;

function UITextInputTextColorKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextInputTextColorKey');
end;

function UITextInputTextFontKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextInputTextFontKey');
end;

function UITextInputCurrentInputModeDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITextInputCurrentInputModeDidChangeNotification');
end;

function UITextFieldTextDidBeginEditingNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITextFieldTextDidBeginEditingNotification');
end;

function UITextFieldTextDidEndEditingNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITextFieldTextDidEndEditingNotification');
end;

function UITextFieldTextDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITextFieldTextDidChangeNotification');
end;

function UIActivityTypePostToFacebook: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypePostToFacebook');
end;

function UIActivityTypePostToTwitter: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypePostToTwitter');
end;

function UIActivityTypePostToWeibo: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypePostToWeibo');
end;

function UIActivityTypeMessage: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeMessage');
end;

function UIActivityTypeMail: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeMail');
end;

function UIActivityTypePrint: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypePrint');
end;

function UIActivityTypeCopyToPasteboard: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeCopyToPasteboard');
end;

function UIActivityTypeAssignToContact: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeAssignToContact');
end;

function UIActivityTypeSaveToCameraRoll: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeSaveToCameraRoll');
end;

function UIActivityTypeAddToReadingList: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeAddToReadingList');
end;

function UIActivityTypePostToFlickr: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypePostToFlickr');
end;

function UIActivityTypePostToVimeo: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypePostToVimeo');
end;

function UIActivityTypePostToTencentWeibo: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypePostToTencentWeibo');
end;

function UIActivityTypeAirDrop: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeAirDrop');
end;

function UIActivityTypeOpenInIBooks: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIActivityTypeOpenInIBooks');
end;

function UIApplicationInvalidInterfaceOrientationException: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationInvalidInterfaceOrientationException');
end;

function UITrackingRunLoopMode: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITrackingRunLoopMode');
end;

function UIApplicationDidEnterBackgroundNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationDidEnterBackgroundNotification');
end;

function UIApplicationWillEnterForegroundNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationWillEnterForegroundNotification');
end;

function UIApplicationDidFinishLaunchingNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationDidFinishLaunchingNotification');
end;

function UIApplicationDidBecomeActiveNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationDidBecomeActiveNotification');
end;

function UIApplicationWillResignActiveNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationWillResignActiveNotification');
end;

function UIApplicationDidReceiveMemoryWarningNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationDidReceiveMemoryWarningNotification');
end;

function UIApplicationWillTerminateNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationWillTerminateNotification');
end;

function UIApplicationSignificantTimeChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationSignificantTimeChangeNotification');
end;

function UIApplicationWillChangeStatusBarOrientationNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationWillChangeStatusBarOrientationNotification');
end;

function UIApplicationDidChangeStatusBarOrientationNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationDidChangeStatusBarOrientationNotification');
end;

function UIApplicationStatusBarOrientationUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationStatusBarOrientationUserInfoKey');
end;

function UIApplicationWillChangeStatusBarFrameNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationWillChangeStatusBarFrameNotification');
end;

function UIApplicationDidChangeStatusBarFrameNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationDidChangeStatusBarFrameNotification');
end;

function UIApplicationStatusBarFrameUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationStatusBarFrameUserInfoKey');
end;

function UIApplicationBackgroundRefreshStatusDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationBackgroundRefreshStatusDidChangeNotification');
end;

function UIApplicationLaunchOptionsURLKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIApplicationLaunchOptionsURLKey');
end;

function UIApplicationLaunchOptionsSourceApplicationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsSourceApplicationKey');
end;

function UIApplicationLaunchOptionsRemoteNotificationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsRemoteNotificationKey');
end;

function UIApplicationLaunchOptionsLocalNotificationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsLocalNotificationKey');
end;

function UIApplicationLaunchOptionsAnnotationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsAnnotationKey');
end;

function UIApplicationProtectedDataWillBecomeUnavailable: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationProtectedDataWillBecomeUnavailable');
end;

function UIApplicationProtectedDataDidBecomeAvailable: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationProtectedDataDidBecomeAvailable');
end;

function UIApplicationLaunchOptionsLocationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsLocationKey');
end;

function UIApplicationLaunchOptionsNewsstandDownloadsKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsNewsstandDownloadsKey');
end;

function UIApplicationLaunchOptionsBluetoothCentralsKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsBluetoothCentralsKey');
end;

function UIApplicationLaunchOptionsBluetoothPeripheralsKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsBluetoothPeripheralsKey');
end;

function UIApplicationLaunchOptionsShortcutItemKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsShortcutItemKey');
end;

function UIApplicationLaunchOptionsUserActivityDictionaryKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsUserActivityDictionaryKey');
end;

function UIApplicationLaunchOptionsUserActivityTypeKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationLaunchOptionsUserActivityTypeKey');
end;

function UIApplicationOpenSettingsURLString: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIApplicationOpenSettingsURLString');
end;

function UIApplicationOpenURLOptionsSourceApplicationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationOpenURLOptionsSourceApplicationKey');
end;

function UIApplicationOpenURLOptionsAnnotationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationOpenURLOptionsAnnotationKey');
end;

function UIApplicationOpenURLOptionsOpenInPlaceKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationOpenURLOptionsOpenInPlaceKey');
end;

function UIContentSizeCategoryExtraSmall: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIContentSizeCategoryExtraSmall');
end;

function UIContentSizeCategorySmall: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIContentSizeCategorySmall');
end;

function UIContentSizeCategoryMedium: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIContentSizeCategoryMedium');
end;

function UIContentSizeCategoryLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIContentSizeCategoryLarge');
end;

function UIContentSizeCategoryExtraLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIContentSizeCategoryExtraLarge');
end;

function UIContentSizeCategoryExtraExtraLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryExtraExtraLarge');
end;

function UIContentSizeCategoryExtraExtraExtraLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryExtraExtraExtraLarge');
end;

function UIContentSizeCategoryAccessibilityMedium: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryAccessibilityMedium');
end;

function UIContentSizeCategoryAccessibilityLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryAccessibilityLarge');
end;

function UIContentSizeCategoryAccessibilityExtraLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryAccessibilityExtraLarge');
end;

function UIContentSizeCategoryAccessibilityExtraExtraLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryAccessibilityExtraExtraLarge');
end;

function UIContentSizeCategoryAccessibilityExtraExtraExtraLarge: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryAccessibilityExtraExtraExtraLarge');
end;

function UIContentSizeCategoryDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIContentSizeCategoryDidChangeNotification');
end;

function UIContentSizeCategoryNewValueKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIContentSizeCategoryNewValueKey');
end;

function UIApplicationUserDidTakeScreenshotNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationUserDidTakeScreenshotNotification');
end;

function UIApplicationKeyboardExtensionPointIdentifier: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationKeyboardExtensionPointIdentifier');
end;

function UIStateRestorationViewControllerStoryboardKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIStateRestorationViewControllerStoryboardKey');
end;

function UIApplicationStateRestorationBundleVersionKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationStateRestorationBundleVersionKey');
end;

function UIApplicationStateRestorationUserInterfaceIdiomKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationStateRestorationUserInterfaceIdiomKey');
end;

function UIApplicationStateRestorationTimestampKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationStateRestorationTimestampKey');
end;

function UIApplicationStateRestorationSystemVersionKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIApplicationStateRestorationSystemVersionKey');
end;

function UIViewControllerShowDetailTargetDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIViewControllerShowDetailTargetDidChangeNotification');
end;

function UIViewControllerHierarchyInconsistencyException: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIViewControllerHierarchyInconsistencyException');
end;

function UICollectionElementKindSectionHeader: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UICollectionElementKindSectionHeader');
end;

function UICollectionElementKindSectionFooter: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UICollectionElementKindSectionFooter');
end;

function UIDocumentStateChangedNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIDocumentStateChangedNotification');
end;

function NSUserActivityDocumentURLKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'NSUserActivityDocumentURLKey');
end;

function UIImagePickerControllerMediaType: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIImagePickerControllerMediaType');
end;

function UIImagePickerControllerOriginalImage: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIImagePickerControllerOriginalImage');
end;

function UIImagePickerControllerEditedImage: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIImagePickerControllerEditedImage');
end;

function UIImagePickerControllerCropRect: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIImagePickerControllerCropRect');
end;

function UIImagePickerControllerMediaURL: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIImagePickerControllerMediaURL');
end;

function UIImagePickerControllerReferenceURL: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIImagePickerControllerReferenceURL');
end;

function UIImagePickerControllerMediaMetadata: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIImagePickerControllerMediaMetadata');
end;

function UIImagePickerControllerLivePhoto: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIImagePickerControllerLivePhoto');
end;

function UILocalNotificationDefaultSoundName: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UILocalNotificationDefaultSoundName');
end;

function UIUserNotificationTextInputActionButtonTitleKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIUserNotificationTextInputActionButtonTitleKey');
end;

function UIUserNotificationActionResponseTypedTextKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIUserNotificationActionResponseTypedTextKey');
end;

function UIMenuControllerWillShowMenuNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIMenuControllerWillShowMenuNotification');
end;

function UIMenuControllerDidShowMenuNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIMenuControllerDidShowMenuNotification');
end;

function UIMenuControllerWillHideMenuNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIMenuControllerWillHideMenuNotification');
end;

function UIMenuControllerDidHideMenuNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIMenuControllerDidHideMenuNotification');
end;

function UIMenuControllerMenuFrameDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIMenuControllerMenuFrameDidChangeNotification');
end;

function UINibExternalObjects: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UINibExternalObjects');
end;

function UINibProxiedObjectsKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UINibProxiedObjectsKey');
end;

function UIPageViewControllerOptionSpineLocationKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIPageViewControllerOptionSpineLocationKey');
end;

function UIPageViewControllerOptionInterPageSpacingKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIPageViewControllerOptionInterPageSpacingKey');
end;

function UIPasteboardNameGeneral: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIPasteboardNameGeneral');
end;

function UIPasteboardNameFind: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIPasteboardNameFind');
end;

function UIPasteboardChangedNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIPasteboardChangedNotification');
end;

function UIPasteboardChangedTypesAddedKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIPasteboardChangedTypesAddedKey');
end;

function UIPasteboardChangedTypesRemovedKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIPasteboardChangedTypesRemovedKey');
end;

function UIPasteboardRemovedNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIPasteboardRemovedNotification');
end;

function UIPrintErrorDomain: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIPrintErrorDomain');
end;

function UIScreenDidConnectNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIScreenDidConnectNotification');
end;

function UIScreenDidDisconnectNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIScreenDidDisconnectNotification');
end;

function UIScreenModeDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIScreenModeDidChangeNotification');
end;

function UIScreenBrightnessDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIScreenBrightnessDidChangeNotification');
end;

function UITransitionContextFromViewControllerKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITransitionContextFromViewControllerKey');
end;

function UITransitionContextToViewControllerKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITransitionContextToViewControllerKey');
end;

function UITransitionContextFromViewKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITransitionContextFromViewKey');
end;

function UITransitionContextToViewKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITransitionContextToViewKey');
end;

function UITextViewTextDidBeginEditingNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITextViewTextDidBeginEditingNotification');
end;

function UITextViewTextDidChangeNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UITextViewTextDidChangeNotification');
end;

function UITextViewTextDidEndEditingNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UITextViewTextDidEndEditingNotification');
end;

function UIWindowDidBecomeVisibleNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIWindowDidBecomeVisibleNotification');
end;

function UIWindowDidBecomeHiddenNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIWindowDidBecomeHiddenNotification');
end;

function UIWindowDidBecomeKeyNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIWindowDidBecomeKeyNotification');
end;

function UIWindowDidResignKeyNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIWindowDidResignKeyNotification');
end;

function UIKeyboardWillShowNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardWillShowNotification');
end;

function UIKeyboardDidShowNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardDidShowNotification');
end;

function UIKeyboardWillHideNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardWillHideNotification');
end;

function UIKeyboardDidHideNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardDidHideNotification');
end;

function UIKeyboardFrameBeginUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardFrameBeginUserInfoKey');
end;

function UIKeyboardFrameEndUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardFrameEndUserInfoKey');
end;

function UIKeyboardAnimationDurationUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIKeyboardAnimationDurationUserInfoKey');
end;

function UIKeyboardAnimationCurveUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardAnimationCurveUserInfoKey');
end;

function UIKeyboardIsLocalUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardIsLocalUserInfoKey');
end;

function UIKeyboardWillChangeFrameNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIKeyboardWillChangeFrameNotification');
end;

function UIKeyboardDidChangeFrameNotification: NSString;
begin
  Result := CocoaNSStringConst(libUIKit,
    'UIKeyboardDidChangeFrameNotification');
end;

function UIKeyboardCenterBeginUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardCenterBeginUserInfoKey');
end;

function UIKeyboardCenterEndUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardCenterEndUserInfoKey');
end;

function UIKeyboardBoundsUserInfoKey: NSString;
begin
  Result := CocoaNSStringConst(libUIKit, 'UIKeyboardBoundsUserInfoKey');
end;

function UIEdgeInsetsZero: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIEdgeInsetsZero');
end;

function UIOffsetZero: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIOffsetZero');
end;

function UIFontWeightUltraLight: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightUltraLight');
end;

function UIFontWeightThin: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightThin');
end;

function UIFontWeightLight: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightLight');
end;

function UIFontWeightRegular: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightRegular');
end;

function UIFontWeightMedium: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightMedium');
end;

function UIFontWeightSemibold: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightSemibold');
end;

function UIFontWeightBold: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightBold');
end;

function UIFontWeightHeavy: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightHeavy');
end;

function UIFontWeightBlack: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFontWeightBlack');
end;

function UIViewNoIntrinsicMetric: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIViewNoIntrinsicMetric');
end;

function UILayoutFittingCompressedSize: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UILayoutFittingCompressedSize');
end;

function UILayoutFittingExpandedSize: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UILayoutFittingExpandedSize');
end;

function UIScrollViewDecelerationRateNormal: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIScrollViewDecelerationRateNormal');
end;

function UIScrollViewDecelerationRateFast: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIScrollViewDecelerationRateFast');
end;

function UITableViewAutomaticDimension: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UITableViewAutomaticDimension');
end;

function UIAccessibilityTraitNone: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitNone');
end;

function UIAccessibilityTraitButton: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitButton');
end;

function UIAccessibilityTraitLink: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitLink');
end;

function UIAccessibilityTraitHeader: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitHeader');
end;

function UIAccessibilityTraitSearchField: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitSearchField');
end;

function UIAccessibilityTraitImage: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitImage');
end;

function UIAccessibilityTraitSelected: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitSelected');
end;

function UIAccessibilityTraitPlaysSound: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitPlaysSound');
end;

function UIAccessibilityTraitKeyboardKey: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitKeyboardKey');
end;

function UIAccessibilityTraitStaticText: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitStaticText');
end;

function UIAccessibilityTraitSummaryElement: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitSummaryElement');
end;

function UIAccessibilityTraitNotEnabled: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitNotEnabled');
end;

function UIAccessibilityTraitUpdatesFrequently: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityTraitUpdatesFrequently');
end;

function UIAccessibilityTraitStartsMediaSession: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityTraitStartsMediaSession');
end;

function UIAccessibilityTraitAdjustable: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitAdjustable');
end;

function UIAccessibilityTraitAllowsDirectInteraction: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityTraitAllowsDirectInteraction');
end;

function UIAccessibilityTraitCausesPageTurn: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIAccessibilityTraitCausesPageTurn');
end;

function UIAccessibilityScreenChangedNotification: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityScreenChangedNotification');
end;

function UIAccessibilityLayoutChangedNotification: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityLayoutChangedNotification');
end;

function UIAccessibilityAnnouncementNotification: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityAnnouncementNotification');
end;

function UIAccessibilityPageScrolledNotification: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityPageScrolledNotification');
end;

function UIAccessibilityPauseAssistiveTechnologyNotification: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityPauseAssistiveTechnologyNotification');
end;

function UIAccessibilityResumeAssistiveTechnologyNotification: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIAccessibilityResumeAssistiveTechnologyNotification');
end;

function UIBackgroundTaskInvalid: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIBackgroundTaskInvalid');
end;

function UIMinimumKeepAliveTimeout: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIMinimumKeepAliveTimeout');
end;

function UIApplicationBackgroundFetchIntervalMinimum: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIApplicationBackgroundFetchIntervalMinimum');
end;

function UIApplicationBackgroundFetchIntervalNever: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UIApplicationBackgroundFetchIntervalNever');
end;

function UIFloatRangeZero: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFloatRangeZero');
end;

function UIFloatRangeInfinite: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIFloatRangeInfinite');
end;

function UINavigationControllerHideShowBarDuration: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UINavigationControllerHideShowBarDuration');
end;

function UIPasteboardTypeListString: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIPasteboardTypeListString');
end;

function UIPasteboardTypeListURL: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIPasteboardTypeListURL');
end;

function UIPasteboardTypeListImage: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIPasteboardTypeListImage');
end;

function UIPasteboardTypeListColor: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIPasteboardTypeListColor');
end;

function UISplitViewControllerAutomaticDimension: Pointer;
begin
  Result := CocoaPointerConst(libUIKit,
    'UISplitViewControllerAutomaticDimension');
end;

function UIWindowLevelNormal: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIWindowLevelNormal');
end;

function UIWindowLevelAlert: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIWindowLevelAlert');
end;

function UIWindowLevelStatusBar: Pointer;
begin
  Result := CocoaPointerConst(libUIKit, 'UIWindowLevelStatusBar');
end;

{$IF defined(IOS) and NOT defined(CPUARM)}

initialization

UIKitModule := dlopen(MarshaledAString(libUIKit), RTLD_LAZY);

finalization

dlclose(UIKitModule);
{$ENDIF IOS}

end.
